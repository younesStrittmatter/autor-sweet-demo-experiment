{"version":3,"file":"index.browser.min.js","sources":["../../../node_modules/auto-bind/index.js","../src/ExtensionManager.ts","../src/modules/utils.ts","../src/modules/data/DataColumn.ts","../src/modules/data/utils.ts","../src/modules/data/DataCollection.ts","../src/modules/data/index.ts","../src/modules/plugin-api/KeyboardListenerAPI.ts","../src/modules/plugins.ts","../src/modules/plugin-api/AudioPlayer.ts","../src/modules/plugin-api/MediaAPI.ts","../src/modules/plugin-api/SimulationAPI.ts","../src/modules/plugin-api/TimeoutAPI.ts","../src/modules/plugin-api/index.ts","../../../node_modules/random-words/index.js","../../../node_modules/seedrandom/lib/alea.js","../src/modules/randomization.ts","../src/modules/turk.ts","../src/ProgressBar.ts","../src/timeline/index.ts","../src/timeline/util.ts","../src/timeline/TimelineNode.ts","../src/timeline/Trial.ts","../src/timeline/Timeline.ts","../src/JsPsych.ts","../src/migration.ts","../src/index.ts"],"sourcesContent":["'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nmodule.exports = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n","import { Class } from \"type-fest\";\n\nimport { JsPsychExtension, JsPsychExtensionInfo } from \"./modules/extensions\";\nimport { TrialExtensionsConfiguration } from \"./timeline\";\n\nexport type GlobalExtensionsConfiguration = Array<{\n  type: Class<JsPsychExtension>;\n  params?: Record<string, any>;\n}>;\n\nexport interface ExtensionManagerDependencies {\n  /**\n   * Given an extension class, create a new instance of it and return it.\n   */\n  instantiateExtension(extensionClass: Class<JsPsychExtension>): JsPsychExtension;\n}\n\nexport class ExtensionManager {\n  private static getExtensionNameByClass(extensionClass: Class<JsPsychExtension>) {\n    return (extensionClass[\"info\"] as JsPsychExtensionInfo).name;\n  }\n\n  public readonly extensions: Record<string, JsPsychExtension>;\n\n  constructor(\n    private dependencies: ExtensionManagerDependencies,\n    private extensionsConfiguration: GlobalExtensionsConfiguration\n  ) {\n    this.extensions = Object.fromEntries(\n      extensionsConfiguration.map((extension) => [\n        ExtensionManager.getExtensionNameByClass(extension.type),\n        this.dependencies.instantiateExtension(extension.type),\n      ])\n    );\n  }\n\n  private getExtensionInstanceByClass(extensionClass: Class<JsPsychExtension>) {\n    return this.extensions[ExtensionManager.getExtensionNameByClass(extensionClass)];\n  }\n\n  public async initializeExtensions() {\n    await Promise.all(\n      this.extensionsConfiguration.map(({ type, params = {} }) => {\n        this.getExtensionInstanceByClass(type).initialize(params);\n\n        const extensionInfo = type[\"info\"] as JsPsychExtensionInfo;\n\n        if (!(\"version\" in extensionInfo) && !(\"data\" in extensionInfo)) {\n          console.warn(\n            extensionInfo[\"name\"],\n            \"is missing the 'version' and 'data' fields. Please update extension as 'version' and 'data' will be required in v9. See https://www.jspsych.org/latest/developers/extension-development/ for more details.\"\n          );\n        } else if (!(\"version\" in extensionInfo)) {\n          console.warn(\n            extensionInfo[\"name\"],\n            \"is missing the 'version' field. Please update extension as 'version' will be required in v9. See https://www.jspsych.org/latest/developers/extension-development/ for more details.\"\n          );\n        } else if (!(\"data\" in extensionInfo)) {\n          console.warn(\n            extensionInfo[\"name\"],\n            \"is missing the 'data' field. Please update extension as 'data' will be required in v9. See https://www.jspsych.org/latest/developers/extension-development/ for more details.\"\n          );\n        }\n      })\n    );\n  }\n\n  public onStart(trialExtensionsConfiguration: TrialExtensionsConfiguration = []) {\n    for (const { type, params } of trialExtensionsConfiguration) {\n      this.getExtensionInstanceByClass(type)?.on_start(params);\n    }\n  }\n\n  public onLoad(trialExtensionsConfiguration: TrialExtensionsConfiguration = []) {\n    for (const { type, params } of trialExtensionsConfiguration) {\n      this.getExtensionInstanceByClass(type)?.on_load(params);\n    }\n  }\n\n  public async onFinish(\n    trialExtensionsConfiguration: TrialExtensionsConfiguration = []\n  ): Promise<Record<string, any>> {\n    const results = await Promise.all(\n      trialExtensionsConfiguration.map(({ type, params }) =>\n        Promise.resolve(this.getExtensionInstanceByClass(type)?.on_finish(params))\n      )\n    );\n\n    const extensionInfos = trialExtensionsConfiguration.length\n      ? {\n          extension_type: trialExtensionsConfiguration.map(({ type }) => type[\"info\"].name),\n          extension_version: trialExtensionsConfiguration.map(({ type }) => type[\"info\"].version),\n        }\n      : {};\n\n    results.unshift(extensionInfos);\n\n    return Object.assign({}, ...results);\n  }\n}\n","/**\n * Finds all of the unique items in an array.\n * @param arr The array to extract unique values from\n * @returns An array with one copy of each unique item in `arr`\n */\nexport function unique(arr: Array<any>) {\n  return [...new Set(arr)];\n}\n\nexport function deepCopy(obj) {\n  if (!obj) return obj;\n  let out;\n  if (Array.isArray(obj)) {\n    out = [];\n    for (const x of obj) {\n      out.push(deepCopy(x));\n    }\n    return out;\n  } else if (typeof obj === \"object\" && obj !== null) {\n    out = {};\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        out[key] = deepCopy(obj[key]);\n      }\n    }\n    return out;\n  } else {\n    return obj;\n  }\n}\n\n/**\n * Merges two objects, recursively.\n * @param obj1 Object to merge\n * @param obj2 Object to merge\n */\nexport function deepMerge(obj1: any, obj2: any): any {\n  let merged = {};\n  for (const key in obj1) {\n    if (obj1.hasOwnProperty(key)) {\n      if (typeof obj1[key] === \"object\" && obj2.hasOwnProperty(key)) {\n        merged[key] = deepMerge(obj1[key], obj2[key]);\n      } else {\n        merged[key] = obj1[key];\n      }\n    }\n  }\n  for (const key in obj2) {\n    if (obj2.hasOwnProperty(key)) {\n      if (!merged.hasOwnProperty(key)) {\n        merged[key] = obj2[key];\n      } else if (typeof obj2[key] === \"object\") {\n        merged[key] = deepMerge(merged[key], obj2[key]);\n      } else {\n        merged[key] = obj2[key];\n      }\n    }\n  }\n\n  return merged;\n}\n","export class DataColumn {\n  constructor(public values = []) {}\n\n  sum() {\n    let s = 0;\n    for (const v of this.values) {\n      s += v;\n    }\n    return s;\n  }\n\n  mean() {\n    let sum = 0;\n    let count = 0;\n    for (const value of this.values) {\n      if (typeof value !== \"undefined\" && value !== null) {\n        sum += value;\n        count++;\n      }\n    }\n    if (count === 0) {\n      return undefined;\n    }\n    return sum / count;\n  }\n\n  median() {\n    if (this.values.length === 0) {\n      return undefined;\n    }\n    const numbers = this.values.slice(0).sort(function (a, b) {\n      return a - b;\n    });\n    const middle = Math.floor(numbers.length / 2);\n    const isEven = numbers.length % 2 === 0;\n    return isEven ? (numbers[middle] + numbers[middle - 1]) / 2 : numbers[middle];\n  }\n\n  min() {\n    return Math.min.apply(null, this.values);\n  }\n\n  max() {\n    return Math.max.apply(null, this.values);\n  }\n\n  count() {\n    return this.values.length;\n  }\n\n  variance() {\n    const mean = this.mean();\n    let sum_square_error = 0;\n    for (const x of this.values) {\n      sum_square_error += Math.pow(x - mean, 2);\n    }\n    const mse = sum_square_error / (this.values.length - 1);\n    return mse;\n  }\n\n  sd() {\n    const mse = this.variance();\n    const rmse = Math.sqrt(mse);\n    return rmse;\n  }\n\n  frequencies() {\n    const unique = {};\n    for (const x of this.values) {\n      if (typeof unique[x] === \"undefined\") {\n        unique[x] = 1;\n      } else {\n        unique[x]++;\n      }\n    }\n    return unique;\n  }\n\n  all(eval_fn) {\n    for (const x of this.values) {\n      if (!eval_fn(x)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  subset(eval_fn) {\n    const out = [];\n    for (const x of this.values) {\n      if (eval_fn(x)) {\n        out.push(x);\n      }\n    }\n    return new DataColumn(out);\n  }\n}\n","// private function to save text file on local drive\nexport function saveTextToFile(textstr: string, filename: string) {\n  const blobToSave = new Blob([textstr], {\n    type: \"text/plain\",\n  });\n  let blobURL = \"\";\n  if (typeof window.webkitURL !== \"undefined\") {\n    blobURL = window.webkitURL.createObjectURL(blobToSave);\n  } else {\n    blobURL = window.URL.createObjectURL(blobToSave);\n  }\n\n  const link = document.createElement(\"a\");\n  link.id = \"jspsych-download-as-text-link\";\n  link.style.display = \"none\";\n  link.download = filename;\n  link.href = blobURL;\n  link.click();\n}\n\n// this function based on code suggested by StackOverflow users:\n// http://stackoverflow.com/users/64741/zachary\n// http://stackoverflow.com/users/317/joseph-sturtevant\n\nexport function JSON2CSV(objArray) {\n  const array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\n  let line = \"\";\n  let result = \"\";\n  const columns = [];\n\n  for (const row of array) {\n    for (const key in row) {\n      let keyString = key + \"\";\n      keyString = '\"' + keyString.replace(/\"/g, '\"\"') + '\",';\n      if (!columns.includes(key)) {\n        columns.push(key);\n        line += keyString;\n      }\n    }\n  }\n\n  line = line.slice(0, -1); // removes last comma\n  result += line + \"\\r\\n\";\n\n  for (const row of array) {\n    line = \"\";\n    for (const col of columns) {\n      let value = typeof row[col] === \"undefined\" ? \"\" : row[col];\n      if (typeof value == \"object\") {\n        value = JSON.stringify(value);\n      }\n      const valueString = value + \"\";\n      line += '\"' + valueString.replace(/\"/g, '\"\"') + '\",';\n    }\n\n    line = line.slice(0, -1);\n    result += line + \"\\r\\n\";\n  }\n\n  return result;\n}\n\n// this function is modified from StackOverflow:\n// http://stackoverflow.com/posts/3855394\n\nexport function getQueryString() {\n  const a = window.location.search.substr(1).split(\"&\");\n  const b = {};\n  for (let i = 0; i < a.length; ++i) {\n    const p = a[i].split(\"=\", 2);\n    if (p.length == 1) b[p[0]] = \"\";\n    else b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n  }\n  return b;\n}\n","import { deepCopy } from \"../utils\";\nimport { DataColumn } from \"./DataColumn\";\nimport { JSON2CSV, saveTextToFile } from \"./utils\";\n\nexport class DataCollection {\n  private trials: any[];\n\n  constructor(data = []) {\n    this.trials = data;\n  }\n\n  push(new_data) {\n    this.trials.push(new_data);\n    return this;\n  }\n\n  join(other_data_collection: DataCollection) {\n    this.trials = this.trials.concat(other_data_collection.values());\n    return this;\n  }\n\n  top() {\n    if (this.trials.length <= 1) {\n      return this;\n    } else {\n      return new DataCollection([this.trials[this.trials.length - 1]]);\n    }\n  }\n\n  /**\n   * Queries the first n elements in a collection of trials.\n   *\n   * @param n A positive integer of elements to return. A value of\n   *          n that is less than 1 will throw an error.\n   *\n   * @return First n objects of a collection of trials. If fewer than\n   *         n trials are available, the trials.length elements will\n   *         be returned.\n   *\n   */\n  first(n = 1) {\n    if (n < 1) {\n      throw `You must query with a positive nonzero integer. Please use a\n               different value for n.`;\n    }\n    if (this.trials.length === 0) return new DataCollection();\n    if (n > this.trials.length) n = this.trials.length;\n    return new DataCollection(this.trials.slice(0, n));\n  }\n\n  /**\n   * Queries the last n elements in a collection of trials.\n   *\n   * @param n A positive integer of elements to return. A value of\n   *          n that is less than 1 will throw an error.\n   *\n   * @return Last n objects of a collection of trials. If fewer than\n   *         n trials are available, the trials.length elements will\n   *         be returned.\n   *\n   */\n  last(n = 1) {\n    if (n < 1) {\n      throw `You must query with a positive nonzero integer. Please use a\n               different value for n.`;\n    }\n    if (this.trials.length === 0) return new DataCollection();\n    if (n > this.trials.length) n = this.trials.length;\n    return new DataCollection(this.trials.slice(this.trials.length - n, this.trials.length));\n  }\n\n  values() {\n    return this.trials;\n  }\n\n  count() {\n    return this.trials.length;\n  }\n\n  readOnly() {\n    return new DataCollection(deepCopy(this.trials));\n  }\n\n  addToAll(properties) {\n    for (const trial of this.trials) {\n      Object.assign(trial, properties);\n    }\n    return this;\n  }\n\n  addToLast(properties) {\n    if (this.trials.length > 0) {\n      Object.assign(this.trials[this.trials.length - 1], properties);\n    }\n    return this;\n  }\n\n  filter(filters) {\n    // [{p1: v1, p2:v2}, {p1:v2}]\n    // {p1: v1}\n    let f;\n    if (!Array.isArray(filters)) {\n      f = deepCopy([filters]);\n    } else {\n      f = deepCopy(filters);\n    }\n\n    const filtered_data = [];\n    for (const trial of this.trials) {\n      let keep = false;\n      for (const filter of f) {\n        let match = true;\n        for (const key of Object.keys(filter)) {\n          if (typeof trial[key] !== \"undefined\" && trial[key] === filter[key]) {\n            // matches on this key!\n          } else {\n            match = false;\n          }\n        }\n        if (match) {\n          keep = true;\n          break;\n        } // can break because each filter is OR.\n      }\n      if (keep) {\n        filtered_data.push(trial);\n      }\n    }\n\n    return new DataCollection(filtered_data);\n  }\n\n  filterCustom(fn) {\n    return new DataCollection(this.trials.filter(fn));\n  }\n\n  filterColumns(columns: Array<string>) {\n    return new DataCollection(\n      this.trials.map((trial) =>\n        Object.fromEntries(columns.filter((key) => key in trial).map((key) => [key, trial[key]]))\n      )\n    );\n  }\n\n  select(column) {\n    const values = [];\n    for (const trial of this.trials) {\n      if (typeof trial[column] !== \"undefined\") {\n        values.push(trial[column]);\n      }\n    }\n    return new DataColumn(values);\n  }\n\n  ignore(columns) {\n    if (!Array.isArray(columns)) {\n      columns = [columns];\n    }\n    const o = deepCopy(this.trials);\n    for (const trial of o) {\n      for (const delete_key of columns) {\n        delete trial[delete_key];\n      }\n    }\n    return new DataCollection(o);\n  }\n\n  uniqueNames() {\n    const names = [];\n\n    for (const trial of this.trials) {\n      for (const key of Object.keys(trial)) {\n        if (!names.includes(key)) {\n          names.push(key);\n        }\n      }\n    }\n\n    return names;\n  }\n\n  csv() {\n    return JSON2CSV(this.trials);\n  }\n\n  json(pretty = false) {\n    if (pretty) {\n      return JSON.stringify(this.trials, null, \"\\t\");\n    }\n    return JSON.stringify(this.trials);\n  }\n\n  localSave(format, filename) {\n    format = format.toLowerCase();\n    let data_string;\n    if (format === \"json\") {\n      data_string = this.json();\n    } else if (format === \"csv\") {\n      data_string = this.csv();\n    } else {\n      throw new Error('Invalid format specified for localSave. Must be \"json\" or \"csv\".');\n    }\n\n    saveTextToFile(data_string, filename);\n  }\n}\n","import { TrialResult } from \"../../timeline\";\nimport { Trial } from \"../../timeline/Trial\";\nimport { DataCollection } from \"./DataCollection\";\nimport { getQueryString } from \"./utils\";\n\nexport type InteractionEvent = \"blur\" | \"focus\" | \"fullscreenenter\" | \"fullscreenexit\";\n\nexport interface InteractionRecord {\n  event: InteractionEvent;\n  trial: number;\n  time: number;\n}\n\n/**\n * Functions and options needed by the `JsPsychData` module\n */\nexport interface JsPsychDataDependencies {\n  /**\n   * Returns progress information for interaction records.\n   */\n  getProgress: () => { trial: number; time: number };\n\n  onInteractionRecordAdded: (record: InteractionRecord) => void;\n\n  getDisplayElement: () => HTMLElement;\n}\n\nexport class JsPsychData {\n  private results: DataCollection;\n  private resultToTrialMap: WeakMap<TrialResult, Trial>;\n\n  /** Browser interaction event data */\n  private interactionRecords: DataCollection;\n\n  /** Data properties for all trials */\n  private dataProperties = {};\n\n  // cache the query_string\n  private query_string;\n\n  constructor(private dependencies: JsPsychDataDependencies) {\n    this.reset();\n  }\n\n  reset() {\n    this.results = new DataCollection();\n    this.resultToTrialMap = new WeakMap<TrialResult, Trial>();\n    this.interactionRecords = new DataCollection();\n  }\n\n  get() {\n    return this.results;\n  }\n\n  getInteractionData() {\n    return this.interactionRecords;\n  }\n\n  write(trial: Trial) {\n    const result = trial.getResult();\n    Object.assign(result, this.dataProperties);\n    this.results.push(result);\n    this.resultToTrialMap.set(result, trial);\n  }\n\n  addProperties(properties) {\n    // first, add the properties to all data that's already stored\n    this.results.addToAll(properties);\n\n    // now add to list so that it gets appended to all future data\n    this.dataProperties = Object.assign({}, this.dataProperties, properties);\n  }\n\n  addDataToLastTrial(data) {\n    this.results.addToLast(data);\n  }\n\n  getLastTrialData() {\n    return this.results.top();\n  }\n\n  getLastTimelineData() {\n    const lastResult = this.getLastTrialData().values()[0];\n\n    return new DataCollection(\n      lastResult ? this.resultToTrialMap.get(lastResult).parent.getResults() : []\n    );\n  }\n\n  displayData(format = \"json\") {\n    format = format.toLowerCase();\n    if (format !== \"json\" && format !== \"csv\") {\n      console.log(\"Invalid format declared for displayData function. Using json as default.\");\n      format = \"json\";\n    }\n\n    const dataContainer = document.createElement(\"pre\");\n    dataContainer.id = \"jspsych-data-display\";\n    dataContainer.textContent = format === \"json\" ? this.results.json(true) : this.results.csv();\n\n    this.dependencies.getDisplayElement().replaceChildren(dataContainer);\n  }\n\n  urlVariables() {\n    if (typeof this.query_string == \"undefined\") {\n      this.query_string = getQueryString();\n    }\n    return this.query_string;\n  }\n\n  getURLVariable(whichvar) {\n    return this.urlVariables()[whichvar];\n  }\n\n  private addInteractionRecord(event: InteractionEvent) {\n    const record: InteractionRecord = { event, ...this.dependencies.getProgress() };\n    this.interactionRecords.push(record);\n    this.dependencies.onInteractionRecordAdded(record);\n  }\n\n  private interactionListeners = {\n    blur: () => {\n      this.addInteractionRecord(\"blur\");\n    },\n    focus: () => {\n      this.addInteractionRecord(\"focus\");\n    },\n    fullscreenchange: () => {\n      this.addInteractionRecord(\n        // @ts-expect-error\n        document.isFullScreen ||\n          // @ts-expect-error\n          document.webkitIsFullScreen ||\n          // @ts-expect-error\n          document.mozIsFullScreen ||\n          document.fullscreenElement\n          ? \"fullscreenenter\"\n          : \"fullscreenexit\"\n      );\n    },\n  };\n\n  createInteractionListeners() {\n    window.addEventListener(\"blur\", this.interactionListeners.blur);\n    window.addEventListener(\"focus\", this.interactionListeners.focus);\n\n    document.addEventListener(\"fullscreenchange\", this.interactionListeners.fullscreenchange);\n    document.addEventListener(\"mozfullscreenchange\", this.interactionListeners.fullscreenchange);\n    document.addEventListener(\"webkitfullscreenchange\", this.interactionListeners.fullscreenchange);\n  }\n\n  removeInteractionListeners() {\n    window.removeEventListener(\"blur\", this.interactionListeners.blur);\n    window.removeEventListener(\"focus\", this.interactionListeners.focus);\n\n    document.removeEventListener(\"fullscreenchange\", this.interactionListeners.fullscreenchange);\n    document.removeEventListener(\"mozfullscreenchange\", this.interactionListeners.fullscreenchange);\n    document.removeEventListener(\n      \"webkitfullscreenchange\",\n      this.interactionListeners.fullscreenchange\n    );\n  }\n}\n","import autoBind from \"auto-bind\";\n\nexport type KeyboardListener = (e: KeyboardEvent) => void;\n\nexport type ValidResponses = string[] | \"ALL_KEYS\" | \"NO_KEYS\";\n\nexport interface GetKeyboardResponseOptions {\n  callback_function: any;\n  valid_responses?: ValidResponses;\n  rt_method?: \"performance\" | \"audio\";\n  persist?: boolean;\n  audio_context?: AudioContext;\n  audio_context_start_time?: number;\n  allow_held_key?: boolean;\n  minimum_valid_rt?: number;\n}\n\nexport class KeyboardListenerAPI {\n  constructor(\n    private getRootElement: () => Element | undefined,\n    private areResponsesCaseSensitive: boolean = false,\n    private minimumValidRt = 0\n  ) {\n    autoBind(this);\n    this.registerRootListeners();\n  }\n\n  private listeners = new Set<KeyboardListener>();\n  private heldKeys = new Set<string>();\n\n  private areRootListenersRegistered = false;\n\n  /**\n   * If not previously done and `this.getRootElement()` returns an element, adds the root key\n   * listeners to that element.\n   */\n  private registerRootListeners() {\n    if (!this.areRootListenersRegistered) {\n      const rootElement = this.getRootElement();\n      if (rootElement) {\n        rootElement.addEventListener(\"keydown\", this.rootKeydownListener);\n        rootElement.addEventListener(\"keyup\", this.rootKeyupListener);\n        this.areRootListenersRegistered = true;\n      }\n    }\n  }\n\n  private rootKeydownListener(e: KeyboardEvent) {\n    // Iterate over a static copy of the listeners set because listeners might add other listeners\n    // that we do not want to be included in the loop\n    for (const listener of Array.from(this.listeners)) {\n      listener(e);\n    }\n    this.heldKeys.add(this.toLowerCaseIfInsensitive(e.key));\n  }\n\n  private toLowerCaseIfInsensitive(string: string) {\n    return this.areResponsesCaseSensitive ? string : string.toLowerCase();\n  }\n\n  private rootKeyupListener(e: KeyboardEvent) {\n    this.heldKeys.delete(this.toLowerCaseIfInsensitive(e.key));\n  }\n\n  private isResponseValid(validResponses: ValidResponses, allowHeldKey: boolean, key: string) {\n    // check if key was already held down\n    if (!allowHeldKey && this.heldKeys.has(key)) {\n      return false;\n    }\n\n    if (validResponses === \"ALL_KEYS\") {\n      return true;\n    }\n    if (validResponses === \"NO_KEYS\") {\n      return false;\n    }\n\n    return validResponses.includes(key);\n  }\n\n  getKeyboardResponse({\n    callback_function,\n    valid_responses = \"ALL_KEYS\",\n    rt_method = \"performance\",\n    persist,\n    audio_context,\n    audio_context_start_time,\n    allow_held_key = false,\n    minimum_valid_rt = this.minimumValidRt,\n  }: GetKeyboardResponseOptions) {\n    if (rt_method !== \"performance\" && rt_method !== \"audio\") {\n      console.log(\n        'Invalid RT method specified in getKeyboardResponse. Defaulting to \"performance\" method.'\n      );\n      rt_method = \"performance\";\n    }\n\n    const usePerformanceRt = rt_method === \"performance\";\n    const startTime = usePerformanceRt ? performance.now() : audio_context_start_time * 1000;\n\n    this.registerRootListeners();\n\n    if (!this.areResponsesCaseSensitive && typeof valid_responses !== \"string\") {\n      valid_responses = valid_responses.map((r) => r.toLowerCase());\n    }\n\n    const listener: KeyboardListener = (e) => {\n      const rt = Math.round(\n        (rt_method == \"performance\" ? performance.now() : audio_context.currentTime * 1000) -\n          startTime\n      );\n      if (rt < minimum_valid_rt) {\n        return;\n      }\n\n      const key = this.toLowerCaseIfInsensitive(e.key);\n\n      if (this.isResponseValid(valid_responses, allow_held_key, key)) {\n        // if this is a valid response, then we don't want the key event to trigger other actions\n        // like scrolling via the spacebar.\n        e.preventDefault();\n\n        if (!persist) {\n          // remove keyboard listener if it exists\n          this.cancelKeyboardResponse(listener);\n        }\n\n        callback_function({ key: e.key, rt });\n      }\n    };\n\n    this.listeners.add(listener);\n    return listener;\n  }\n\n  cancelKeyboardResponse(listener: KeyboardListener) {\n    // remove the listener from the set of listeners if it is contained\n    this.listeners.delete(listener);\n  }\n\n  cancelAllKeyboardResponses() {\n    this.listeners.clear();\n  }\n\n  compareKeys(key1: string | null, key2: string | null) {\n    if (\n      (typeof key1 !== \"string\" && key1 !== null) ||\n      (typeof key2 !== \"string\" && key2 !== null)\n    ) {\n      console.error(\n        \"Error in jsPsych.pluginAPI.compareKeys: arguments must be key strings or null.\"\n      );\n      return undefined;\n    }\n\n    if (typeof key1 === \"string\" && typeof key2 === \"string\") {\n      // if both values are strings, then check whether or not letter case should be converted before comparing (case_sensitive_responses in initJsPsych)\n      return this.areResponsesCaseSensitive\n        ? key1 === key2\n        : key1.toLowerCase() === key2.toLowerCase();\n    }\n\n    return key1 === null && key2 === null;\n  }\n}\n","import { SetRequired } from \"type-fest\";\n\nimport { SimulationMode, SimulationOptions, TrialDescription, TrialResult } from \"../timeline\";\n\n/**\n * Parameter types for plugins\n */\nexport enum ParameterType {\n  BOOL,\n  STRING,\n  INT,\n  FLOAT,\n  FUNCTION,\n  KEY,\n  KEYS,\n  SELECT,\n  HTML_STRING,\n  IMAGE,\n  AUDIO,\n  VIDEO,\n  OBJECT,\n  COMPLEX,\n  TIMELINE,\n}\n\ntype ParameterTypeMap = {\n  [ParameterType.BOOL]: boolean;\n  [ParameterType.STRING]: string;\n  [ParameterType.INT]: number;\n  [ParameterType.FLOAT]: number;\n  [ParameterType.FUNCTION]: (...args: any[]) => any;\n  [ParameterType.KEY]: string;\n  [ParameterType.KEYS]: string[] | \"ALL_KEYS\" | \"NO_KEYS\";\n  [ParameterType.SELECT]: any;\n  [ParameterType.HTML_STRING]: string;\n  [ParameterType.IMAGE]: string;\n  [ParameterType.AUDIO]: string;\n  [ParameterType.VIDEO]: string;\n  [ParameterType.OBJECT]: object;\n  [ParameterType.COMPLEX]: any;\n  [ParameterType.TIMELINE]: any;\n};\n\ntype PreloadParameterType = ParameterType.AUDIO | ParameterType.VIDEO | ParameterType.IMAGE;\n\nexport type ParameterInfo = (\n  | { type: Exclude<ParameterType, ParameterType.COMPLEX | PreloadParameterType> }\n  | { type: ParameterType.COMPLEX; nested?: ParameterInfos }\n  | { type: PreloadParameterType; preload?: boolean }\n) & {\n  array?: boolean;\n  pretty_name?: string;\n  default?: any;\n};\n\nexport type ParameterInfos = Record<string, ParameterInfo>;\n\ntype InferredParameter<I extends ParameterInfo> = I[\"array\"] extends true\n  ? Array<ParameterTypeMap[I[\"type\"]]>\n  : ParameterTypeMap[I[\"type\"]];\n\ntype RequiredParameterNames<I extends ParameterInfos> = {\n  [K in keyof I]: I[K][\"default\"] extends undefined ? K : never;\n}[keyof I];\n\ntype InferredParameters<I extends ParameterInfos> = SetRequired<\n  {\n    [Property in keyof I]?: InferredParameter<I[Property]>;\n  },\n  RequiredParameterNames<I>\n>;\n\nexport const universalPluginParameters = <const>{\n  /**\n   * Data to add to this trial (key-value pairs)\n   */\n  data: {\n    type: ParameterType.OBJECT,\n    pretty_name: \"Data\",\n    default: {},\n  },\n  /**\n   * Function to execute when trial begins\n   */\n  on_start: {\n    type: ParameterType.FUNCTION,\n    pretty_name: \"On start\",\n    default: function () {\n      return;\n    },\n  },\n  /**\n   * Function to execute when trial is finished\n   */\n  on_finish: {\n    type: ParameterType.FUNCTION,\n    pretty_name: \"On finish\",\n    default: function () {\n      return;\n    },\n  },\n  /**\n   * Function to execute after the trial has loaded\n   */\n  on_load: {\n    type: ParameterType.FUNCTION,\n    pretty_name: \"On load\",\n    default: function () {\n      return;\n    },\n  },\n  /**\n   * Length of gap between the end of this trial and the start of the next trial\n   */\n  post_trial_gap: {\n    type: ParameterType.INT,\n    pretty_name: \"Post trial gap\",\n    default: 0,\n  },\n  /**\n   * A list of CSS classes to add to the jsPsych display element for the duration of this trial\n   */\n  css_classes: {\n    type: ParameterType.STRING,\n    pretty_name: \"Custom CSS classes\",\n    default: \"\",\n  },\n  /**\n   * Options to control simulation mode for the trial.\n   */\n  simulation_options: {\n    type: ParameterType.COMPLEX,\n    default: {},\n  },\n};\n\nexport type UniversalPluginParameters = InferredParameters<typeof universalPluginParameters>;\n\nexport interface PluginInfo {\n  name: string;\n  version?: string;\n  parameters: ParameterInfos;\n  data?: ParameterInfos;\n}\n\nexport interface JsPsychPlugin<I extends PluginInfo> {\n  trial(\n    display_element: HTMLElement,\n    trial: TrialType<I>,\n    on_load?: () => void\n  ): void | Promise<TrialResult | void>;\n\n  simulate?(\n    trial: TrialType<I>,\n    simulation_mode: SimulationMode,\n    simulation_options: SimulationOptions,\n    on_load?: () => void\n  ): void | Promise<TrialResult | void>;\n}\n\nexport type TrialType<I extends PluginInfo> = InferredParameters<I[\"parameters\"]> &\n  TrialDescription;\n\nexport type PluginParameters<I extends PluginInfo> = InferredParameters<I[\"parameters\"]>;\n","export interface AudioPlayerOptions {\n  useWebAudio: boolean;\n  audioContext?: AudioContext;\n}\n\nexport interface AudioPlayerInterface {\n  load(): Promise<void>;\n  play(): void;\n  stop(): void;\n  addEventListener(eventName: string, callback: EventListenerOrEventListenerObject): void;\n  removeEventListener(eventName: string, callback: EventListenerOrEventListenerObject): void;\n}\n\nexport class AudioPlayer implements AudioPlayerInterface {\n  private audio: HTMLAudioElement | AudioBufferSourceNode;\n  private webAudioBuffer: AudioBuffer;\n  private audioContext: AudioContext | null;\n  private useWebAudio: boolean;\n  private src: string;\n\n  constructor(src: string, options: AudioPlayerOptions = { useWebAudio: false }) {\n    this.src = src;\n    this.useWebAudio = options.useWebAudio;\n    this.audioContext = options.audioContext || null;\n  }\n\n  async load() {\n    if (this.useWebAudio) {\n      this.webAudioBuffer = await this.preloadWebAudio(this.src);\n    } else {\n      this.audio = await this.preloadHTMLAudio(this.src);\n    }\n  }\n\n  play() {\n    if (this.audio instanceof HTMLAudioElement) {\n      this.audio.play();\n    } else {\n      // If audio is not HTMLAudioElement, it must be a WebAudio API object, so create a source node.\n      if (!this.audio) this.audio = this.getAudioSourceNode(this.webAudioBuffer);\n      this.audio.start();\n    }\n  }\n\n  stop() {\n    if (this.audio instanceof HTMLAudioElement) {\n      this.audio.pause();\n      this.audio.currentTime = 0;\n    } else {\n      this.audio!.stop();\n      // Regenerate source node for audio since the previous one is stopped and unusable.\n      this.audio = this.getAudioSourceNode(this.webAudioBuffer);\n    }\n  }\n\n  addEventListener(eventName: string, callback: EventListenerOrEventListenerObject) {\n    // If WebAudio buffer exists but source node doesn't, create it.\n    if (!this.audio && this.webAudioBuffer)\n      this.audio = this.getAudioSourceNode(this.webAudioBuffer);\n    this.audio.addEventListener(eventName, callback);\n  }\n\n  removeEventListener(eventName: string, callback: EventListenerOrEventListenerObject) {\n    // If WebAudio buffer exists but source node doesn't, create it.\n    if (!this.audio && this.webAudioBuffer)\n      this.audio = this.getAudioSourceNode(this.webAudioBuffer);\n    this.audio.removeEventListener(eventName, callback);\n  }\n\n  private getAudioSourceNode(audioBuffer: AudioBuffer): AudioBufferSourceNode {\n    const source = this.audioContext!.createBufferSource();\n    source.buffer = audioBuffer;\n    source.connect(this.audioContext!.destination);\n    return source;\n  }\n\n  private async preloadWebAudio(src: string): Promise<AudioBuffer> {\n    const buffer = await fetch(src);\n    const arrayBuffer = await buffer.arrayBuffer();\n    const audioBuffer = await this.audioContext!.decodeAudioData(arrayBuffer);\n    const source = this.audioContext!.createBufferSource();\n    source.buffer = audioBuffer;\n    source.connect(this.audioContext!.destination);\n    return audioBuffer;\n  }\n\n  private async preloadHTMLAudio(src: string): Promise<HTMLAudioElement> {\n    return new Promise<HTMLAudioElement>((resolve, reject) => {\n      const audio = new Audio(src);\n      audio.addEventListener(\"canplaythrough\", () => {\n        resolve(audio);\n      });\n      audio.addEventListener(\"error\", (err) => {\n        reject(err);\n      });\n      audio.addEventListener(\"abort\", (err) => {\n        reject(err);\n      });\n    });\n  }\n}\n","import { ParameterType } from \"../../modules/plugins\";\nimport { unique } from \"../utils\";\nimport { AudioPlayer } from \"./AudioPlayer\";\n\nconst preloadParameterTypes = <const>[\n  ParameterType.AUDIO,\n  ParameterType.IMAGE,\n  ParameterType.VIDEO,\n];\ntype PreloadType = typeof preloadParameterTypes[number];\n\nexport class MediaAPI {\n  constructor(public useWebaudio: boolean) {\n    if (\n      this.useWebaudio &&\n      typeof window !== \"undefined\" &&\n      typeof window.AudioContext !== \"undefined\"\n    ) {\n      this.context = new AudioContext();\n    }\n  }\n\n  // video //\n  private video_buffers = {};\n  getVideoBuffer(videoID: string) {\n    if (videoID.startsWith(\"blob:\")) {\n      this.video_buffers[videoID] = videoID;\n    }\n    return this.video_buffers[videoID];\n  }\n\n  // audio //\n  private context: AudioContext = null;\n  private audio_buffers = [];\n\n  audioContext(): AudioContext {\n    if (this.context && this.context.state !== \"running\") {\n      this.context.resume();\n    }\n    return this.context;\n  }\n\n  async getAudioPlayer(audioID: string): Promise<AudioPlayer> {\n    if (this.audio_buffers[audioID] instanceof AudioPlayer) {\n      return this.audio_buffers[audioID];\n    } else {\n      this.audio_buffers[audioID] = new AudioPlayer(audioID, {\n        useWebAudio: this.useWebaudio,\n        audioContext: this.context,\n      });\n      await this.audio_buffers[audioID].load();\n      return this.audio_buffers[audioID];\n    }\n  }\n\n  // preloading stimuli //\n  private preload_requests = [];\n\n  private img_cache = {};\n\n  preloadAudio(\n    files,\n    callback_complete = () => {},\n    callback_load = (filepath: string) => {},\n    callback_error = (error) => {}\n  ) {\n    files = unique(files.flat());\n\n    let n_loaded = 0;\n\n    if (files.length == 0) {\n      callback_complete();\n      return;\n    }\n\n    for (const file of files) {\n      // check if file was already loaded\n      if (this.audio_buffers[file] instanceof AudioPlayer) {\n        n_loaded++;\n        callback_load(file);\n        if (n_loaded == files.length) {\n          callback_complete();\n        }\n      } else {\n        this.audio_buffers[file] = new AudioPlayer(file, {\n          useWebAudio: this.useWebaudio,\n          audioContext: this.context,\n        });\n        this.audio_buffers[file]\n          .load()\n          .then(() => {\n            n_loaded++;\n            callback_load(file);\n            if (n_loaded == files.length) {\n              callback_complete();\n            }\n          })\n          .catch((e) => {\n            callback_error(e);\n          });\n      }\n    }\n  }\n\n  preloadImages(\n    images,\n    callback_complete = () => {},\n    callback_load = (filepath) => {},\n    callback_error = (error_msg) => {}\n  ) {\n    // flatten the images array\n    images = unique(images.flat());\n\n    var n_loaded = 0;\n\n    if (images.length === 0) {\n      callback_complete();\n      return;\n    }\n\n    for (let i = 0; i < images.length; i++) {\n      const img = new Image();\n      const src = images[i];\n      img.onload = () => {\n        n_loaded++;\n        callback_load(src);\n        if (n_loaded === images.length) {\n          callback_complete();\n        }\n      };\n\n      img.onerror = (e) => {\n        callback_error({ source: src, error: e });\n      };\n\n      img.src = src;\n\n      this.img_cache[src] = img;\n      this.preload_requests.push(img);\n    }\n  }\n\n  preloadVideo(\n    videos,\n    callback_complete = () => {},\n    callback_load = (filepath) => {},\n    callback_error = (error_msg) => {}\n  ) {\n    // flatten the video array\n    videos = unique(videos.flat());\n\n    let n_loaded = 0;\n\n    if (videos.length === 0) {\n      callback_complete();\n      return;\n    }\n\n    for (const video of videos) {\n      const video_buffers = this.video_buffers;\n\n      //based on option 4 here: http://dinbror.dk/blog/how-to-preload-entire-html5-video-before-play-solved/\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", video, true);\n      request.responseType = \"blob\";\n      request.onload = () => {\n        if (request.status === 200 || request.status === 0) {\n          const videoBlob = request.response;\n          video_buffers[video] = URL.createObjectURL(videoBlob); // IE10+\n          n_loaded++;\n          callback_load(video);\n          if (n_loaded === videos.length) {\n            callback_complete();\n          }\n        }\n      };\n      request.onerror = (e) => {\n        let err: ProgressEvent | string = e;\n        if (request.status == 404) {\n          err = \"404\";\n        }\n        callback_error({ source: video, error: err });\n      };\n      request.onloadend = (e) => {\n        if (request.status == 404) {\n          callback_error({ source: video, error: \"404\" });\n        }\n      };\n      request.send();\n      this.preload_requests.push(request);\n    }\n  }\n\n  private preloadMap = new Map<string, Record<string, PreloadType>>();\n\n  getAutoPreloadList(timeline_description: any[]) {\n    /** Map each preload parameter type to a set of paths to be preloaded */\n    const preloadPaths = Object.fromEntries(\n      preloadParameterTypes.map((type) => [type, new Set<string>()])\n    );\n\n    const traverseTimeline = (node, inheritedTrialType?) => {\n      const isTimeline = typeof node.timeline !== \"undefined\";\n\n      if (isTimeline) {\n        for (const childNode of node.timeline) {\n          traverseTimeline(childNode, node.type ?? inheritedTrialType);\n        }\n      } else if ((node.type ?? inheritedTrialType)?.info) {\n        // node is a trial with type.info set\n\n        // Get the plugin name and parameters object from the info object\n        const { name: pluginName, parameters } = (node.type ?? inheritedTrialType).info;\n\n        // Extract parameters to be preloaded and their types from parameter info if this has not\n        // yet been done for `pluginName`\n        if (!this.preloadMap.has(pluginName)) {\n          this.preloadMap.set(\n            pluginName,\n            Object.fromEntries(\n              Object.entries<any>(parameters)\n                // Filter out parameter entries with media types and a non-false `preload` option\n                .filter(\n                  ([_name, { type, preload }]) =>\n                    preloadParameterTypes.includes(type) && (preload ?? true)\n                )\n                // Map each entry's value to its parameter type\n                .map(([name, { type }]) => [name, type])\n            )\n          );\n        }\n\n        // Add preload paths from this trial\n        for (const [parameterName, parameterType] of Object.entries(\n          this.preloadMap.get(pluginName)\n        )) {\n          const parameterValue = node[parameterName];\n          const elements = preloadPaths[parameterType];\n\n          if (typeof parameterValue === \"string\") {\n            elements.add(parameterValue);\n          } else if (Array.isArray(parameterValue)) {\n            for (const element of parameterValue.flat()) {\n              if (typeof element === \"string\") {\n                elements.add(element);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    traverseTimeline({ timeline: timeline_description });\n\n    return {\n      images: [...preloadPaths[ParameterType.IMAGE]],\n      audio: [...preloadPaths[ParameterType.AUDIO]],\n      video: [...preloadPaths[ParameterType.VIDEO]],\n    };\n  }\n\n  cancelPreloads() {\n    for (const request of this.preload_requests) {\n      request.onload = () => {};\n      request.onerror = () => {};\n      request.oncanplaythrough = () => {};\n      request.onabort = () => {};\n    }\n    this.preload_requests = [];\n  }\n\n  private microphone_recorder: MediaRecorder = null;\n\n  initializeMicrophoneRecorder(stream: MediaStream) {\n    const recorder = new MediaRecorder(stream);\n    this.microphone_recorder = recorder;\n  }\n\n  getMicrophoneRecorder(): MediaRecorder {\n    return this.microphone_recorder;\n  }\n\n  private camera_stream: MediaStream = null;\n  private camera_recorder: MediaRecorder = null;\n\n  initializeCameraRecorder(stream: MediaStream, opts?: MediaRecorderOptions) {\n    this.camera_stream = stream;\n    const recorder = new MediaRecorder(stream, opts);\n    this.camera_recorder = recorder;\n  }\n\n  getCameraStream(): MediaStream {\n    return this.camera_stream;\n  }\n\n  getCameraRecorder(): MediaRecorder {\n    return this.camera_recorder;\n  }\n}\n","export class SimulationAPI {\n  constructor(\n    private getDisplayContainerElement: () => HTMLElement,\n    private setJsPsychTimeout: (callback: () => void, delay: number) => number\n  ) {}\n\n  dispatchEvent(event: Event) {\n    this.getDisplayContainerElement().dispatchEvent(event);\n  }\n\n  /**\n   * Dispatches a `keydown` event for the specified key\n   * @param key Character code (`.key` property) for the key to press.\n   */\n  keyDown(key: string) {\n    this.dispatchEvent(new KeyboardEvent(\"keydown\", { key }));\n  }\n\n  /**\n   * Dispatches a `keyup` event for the specified key\n   * @param key Character code (`.key` property) for the key to press.\n   */\n  keyUp(key: string) {\n    this.dispatchEvent(new KeyboardEvent(\"keyup\", { key }));\n  }\n\n  /**\n   * Dispatches a `keydown` and `keyup` event in sequence to simulate pressing a key.\n   * @param key Character code (`.key` property) for the key to press.\n   * @param delay Length of time to wait (ms) before executing action\n   */\n  pressKey(key: string, delay = 0) {\n    if (delay > 0) {\n      this.setJsPsychTimeout(() => {\n        this.keyDown(key);\n        this.keyUp(key);\n      }, delay);\n    } else {\n      this.keyDown(key);\n      this.keyUp(key);\n    }\n  }\n\n  /**\n   * Dispatches `mousedown`, `mouseup`, and `click` events on the target element\n   * @param target The element to click\n   * @param delay Length of time to wait (ms) before executing action\n   */\n  clickTarget(target: Element, delay = 0) {\n    if (delay > 0) {\n      this.setJsPsychTimeout(() => {\n        target.dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true }));\n        target.dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true }));\n        target.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n      }, delay);\n    } else {\n      target.dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true }));\n      target.dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true }));\n      target.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n    }\n  }\n\n  /**\n   * Sets the value of a target text input\n   * @param target A text input element to fill in\n   * @param text Text to input\n   * @param delay Length of time to wait (ms) before executing action\n   */\n  fillTextInput(target: HTMLInputElement, text: string, delay = 0) {\n    if (delay > 0) {\n      this.setJsPsychTimeout(() => {\n        target.value = text;\n      }, delay);\n    } else {\n      target.value = text;\n    }\n  }\n\n  /**\n   * Picks a valid key from `choices`, taking into account jsPsych-specific\n   * identifiers like \"NO_KEYS\" and \"ALL_KEYS\".\n   * @param choices Which keys are valid.\n   * @returns A key selected at random from the valid keys.\n   */\n  getValidKey(choices: \"NO_KEYS\" | \"ALL_KEYS\" | Array<string> | Array<Array<string>>) {\n    const possible_keys = [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \" \",\n    ];\n\n    let key;\n    if (choices == \"NO_KEYS\") {\n      key = null;\n    } else if (choices == \"ALL_KEYS\") {\n      key = possible_keys[Math.floor(Math.random() * possible_keys.length)];\n    } else {\n      const flat_choices = choices.flat();\n      key = flat_choices[Math.floor(Math.random() * flat_choices.length)];\n    }\n\n    return key;\n  }\n\n  mergeSimulationData(default_data, simulation_options) {\n    // override any data with data from simulation object\n    return {\n      ...default_data,\n      ...simulation_options?.data,\n    };\n  }\n\n  ensureSimulationDataConsistency(trial, data) {\n    // All RTs must be rounded\n    if (data.rt) {\n      data.rt = Math.round(data.rt);\n    }\n\n    // If a trial_duration and rt exist, make sure that the RT is not longer than the trial.\n    if (trial.trial_duration && data.rt && data.rt > trial.trial_duration) {\n      data.rt = null;\n      if (data.response) {\n        data.response = null;\n      }\n      if (data.correct) {\n        data.correct = false;\n      }\n    }\n\n    // If trial.choices is NO_KEYS make sure that response and RT are null\n    if (trial.choices && trial.choices == \"NO_KEYS\") {\n      if (data.rt) {\n        data.rt = null;\n      }\n      if (data.response) {\n        data.response = null;\n      }\n    }\n\n    // If response is not allowed before stimulus display complete, ensure RT\n    // is longer than display time.\n    if (trial.allow_response_before_complete) {\n      if (trial.sequence_reps && trial.frame_time) {\n        const min_time = trial.sequence_reps * trial.frame_time * trial.stimuli.length;\n        if (data.rt < min_time) {\n          data.rt = null;\n          data.response = null;\n        }\n      }\n    }\n  }\n}\n","/**\n * A class that provides a wrapper around the global setTimeout and clearTimeout functions.\n */\nexport class TimeoutAPI {\n  private timeout_handlers: number[] = [];\n\n  /**\n   * Calls a function after a specified delay, in milliseconds.\n   * @param callback The function to call after the delay.\n   * @param delay The number of milliseconds to wait before calling the function.\n   * @returns A handle that can be used to clear the timeout with clearTimeout.\n   */\n  setTimeout(callback: () => void, delay: number): number {\n    const handle = window.setTimeout(callback, delay);\n    this.timeout_handlers.push(handle);\n    return handle;\n  }\n\n  /**\n   * Clears all timeouts that have been created with setTimeout.\n   */\n  clearAllTimeouts(): void {\n    for (const handler of this.timeout_handlers) {\n      clearTimeout(handler);\n    }\n    this.timeout_handlers = [];\n  }\n}\n","import autoBind from \"auto-bind\";\n\nimport { JsPsych } from \"../../JsPsych\";\nimport { KeyboardListenerAPI } from \"./KeyboardListenerAPI\";\nimport { MediaAPI } from \"./MediaAPI\";\nimport { SimulationAPI } from \"./SimulationAPI\";\nimport { TimeoutAPI } from \"./TimeoutAPI\";\n\nexport function createJointPluginAPIObject(jsPsych: JsPsych) {\n  const settings = jsPsych.getInitSettings();\n  const keyboardListenerAPI = new KeyboardListenerAPI(\n    jsPsych.getDisplayContainerElement,\n    settings.case_sensitive_responses,\n    settings.minimum_valid_rt\n  );\n  const timeoutAPI = new TimeoutAPI();\n  const mediaAPI = new MediaAPI(settings.use_webaudio);\n  const simulationAPI = new SimulationAPI(\n    jsPsych.getDisplayContainerElement,\n    timeoutAPI.setTimeout.bind(timeoutAPI)\n  );\n  return Object.assign(\n    {},\n    ...[keyboardListenerAPI, timeoutAPI, mediaAPI, simulationAPI].map((object) => autoBind(object))\n  ) as KeyboardListenerAPI & TimeoutAPI & MediaAPI & SimulationAPI;\n}\n\nexport type PluginAPI = ReturnType<typeof createJointPluginAPIObject>;\n","var wordList = [\n  // Borrowed from xkcd password generator which borrowed it from wherever\n  \"ability\",\"able\",\"aboard\",\"about\",\"above\",\"accept\",\"accident\",\"according\",\n  \"account\",\"accurate\",\"acres\",\"across\",\"act\",\"action\",\"active\",\"activity\",\n  \"actual\",\"actually\",\"add\",\"addition\",\"additional\",\"adjective\",\"adult\",\"adventure\",\n  \"advice\",\"affect\",\"afraid\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\n  \"ago\",\"agree\",\"ahead\",\"aid\",\"air\",\"airplane\",\"alike\",\"alive\",\n  \"all\",\"allow\",\"almost\",\"alone\",\"along\",\"aloud\",\"alphabet\",\"already\",\n  \"also\",\"although\",\"am\",\"among\",\"amount\",\"ancient\",\"angle\",\"angry\",\n  \"animal\",\"announced\",\"another\",\"answer\",\"ants\",\"any\",\"anybody\",\"anyone\",\n  \"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"appearance\",\"apple\",\"applied\",\n  \"appropriate\",\"are\",\"area\",\"arm\",\"army\",\"around\",\"arrange\",\"arrangement\",\n  \"arrive\",\"arrow\",\"art\",\"article\",\"as\",\"aside\",\"ask\",\"asleep\",\n  \"at\",\"ate\",\"atmosphere\",\"atom\",\"atomic\",\"attached\",\"attack\",\"attempt\",\n  \"attention\",\"audience\",\"author\",\"automobile\",\"available\",\"average\",\"avoid\",\"aware\",\n  \"away\",\"baby\",\"back\",\"bad\",\"badly\",\"bag\",\"balance\",\"ball\",\n  \"balloon\",\"band\",\"bank\",\"bar\",\"bare\",\"bark\",\"barn\",\"base\",\n  \"baseball\",\"basic\",\"basis\",\"basket\",\"bat\",\"battle\",\"be\",\"bean\",\n  \"bear\",\"beat\",\"beautiful\",\"beauty\",\"became\",\"because\",\"become\",\"becoming\",\n  \"bee\",\"been\",\"before\",\"began\",\"beginning\",\"begun\",\"behavior\",\"behind\",\n  \"being\",\"believed\",\"bell\",\"belong\",\"below\",\"belt\",\"bend\",\"beneath\",\n  \"bent\",\"beside\",\"best\",\"bet\",\"better\",\"between\",\"beyond\",\"bicycle\",\n  \"bigger\",\"biggest\",\"bill\",\"birds\",\"birth\",\"birthday\",\"bit\",\"bite\",\n  \"black\",\"blank\",\"blanket\",\"blew\",\"blind\",\"block\",\"blood\",\"blow\",\n  \"blue\",\"board\",\"boat\",\"body\",\"bone\",\"book\",\"border\",\"born\",\n  \"both\",\"bottle\",\"bottom\",\"bound\",\"bow\",\"bowl\",\"box\",\"boy\",\n  \"brain\",\"branch\",\"brass\",\"brave\",\"bread\",\"break\",\"breakfast\",\"breath\",\n  \"breathe\",\"breathing\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\n  \"broad\",\"broke\",\"broken\",\"brother\",\"brought\",\"brown\",\"brush\",\"buffalo\",\n  \"build\",\"building\",\"built\",\"buried\",\"burn\",\"burst\",\"bus\",\"bush\",\n  \"business\",\"busy\",\"but\",\"butter\",\"buy\",\"by\",\"cabin\",\"cage\",\n  \"cake\",\"call\",\"calm\",\"came\",\"camera\",\"camp\",\"can\",\"canal\",\n  \"cannot\",\"cap\",\"capital\",\"captain\",\"captured\",\"car\",\"carbon\",\"card\",\n  \"care\",\"careful\",\"carefully\",\"carried\",\"carry\",\"case\",\"cast\",\"castle\",\n  \"cat\",\"catch\",\"cattle\",\"caught\",\"cause\",\"cave\",\"cell\",\"cent\",\n  \"center\",\"central\",\"century\",\"certain\",\"certainly\",\"chain\",\"chair\",\"chamber\",\n  \"chance\",\"change\",\"changing\",\"chapter\",\"character\",\"characteristic\",\"charge\",\"chart\",\n  \"check\",\"cheese\",\"chemical\",\"chest\",\"chicken\",\"chief\",\"child\",\"children\",\n  \"choice\",\"choose\",\"chose\",\"chosen\",\"church\",\"circle\",\"circus\",\"citizen\",\n  \"city\",\"class\",\"classroom\",\"claws\",\"clay\",\"clean\",\"clear\",\"clearly\",\n  \"climate\",\"climb\",\"clock\",\"close\",\"closely\",\"closer\",\"cloth\",\"clothes\",\n  \"clothing\",\"cloud\",\"club\",\"coach\",\"coal\",\"coast\",\"coat\",\"coffee\",\n  \"cold\",\"collect\",\"college\",\"colony\",\"color\",\"column\",\"combination\",\"combine\",\n  \"come\",\"comfortable\",\"coming\",\"command\",\"common\",\"community\",\"company\",\"compare\",\n  \"compass\",\"complete\",\"completely\",\"complex\",\"composed\",\"composition\",\"compound\",\"concerned\",\n  \"condition\",\"congress\",\"connected\",\"consider\",\"consist\",\"consonant\",\"constantly\",\"construction\",\n  \"contain\",\"continent\",\"continued\",\"contrast\",\"control\",\"conversation\",\"cook\",\"cookies\",\n  \"cool\",\"copper\",\"copy\",\"corn\",\"corner\",\"correct\",\"correctly\",\"cost\",\n  \"cotton\",\"could\",\"count\",\"country\",\"couple\",\"courage\",\"course\",\"court\",\n  \"cover\",\"cow\",\"cowboy\",\"crack\",\"cream\",\"create\",\"creature\",\"crew\",\n  \"crop\",\"cross\",\"crowd\",\"cry\",\"cup\",\"curious\",\"current\",\"curve\",\n  \"customs\",\"cut\",\"cutting\",\"daily\",\"damage\",\"dance\",\"danger\",\"dangerous\",\n  \"dark\",\"darkness\",\"date\",\"daughter\",\"dawn\",\"day\",\"dead\",\"deal\",\n  \"dear\",\"death\",\"decide\",\"declared\",\"deep\",\"deeply\",\"deer\",\"definition\",\n  \"degree\",\"depend\",\"depth\",\"describe\",\"desert\",\"design\",\"desk\",\"detail\",\n  \"determine\",\"develop\",\"development\",\"diagram\",\"diameter\",\"did\",\"die\",\"differ\",\n  \"difference\",\"different\",\"difficult\",\"difficulty\",\"dig\",\"dinner\",\"direct\",\"direction\",\n  \"directly\",\"dirt\",\"dirty\",\"disappear\",\"discover\",\"discovery\",\"discuss\",\"discussion\",\n  \"disease\",\"dish\",\"distance\",\"distant\",\"divide\",\"division\",\"do\",\"doctor\",\n  \"does\",\"dog\",\"doing\",\"doll\",\"dollar\",\"done\",\"donkey\",\"door\",\n  \"dot\",\"double\",\"doubt\",\"down\",\"dozen\",\"draw\",\"drawn\",\"dream\",\n  \"dress\",\"drew\",\"dried\",\"drink\",\"drive\",\"driven\",\"driver\",\"driving\",\n  \"drop\",\"dropped\",\"drove\",\"dry\",\"duck\",\"due\",\"dug\",\"dull\",\n  \"during\",\"dust\",\"duty\",\"each\",\"eager\",\"ear\",\"earlier\",\"early\",\n  \"earn\",\"earth\",\"easier\",\"easily\",\"east\",\"easy\",\"eat\",\"eaten\",\n  \"edge\",\"education\",\"effect\",\"effort\",\"egg\",\"eight\",\"either\",\"electric\",\n  \"electricity\",\"element\",\"elephant\",\"eleven\",\"else\",\"empty\",\"end\",\"enemy\",\n  \"energy\",\"engine\",\"engineer\",\"enjoy\",\"enough\",\"enter\",\"entire\",\"entirely\",\n  \"environment\",\"equal\",\"equally\",\"equator\",\"equipment\",\"escape\",\"especially\",\"essential\",\n  \"establish\",\"even\",\"evening\",\"event\",\"eventually\",\"ever\",\"every\",\"everybody\",\n  \"everyone\",\"everything\",\"everywhere\",\"evidence\",\"exact\",\"exactly\",\"examine\",\"example\",\n  \"excellent\",\"except\",\"exchange\",\"excited\",\"excitement\",\"exciting\",\"exclaimed\",\"exercise\",\n  \"exist\",\"expect\",\"experience\",\"experiment\",\"explain\",\"explanation\",\"explore\",\"express\",\n  \"expression\",\"extra\",\"eye\",\"face\",\"facing\",\"fact\",\"factor\",\"factory\",\n  \"failed\",\"fair\",\"fairly\",\"fall\",\"fallen\",\"familiar\",\"family\",\"famous\",\n  \"far\",\"farm\",\"farmer\",\"farther\",\"fast\",\"fastened\",\"faster\",\"fat\",\n  \"father\",\"favorite\",\"fear\",\"feathers\",\"feature\",\"fed\",\"feed\",\"feel\",\n  \"feet\",\"fell\",\"fellow\",\"felt\",\"fence\",\"few\",\"fewer\",\"field\",\n  \"fierce\",\"fifteen\",\"fifth\",\"fifty\",\"fight\",\"fighting\",\"figure\",\"fill\",\n  \"film\",\"final\",\"finally\",\"find\",\"fine\",\"finest\",\"finger\",\"finish\",\n  \"fire\",\"fireplace\",\"firm\",\"first\",\"fish\",\"five\",\"fix\",\"flag\",\n  \"flame\",\"flat\",\"flew\",\"flies\",\"flight\",\"floating\",\"floor\",\"flow\",\n  \"flower\",\"fly\",\"fog\",\"folks\",\"follow\",\"food\",\"foot\",\"football\",\n  \"for\",\"force\",\"foreign\",\"forest\",\"forget\",\"forgot\",\"forgotten\",\"form\",\n  \"former\",\"fort\",\"forth\",\"forty\",\"forward\",\"fought\",\"found\",\"four\",\n  \"fourth\",\"fox\",\"frame\",\"free\",\"freedom\",\"frequently\",\"fresh\",\"friend\",\n  \"friendly\",\"frighten\",\"frog\",\"from\",\"front\",\"frozen\",\"fruit\",\"fuel\",\n  \"full\",\"fully\",\"fun\",\"function\",\"funny\",\"fur\",\"furniture\",\"further\",\n  \"future\",\"gain\",\"game\",\"garage\",\"garden\",\"gas\",\"gasoline\",\"gate\",\n  \"gather\",\"gave\",\"general\",\"generally\",\"gentle\",\"gently\",\"get\",\"getting\",\n  \"giant\",\"gift\",\"girl\",\"give\",\"given\",\"giving\",\"glad\",\"glass\",\n  \"globe\",\"go\",\"goes\",\"gold\",\"golden\",\"gone\",\"good\",\"goose\",\n  \"got\",\"government\",\"grabbed\",\"grade\",\"gradually\",\"grain\",\"grandfather\",\"grandmother\",\n  \"graph\",\"grass\",\"gravity\",\"gray\",\"great\",\"greater\",\"greatest\",\"greatly\",\n  \"green\",\"grew\",\"ground\",\"group\",\"grow\",\"grown\",\"growth\",\"guard\",\n  \"guess\",\"guide\",\"gulf\",\"gun\",\"habit\",\"had\",\"hair\",\"half\",\n  \"halfway\",\"hall\",\"hand\",\"handle\",\"handsome\",\"hang\",\"happen\",\"happened\",\n  \"happily\",\"happy\",\"harbor\",\"hard\",\"harder\",\"hardly\",\"has\",\"hat\",\n  \"have\",\"having\",\"hay\",\"he\",\"headed\",\"heading\",\"health\",\"heard\",\n  \"hearing\",\"heart\",\"heat\",\"heavy\",\"height\",\"held\",\"hello\",\"help\",\n  \"helpful\",\"her\",\"herd\",\"here\",\"herself\",\"hidden\",\"hide\",\"high\",\n  \"higher\",\"highest\",\"highway\",\"hill\",\"him\",\"himself\",\"his\",\"history\",\n  \"hit\",\"hold\",\"hole\",\"hollow\",\"home\",\"honor\",\"hope\",\"horn\",\n  \"horse\",\"hospital\",\"hot\",\"hour\",\"house\",\"how\",\"however\",\"huge\",\n  \"human\",\"hundred\",\"hung\",\"hungry\",\"hunt\",\"hunter\",\"hurried\",\"hurry\",\n  \"hurt\",\"husband\",\"ice\",\"idea\",\"identity\",\"if\",\"ill\",\"image\",\n  \"imagine\",\"immediately\",\"importance\",\"important\",\"impossible\",\"improve\",\"in\",\"inch\",\n  \"include\",\"including\",\"income\",\"increase\",\"indeed\",\"independent\",\"indicate\",\"individual\",\n  \"industrial\",\"industry\",\"influence\",\"information\",\"inside\",\"instance\",\"instant\",\"instead\",\n  \"instrument\",\"interest\",\"interior\",\"into\",\"introduced\",\"invented\",\"involved\",\"iron\",\n  \"is\",\"island\",\"it\",\"its\",\"itself\",\"jack\",\"jar\",\"jet\",\n  \"job\",\"join\",\"joined\",\"journey\",\"joy\",\"judge\",\"jump\",\"jungle\",\n  \"just\",\"keep\",\"kept\",\"key\",\"kids\",\"kill\",\"kind\",\"kitchen\",\n  \"knew\",\"knife\",\"know\",\"knowledge\",\"known\",\"label\",\"labor\",\"lack\",\n  \"lady\",\"laid\",\"lake\",\"lamp\",\"land\",\"language\",\"large\",\"larger\",\n  \"largest\",\"last\",\"late\",\"later\",\"laugh\",\"law\",\"lay\",\"layers\",\n  \"lead\",\"leader\",\"leaf\",\"learn\",\"least\",\"leather\",\"leave\",\"leaving\",\n  \"led\",\"left\",\"leg\",\"length\",\"lesson\",\"let\",\"letter\",\"level\",\n  \"library\",\"lie\",\"life\",\"lift\",\"light\",\"like\",\"likely\",\"limited\",\n  \"line\",\"lion\",\"lips\",\"liquid\",\"list\",\"listen\",\"little\",\"live\",\n  \"living\",\"load\",\"local\",\"locate\",\"location\",\"log\",\"lonely\",\"long\",\n  \"longer\",\"look\",\"loose\",\"lose\",\"loss\",\"lost\",\"lot\",\"loud\",\n  \"love\",\"lovely\",\"low\",\"lower\",\"luck\",\"lucky\",\"lunch\",\"lungs\",\n  \"lying\",\"machine\",\"machinery\",\"mad\",\"made\",\"magic\",\"magnet\",\"mail\",\n  \"main\",\"mainly\",\"major\",\"make\",\"making\",\"man\",\"managed\",\"manner\",\n  \"manufacturing\",\"many\",\"map\",\"mark\",\"market\",\"married\",\"mass\",\"massage\",\n  \"master\",\"material\",\"mathematics\",\"matter\",\"may\",\"maybe\",\"me\",\"meal\",\n  \"mean\",\"means\",\"meant\",\"measure\",\"meat\",\"medicine\",\"meet\",\"melted\",\n  \"member\",\"memory\",\"men\",\"mental\",\"merely\",\"met\",\"metal\",\"method\",\n  \"mice\",\"middle\",\"might\",\"mighty\",\"mile\",\"military\",\"milk\",\"mill\",\n  \"mind\",\"mine\",\"minerals\",\"minute\",\"mirror\",\"missing\",\"mission\",\"mistake\",\n  \"mix\",\"mixture\",\"model\",\"modern\",\"molecular\",\"moment\",\"money\",\"monkey\",\n  \"month\",\"mood\",\"moon\",\"more\",\"morning\",\"most\",\"mostly\",\"mother\",\n  \"motion\",\"motor\",\"mountain\",\"mouse\",\"mouth\",\"move\",\"movement\",\"movie\",\n  \"moving\",\"mud\",\"muscle\",\"music\",\"musical\",\"must\",\"my\",\"myself\",\n  \"mysterious\",\"nails\",\"name\",\"nation\",\"national\",\"native\",\"natural\",\"naturally\",\n  \"nature\",\"near\",\"nearby\",\"nearer\",\"nearest\",\"nearly\",\"necessary\",\"neck\",\n  \"needed\",\"needle\",\"needs\",\"negative\",\"neighbor\",\"neighborhood\",\"nervous\",\"nest\",\n  \"never\",\"new\",\"news\",\"newspaper\",\"next\",\"nice\",\"night\",\"nine\",\n  \"no\",\"nobody\",\"nodded\",\"noise\",\"none\",\"noon\",\"nor\",\"north\",\n  \"nose\",\"not\",\"note\",\"noted\",\"nothing\",\"notice\",\"noun\",\"now\",\n  \"number\",\"numeral\",\"nuts\",\"object\",\"observe\",\"obtain\",\"occasionally\",\"occur\",\n  \"ocean\",\"of\",\"off\",\"offer\",\"office\",\"officer\",\"official\",\"oil\",\n  \"old\",\"older\",\"oldest\",\"on\",\"once\",\"one\",\"only\",\"onto\",\n  \"open\",\"operation\",\"opinion\",\"opportunity\",\"opposite\",\"or\",\"orange\",\"orbit\",\n  \"order\",\"ordinary\",\"organization\",\"organized\",\"origin\",\"original\",\"other\",\"ought\",\n  \"our\",\"ourselves\",\"out\",\"outer\",\"outline\",\"outside\",\"over\",\"own\",\n  \"owner\",\"oxygen\",\"pack\",\"package\",\"page\",\"paid\",\"pain\",\"paint\",\n  \"pair\",\"palace\",\"pale\",\"pan\",\"paper\",\"paragraph\",\"parallel\",\"parent\",\n  \"park\",\"part\",\"particles\",\"particular\",\"particularly\",\"partly\",\"parts\",\"party\",\n  \"pass\",\"passage\",\"past\",\"path\",\"pattern\",\"pay\",\"peace\",\"pen\",\n  \"pencil\",\"people\",\"per\",\"percent\",\"perfect\",\"perfectly\",\"perhaps\",\"period\",\n  \"person\",\"personal\",\"pet\",\"phrase\",\"physical\",\"piano\",\"pick\",\"picture\",\n  \"pictured\",\"pie\",\"piece\",\"pig\",\"pile\",\"pilot\",\"pine\",\"pink\",\n  \"pipe\",\"pitch\",\"place\",\"plain\",\"plan\",\"plane\",\"planet\",\"planned\",\n  \"planning\",\"plant\",\"plastic\",\"plate\",\"plates\",\"play\",\"pleasant\",\"please\",\n  \"pleasure\",\"plenty\",\"plural\",\"plus\",\"pocket\",\"poem\",\"poet\",\"poetry\",\n  \"point\",\"pole\",\"police\",\"policeman\",\"political\",\"pond\",\"pony\",\"pool\",\n  \"poor\",\"popular\",\"population\",\"porch\",\"port\",\"position\",\"positive\",\"possible\",\n  \"possibly\",\"post\",\"pot\",\"potatoes\",\"pound\",\"pour\",\"powder\",\"power\",\n  \"powerful\",\"practical\",\"practice\",\"prepare\",\"present\",\"president\",\"press\",\"pressure\",\n  \"pretty\",\"prevent\",\"previous\",\"price\",\"pride\",\"primitive\",\"principal\",\"principle\",\n  \"printed\",\"private\",\"prize\",\"probably\",\"problem\",\"process\",\"produce\",\"product\",\n  \"production\",\"program\",\"progress\",\"promised\",\"proper\",\"properly\",\"property\",\"protection\",\n  \"proud\",\"prove\",\"provide\",\"public\",\"pull\",\"pupil\",\"pure\",\"purple\",\n  \"purpose\",\"push\",\"put\",\"putting\",\"quarter\",\"queen\",\"question\",\"quick\",\n  \"quickly\",\"quiet\",\"quietly\",\"quite\",\"rabbit\",\"race\",\"radio\",\"railroad\",\n  \"rain\",\"raise\",\"ran\",\"ranch\",\"range\",\"rapidly\",\"rate\",\"rather\",\n  \"raw\",\"rays\",\"reach\",\"read\",\"reader\",\"ready\",\"real\",\"realize\",\n  \"rear\",\"reason\",\"recall\",\"receive\",\"recent\",\"recently\",\"recognize\",\"record\",\n  \"red\",\"refer\",\"refused\",\"region\",\"regular\",\"related\",\"relationship\",\"religious\",\n  \"remain\",\"remarkable\",\"remember\",\"remove\",\"repeat\",\"replace\",\"replied\",\"report\",\n  \"represent\",\"require\",\"research\",\"respect\",\"rest\",\"result\",\"return\",\"review\",\n  \"rhyme\",\"rhythm\",\"rice\",\"rich\",\"ride\",\"riding\",\"right\",\"ring\",\n  \"rise\",\"rising\",\"river\",\"road\",\"roar\",\"rock\",\"rocket\",\"rocky\",\n  \"rod\",\"roll\",\"roof\",\"room\",\"root\",\"rope\",\"rose\",\"rough\",\n  \"round\",\"route\",\"row\",\"rubbed\",\"rubber\",\"rule\",\"ruler\",\"run\",\n  \"running\",\"rush\",\"sad\",\"saddle\",\"safe\",\"safety\",\"said\",\"sail\",\n  \"sale\",\"salmon\",\"salt\",\"same\",\"sand\",\"sang\",\"sat\",\"satellites\",\n  \"satisfied\",\"save\",\"saved\",\"saw\",\"say\",\"scale\",\"scared\",\"scene\",\n  \"school\",\"science\",\"scientific\",\"scientist\",\"score\",\"screen\",\"sea\",\"search\",\n  \"season\",\"seat\",\"second\",\"secret\",\"section\",\"see\",\"seed\",\"seeing\",\n  \"seems\",\"seen\",\"seldom\",\"select\",\"selection\",\"sell\",\"send\",\"sense\",\n  \"sent\",\"sentence\",\"separate\",\"series\",\"serious\",\"serve\",\"service\",\"sets\",\n  \"setting\",\"settle\",\"settlers\",\"seven\",\"several\",\"shade\",\"shadow\",\"shake\",\n  \"shaking\",\"shall\",\"shallow\",\"shape\",\"share\",\"sharp\",\"she\",\"sheep\",\n  \"sheet\",\"shelf\",\"shells\",\"shelter\",\"shine\",\"shinning\",\"ship\",\"shirt\",\n  \"shoe\",\"shoot\",\"shop\",\"shore\",\"short\",\"shorter\",\"shot\",\"should\",\n  \"shoulder\",\"shout\",\"show\",\"shown\",\"shut\",\"sick\",\"sides\",\"sight\",\n  \"sign\",\"signal\",\"silence\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\n  \"simple\",\"simplest\",\"simply\",\"since\",\"sing\",\"single\",\"sink\",\"sister\",\n  \"sit\",\"sitting\",\"situation\",\"six\",\"size\",\"skill\",\"skin\",\"sky\",\n  \"slabs\",\"slave\",\"sleep\",\"slept\",\"slide\",\"slight\",\"slightly\",\"slip\",\n  \"slipped\",\"slope\",\"slow\",\"slowly\",\"small\",\"smaller\",\"smallest\",\"smell\",\n  \"smile\",\"smoke\",\"smooth\",\"snake\",\"snow\",\"so\",\"soap\",\"social\",\n  \"society\",\"soft\",\"softly\",\"soil\",\"solar\",\"sold\",\"soldier\",\"solid\",\n  \"solution\",\"solve\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\n  \"somewhere\",\"son\",\"song\",\"soon\",\"sort\",\"sound\",\"source\",\"south\",\n  \"southern\",\"space\",\"speak\",\"special\",\"species\",\"specific\",\"speech\",\"speed\",\n  \"spell\",\"spend\",\"spent\",\"spider\",\"spin\",\"spirit\",\"spite\",\"split\",\n  \"spoken\",\"sport\",\"spread\",\"spring\",\"square\",\"stage\",\"stairs\",\"stand\",\n  \"standard\",\"star\",\"stared\",\"start\",\"state\",\"statement\",\"station\",\"stay\",\n  \"steady\",\"steam\",\"steel\",\"steep\",\"stems\",\"step\",\"stepped\",\"stick\",\n  \"stiff\",\"still\",\"stock\",\"stomach\",\"stone\",\"stood\",\"stop\",\"stopped\",\n  \"store\",\"storm\",\"story\",\"stove\",\"straight\",\"strange\",\"stranger\",\"straw\",\n  \"stream\",\"street\",\"strength\",\"stretch\",\"strike\",\"string\",\"strip\",\"strong\",\n  \"stronger\",\"struck\",\"structure\",\"struggle\",\"stuck\",\"student\",\"studied\",\"studying\",\n  \"subject\",\"substance\",\"success\",\"successful\",\"such\",\"sudden\",\"suddenly\",\"sugar\",\n  \"suggest\",\"suit\",\"sum\",\"summer\",\"sun\",\"sunlight\",\"supper\",\"supply\",\n  \"support\",\"suppose\",\"sure\",\"surface\",\"surprise\",\"surrounded\",\"swam\",\"sweet\",\n  \"swept\",\"swim\",\"swimming\",\"swing\",\"swung\",\"syllable\",\"symbol\",\"system\",\n  \"table\",\"tail\",\"take\",\"taken\",\"tales\",\"talk\",\"tall\",\"tank\",\n  \"tape\",\"task\",\"taste\",\"taught\",\"tax\",\"tea\",\"teach\",\"teacher\",\n  \"team\",\"tears\",\"teeth\",\"telephone\",\"television\",\"tell\",\"temperature\",\"ten\",\n  \"tent\",\"term\",\"terrible\",\"test\",\"than\",\"thank\",\"that\",\"thee\",\n  \"them\",\"themselves\",\"then\",\"theory\",\"there\",\"therefore\",\"these\",\"they\",\n  \"thick\",\"thin\",\"thing\",\"think\",\"third\",\"thirty\",\"this\",\"those\",\n  \"thou\",\"though\",\"thought\",\"thousand\",\"thread\",\"three\",\"threw\",\"throat\",\n  \"through\",\"throughout\",\"throw\",\"thrown\",\"thumb\",\"thus\",\"thy\",\"tide\",\n  \"tie\",\"tight\",\"tightly\",\"till\",\"time\",\"tin\",\"tiny\",\"tip\",\n  \"tired\",\"title\",\"to\",\"tobacco\",\"today\",\"together\",\"told\",\"tomorrow\",\n  \"tone\",\"tongue\",\"tonight\",\"too\",\"took\",\"tool\",\"top\",\"topic\",\n  \"torn\",\"total\",\"touch\",\"toward\",\"tower\",\"town\",\"toy\",\"trace\",\n  \"track\",\"trade\",\"traffic\",\"trail\",\"train\",\"transportation\",\"trap\",\"travel\",\n  \"treated\",\"tree\",\"triangle\",\"tribe\",\"trick\",\"tried\",\"trip\",\"troops\",\n  \"tropical\",\"trouble\",\"truck\",\"trunk\",\"truth\",\"try\",\"tube\",\"tune\",\n  \"turn\",\"twelve\",\"twenty\",\"twice\",\"two\",\"type\",\"typical\",\"uncle\",\n  \"under\",\"underline\",\"understanding\",\"unhappy\",\"union\",\"unit\",\"universe\",\"unknown\",\n  \"unless\",\"until\",\"unusual\",\"up\",\"upon\",\"upper\",\"upward\",\"us\",\n  \"use\",\"useful\",\"using\",\"usual\",\"usually\",\"valley\",\"valuable\",\"value\",\n  \"vapor\",\"variety\",\"various\",\"vast\",\"vegetable\",\"verb\",\"vertical\",\"very\",\n  \"vessels\",\"victory\",\"view\",\"village\",\"visit\",\"visitor\",\"voice\",\"volume\",\n  \"vote\",\"vowel\",\"voyage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"want\",\n  \"war\",\"warm\",\"warn\",\"was\",\"wash\",\"waste\",\"watch\",\"water\",\n  \"wave\",\"way\",\"we\",\"weak\",\"wealth\",\"wear\",\"weather\",\"week\",\n  \"weigh\",\"weight\",\"welcome\",\"well\",\"went\",\"were\",\"west\",\"western\",\n  \"wet\",\"whale\",\"what\",\"whatever\",\"wheat\",\"wheel\",\"when\",\"whenever\",\n  \"where\",\"wherever\",\"whether\",\"which\",\"while\",\"whispered\",\"whistle\",\"white\",\n  \"who\",\"whole\",\"whom\",\"whose\",\"why\",\"wide\",\"widely\",\"wife\",\n  \"wild\",\"will\",\"willing\",\"win\",\"wind\",\"window\",\"wing\",\"winter\",\n  \"wire\",\"wise\",\"wish\",\"with\",\"within\",\"without\",\"wolf\",\"women\",\n  \"won\",\"wonder\",\"wonderful\",\"wood\",\"wooden\",\"wool\",\"word\",\"wore\",\n  \"work\",\"worker\",\"world\",\"worried\",\"worry\",\"worse\",\"worth\",\"would\",\n  \"wrapped\",\"write\",\"writer\",\"writing\",\"written\",\"wrong\",\"wrote\",\"yard\",\n  \"year\",\"yellow\",\"yes\",\"yesterday\",\"yet\",\"you\",\"young\",\"younger\",\n  \"your\",\"yourself\",\"youth\",\"zero\",\"zebra\",\"zipper\",\"zoo\",\"zulu\"\n];\n\nfunction words(options) {\n\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n    while (!rightSize) {  \n      wordUsed = generateRandomWord();\n      if(wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n\n    }\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  }\n\n  // No arguments = generate one word\n  if (typeof(options) === 'undefined') {\n    return word();\n  }\n\n  // Just a number = return that many words\n  if (typeof(options) === 'number') {\n    options = { exactly: options };\n  }\n\n  // options supported: exactly, min, max, join\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  }\n  \n  // not a number = one word par string\n  if (typeof(options.wordsPerString) !== 'number') {\n    options.wordsPerString = 1;\n  }\n\n  //not a function = returns the raw word\n  if (typeof(options.formatter) !== 'function') {\n    options.formatter = (word) => word;\n  }\n\n  //not a string = separator is a space\n  if (typeof(options.separator) !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; (i < total * options.wordsPerString); i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    }\n    else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n    relativeIndex++;\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = ''; \n      relativeIndex = 0;\n    }\n   \n  }\n  if (typeof options.join === 'string') {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words;\n// Export the word list as it is often useful\nwords.wordList = wordList;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","import rw from \"random-words\";\nimport seedrandom from \"seedrandom/lib/alea\";\n\n/**\n * Uses the `seedrandom` package to replace Math.random() with a seedable PRNG.\n *\n * @param seed An optional seed. If none is given, a random seed will be generated.\n * @returns The seed value.\n */\nexport function setSeed(seed: string = Math.random().toString()) {\n  Math.random = seedrandom(seed);\n  return seed;\n}\n\nexport function repeat(array, repetitions, unpack = false) {\n  const arr_isArray = Array.isArray(array);\n  const rep_isArray = Array.isArray(repetitions);\n\n  // if array is not an array, then we just repeat the item\n  if (!arr_isArray) {\n    if (!rep_isArray) {\n      array = [array];\n      repetitions = [repetitions];\n    } else {\n      repetitions = [repetitions[0]];\n      console.log(\n        \"Unclear parameters given to randomization.repeat. Multiple set sizes specified, but only one item exists to sample. Proceeding using the first set size.\"\n      );\n    }\n  } else {\n    // if repetitions is not an array, but array is, then we\n    // repeat repetitions for each entry in array\n    if (!rep_isArray) {\n      let reps = [];\n      for (let i = 0; i < array.length; i++) {\n        reps.push(repetitions);\n      }\n      repetitions = reps;\n    } else {\n      if (array.length != repetitions.length) {\n        console.warn(\n          \"Unclear parameters given to randomization.repeat. Items and repetitions are unequal lengths. Behavior may not be as expected.\"\n        );\n        // throw warning if repetitions is too short, use first rep ONLY.\n        if (repetitions.length < array.length) {\n          let reps = [];\n          for (let i = 0; i < array.length; i++) {\n            reps.push(repetitions);\n          }\n          repetitions = reps;\n        } else {\n          // throw warning if too long, and then use the first N\n          repetitions = repetitions.slice(0, array.length);\n        }\n      }\n    }\n  }\n\n  // should be clear at this point to assume that array and repetitions are arrays with == length\n  let allsamples = [];\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < repetitions[i]; j++) {\n      if (array[i] == null || typeof array[i] != \"object\") {\n        allsamples.push(array[i]);\n      } else {\n        allsamples.push(Object.assign({}, array[i]));\n      }\n    }\n  }\n\n  let out: any = shuffle(allsamples);\n\n  if (unpack) {\n    out = unpackArray(out);\n  }\n\n  return out;\n}\n\nexport function shuffle(array: Array<any>) {\n  if (!Array.isArray(array)) {\n    console.error(\"Argument to shuffle() must be an array.\");\n  }\n\n  const copy_array = array.slice(0);\n  let m = copy_array.length,\n    t,\n    i;\n\n  // While there remain elements to shuffle…\n  while (m) {\n    // Pick a remaining element…\n    i = Math.floor(Math.random() * m--);\n\n    // And swap it with the current element.\n    t = copy_array[m];\n    copy_array[m] = copy_array[i];\n    copy_array[i] = t;\n  }\n\n  return copy_array;\n}\n\nexport function shuffleNoRepeats(arr: Array<any>, equalityTest: (a: any, b: any) => boolean) {\n  if (!Array.isArray(arr)) {\n    console.error(\"First argument to shuffleNoRepeats() must be an array.\");\n  }\n  if (typeof equalityTest !== \"undefined\" && typeof equalityTest !== \"function\") {\n    console.error(\"Second argument to shuffleNoRepeats() must be a function.\");\n  }\n  // define a default equalityTest\n  if (typeof equalityTest == \"undefined\") {\n    equalityTest = function (a, b) {\n      if (a === b) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  const random_shuffle = shuffle(arr);\n\n  for (let i = 0; i < random_shuffle.length - 1; i++) {\n    if (equalityTest(random_shuffle[i], random_shuffle[i + 1])) {\n      // neighbors are equal, pick a new random neighbor to swap (not the first or last element, to avoid edge cases)\n      let random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1;\n      // test to make sure the new neighbor isn't equal to the old one\n      while (\n        equalityTest(random_shuffle[i + 1], random_shuffle[random_pick]) ||\n        equalityTest(random_shuffle[i + 1], random_shuffle[random_pick + 1]) ||\n        equalityTest(random_shuffle[i + 1], random_shuffle[random_pick - 1]) ||\n        equalityTest(random_shuffle[i], random_shuffle[random_pick])\n      ) {\n        random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1;\n      }\n      const new_neighbor = random_shuffle[random_pick];\n      random_shuffle[random_pick] = random_shuffle[i + 1];\n      random_shuffle[i + 1] = new_neighbor;\n    }\n  }\n\n  return random_shuffle;\n}\n\nexport function shuffleAlternateGroups(arr_groups, random_group_order = false) {\n  const n_groups = arr_groups.length;\n  if (n_groups == 1) {\n    console.warn(\n      \"shuffleAlternateGroups() was called with only one group. Defaulting to simple shuffle.\"\n    );\n    return shuffle(arr_groups[0]);\n  }\n\n  let group_order = [];\n  for (let i = 0; i < n_groups; i++) {\n    group_order.push(i);\n  }\n  if (random_group_order) {\n    group_order = shuffle(group_order);\n  }\n\n  const randomized_groups = [];\n  let min_length = null;\n  for (let i = 0; i < n_groups; i++) {\n    min_length =\n      min_length === null ? arr_groups[i].length : Math.min(min_length, arr_groups[i].length);\n    randomized_groups.push(shuffle(arr_groups[i]));\n  }\n\n  const out = [];\n  for (let i = 0; i < min_length; i++) {\n    for (let j = 0; j < group_order.length; j++) {\n      out.push(randomized_groups[group_order[j]][i]);\n    }\n  }\n\n  return out;\n}\n\nexport function sampleWithoutReplacement(arr, size) {\n  if (!Array.isArray(arr)) {\n    console.error(\"First argument to sampleWithoutReplacement() must be an array\");\n  }\n\n  if (size > arr.length) {\n    console.error(\"Cannot take a sample larger than the size of the set of items to sample.\");\n  }\n  return shuffle(arr).slice(0, size);\n}\n\nexport function sampleWithReplacement(arr, size, weights?) {\n  if (!Array.isArray(arr)) {\n    console.error(\"First argument to sampleWithReplacement() must be an array\");\n  }\n\n  const normalized_weights = [];\n  if (typeof weights !== \"undefined\") {\n    if (weights.length !== arr.length) {\n      console.error(\n        \"The length of the weights array must equal the length of the array \" +\n          \"to be sampled from.\"\n      );\n    }\n    let weight_sum = 0;\n    for (const weight of weights) {\n      weight_sum += weight;\n    }\n    for (const weight of weights) {\n      normalized_weights.push(weight / weight_sum);\n    }\n  } else {\n    for (let i = 0; i < arr.length; i++) {\n      normalized_weights.push(1 / arr.length);\n    }\n  }\n\n  const cumulative_weights = [normalized_weights[0]];\n  for (let i = 1; i < normalized_weights.length; i++) {\n    cumulative_weights.push(normalized_weights[i] + cumulative_weights[i - 1]);\n  }\n\n  const samp = [];\n  for (let i = 0; i < size; i++) {\n    const rnd = Math.random();\n    let index = 0;\n    while (rnd > cumulative_weights[index]) {\n      index++;\n    }\n    samp.push(arr[index]);\n  }\n  return samp;\n}\n\nexport function factorial(factors: Record<string, any>, repetitions = 1, unpack = false) {\n  let design = [{}];\n  for (const [factorName, factor] of Object.entries(factors)) {\n    const new_design = [];\n    for (const level of factor) {\n      for (const cell of design) {\n        new_design.push({ ...cell, [factorName]: level });\n      }\n    }\n    design = new_design;\n  }\n\n  return repeat(design, repetitions, unpack);\n}\n\nexport function randomID(length = 32) {\n  let result = \"\";\n  const chars = \"0123456789abcdefghjklmnopqrstuvwxyz\";\n  for (let i = 0; i < length; i++) {\n    result += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return result;\n}\n\n/**\n * Generate a random integer from `lower` to `upper`, inclusive of both end points.\n * @param lower The lowest value it is possible to generate\n * @param upper The highest value it is possible to generate\n * @returns A random integer\n */\nexport function randomInt(lower: number, upper: number) {\n  if (upper < lower) {\n    throw new Error(\"Upper boundary must be greater than or equal to lower boundary\");\n  }\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\n}\n\n/**\n * Generates a random sample from a Bernoulli distribution.\n * @param p The probability of sampling 1.\n * @returns 0, with probability 1-p, or 1, with probability p.\n */\nexport function sampleBernoulli(p: number) {\n  return Math.random() <= p ? 1 : 0;\n}\n\nexport function sampleNormal(mean: number, standard_deviation: number) {\n  return randn_bm() * standard_deviation + mean;\n}\n\nexport function sampleExponential(rate: number) {\n  return -Math.log(Math.random()) / rate;\n}\n\nexport function sampleExGaussian(\n  mean: number,\n  standard_deviation: number,\n  rate: number,\n  positive = false\n) {\n  let s = sampleNormal(mean, standard_deviation) + sampleExponential(rate);\n  if (positive) {\n    while (s <= 0) {\n      s = sampleNormal(mean, standard_deviation) + sampleExponential(rate);\n    }\n  }\n  return s;\n}\n\n/**\n * Generate one or more random words.\n *\n * This is a wrapper function for the {@link https://www.npmjs.com/package/random-words `random-words` npm package}.\n *\n * @param opts An object with optional properties `min`, `max`, `exactly`,\n * `join`, `maxLength`, `wordsPerString`, `separator`, and `formatter`.\n *\n * @returns An array of words or a single string, depending on parameter choices.\n */\nexport function randomWords(opts) {\n  return rw(opts);\n}\n\n// Box-Muller transformation for a random sample from normal distribution with mean = 0, std = 1\n// https://stackoverflow.com/a/36481059/3726673\nfunction randn_bm() {\n  var u = 0,\n    v = 0;\n  while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n  while (v === 0) v = Math.random();\n  return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n}\n\nfunction unpackArray(array) {\n  const out = {};\n\n  for (const x of array) {\n    for (const key of Object.keys(x)) {\n      if (typeof out[key] === \"undefined\") {\n        out[key] = [];\n      }\n      out[key].push(x[key]);\n    }\n  }\n\n  return out;\n}\n","interface turkInformation {\n  /**\n   * Is the experiment being loaded in preview mode on Mechanical Turk?\n   */\n  previewMode: boolean;\n  /**\n   * Is the experiment being loaded outside of the Mechanical Turk environment?\n   */\n  outsideTurk: boolean;\n  /**\n   * The HIT ID.\n   */\n  hitId: string;\n  /**\n   * The Assignment ID.\n   */\n  assignmentId: string;\n  /**\n   * The worker ID.\n   */\n  workerId: string;\n  /**\n   * URL for submission of the HIT.\n   */\n  turkSubmitTo: string;\n}\n\n/**\n * Gets information about the Mechanical Turk Environment, HIT, Assignment, and Worker\n * by parsing the URL variables that Mechanical Turk generates.\n * @returns An object containing information about the Mechanical Turk Environment, HIT, Assignment, and Worker.\n */\nexport function turkInfo(): turkInformation {\n  const turk: turkInformation = {\n    previewMode: false,\n    outsideTurk: false,\n    hitId: \"INVALID_URL_PARAMETER\",\n    assignmentId: \"INVALID_URL_PARAMETER\",\n    workerId: \"INVALID_URL_PARAMETER\",\n    turkSubmitTo: \"INVALID_URL_PARAMETER\",\n  };\n\n  const param = function (url, name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    const regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    const regex = new RegExp(regexS);\n    const results = regex.exec(url);\n    return results == null ? \"\" : results[1];\n  };\n\n  const src = param(window.location.href, \"assignmentId\")\n    ? window.location.href\n    : document.referrer;\n\n  const keys = [\"assignmentId\", \"hitId\", \"workerId\", \"turkSubmitTo\"];\n  keys.map(function (key) {\n    turk[key] = unescape(param(src, key));\n  });\n\n  turk.previewMode = turk.assignmentId == \"ASSIGNMENT_ID_NOT_AVAILABLE\";\n\n  turk.outsideTurk =\n    !turk.previewMode && turk.hitId === \"\" && turk.assignmentId == \"\" && turk.workerId == \"\";\n\n  return turk;\n}\n\n/**\n * Send data to Mechnical Turk for storage.\n * @param data An object containing `key:value` pairs to send to Mechanical Turk. Values\n * cannot contain nested objects, arrays, or functions.\n * @returns Nothing\n */\nexport function submitToTurk(data) {\n  const turk = turkInfo();\n  const assignmentId = turk.assignmentId;\n  const turkSubmitTo = turk.turkSubmitTo;\n\n  if (!assignmentId || !turkSubmitTo) return;\n\n  const form = document.createElement(\"form\");\n  form.method = \"POST\";\n  form.action = turkSubmitTo + \"/mturk/externalSubmit?assignmentId=\" + assignmentId;\n\n  for (const key in data) {\n    if (data.hasOwnProperty(key)) {\n      const hiddenField = document.createElement(\"input\");\n      hiddenField.type = \"hidden\";\n      hiddenField.name = key;\n      hiddenField.id = key;\n      hiddenField.value = data[key];\n\n      form.appendChild(hiddenField);\n    }\n  }\n\n  document.body.appendChild(form);\n  form.submit();\n}\n","/**\n * Maintains a visual progress bar using HTML and CSS\n */\nexport class ProgressBar {\n  constructor(\n    private readonly containerElement: HTMLDivElement,\n    private readonly message: string | ((progress: number) => string)\n  ) {\n    this.setupElements();\n  }\n\n  private _progress = 0;\n\n  private innerDiv: HTMLDivElement;\n  private messageSpan: HTMLSpanElement;\n\n  /** Adds the progress bar HTML code into `this.containerElement` */\n  private setupElements() {\n    this.messageSpan = document.createElement(\"span\");\n\n    this.innerDiv = document.createElement(\"div\");\n    this.innerDiv.id = \"jspsych-progressbar-inner\";\n    this.update();\n\n    const outerDiv = document.createElement(\"div\");\n    outerDiv.id = \"jspsych-progressbar-outer\";\n    outerDiv.appendChild(this.innerDiv);\n\n    this.containerElement.appendChild(this.messageSpan);\n    this.containerElement.appendChild(outerDiv);\n  }\n\n  /** Updates the progress bar according to `this.progress` */\n  private update() {\n    this.innerDiv.style.width = this._progress * 100 + \"%\";\n\n    if (typeof this.message === \"function\") {\n      this.messageSpan.innerHTML = this.message(this._progress);\n    } else {\n      this.messageSpan.innerHTML = this.message;\n    }\n  }\n\n  /**\n   * The bar's current position as a number in the closed interval [0, 1]. Set this to update the\n   * progress bar accordingly.\n   */\n  set progress(progress: number) {\n    if (typeof progress !== \"number\" || progress < 0 || progress > 1) {\n      throw new Error(\"jsPsych.progressBar.progress must be a number between 0 and 1\");\n    }\n\n    this._progress = progress;\n    this.update();\n  }\n\n  get progress() {\n    return this._progress;\n  }\n}\n","import { Class } from \"type-fest\";\n\nimport { JsPsychExtension } from \"../modules/extensions\";\nimport { JsPsychPlugin, PluginInfo } from \"../modules/plugins\";\nimport { Trial } from \"./Trial\";\nimport { PromiseWrapper } from \"./util\";\n\nexport class TimelineVariable {\n  constructor(public readonly name: string) {}\n}\n\nexport type Parameter<T> = T | (() => T) | TimelineVariable;\n\nexport type TrialExtensionsConfiguration = Array<{\n  type: Class<JsPsychExtension>;\n  params?: Record<string, any>;\n}>;\n\nexport type SimulationMode = \"visual\" | \"data-only\";\n\nexport type SimulationOptions = {\n  data?: Record<string, any>;\n  mode?: SimulationMode;\n  simulate?: boolean;\n};\n\nexport type SimulationOptionsParameter = Parameter<{\n  data?: Parameter<Record<string, Parameter<any>>>;\n  mode?: Parameter<SimulationMode>;\n  simulate?: Parameter<boolean>;\n}>;\n\nexport interface TrialDescription extends Record<string, any> {\n  type: Parameter<Class<JsPsychPlugin<any>>>;\n\n  /** https://www.jspsych.org/latest/overview/plugins/#the-post_trial_gap-iti-parameter */\n  post_trial_gap?: Parameter<number>;\n\n  /** https://www.jspsych.org/latest/overview/plugins/#the-save_trial_parameters-parameter */\n  save_trial_parameters?: Parameter<Record<string, boolean>>;\n\n  /**\n   * Whether to include the values of timeline variables under a `timeline_variables` key. Can be\n   * `true` to save the values of all timeline variables, or an array of timeline variable names to\n   * only save specific timeline variables. Defaults to `false`.\n   */\n  save_timeline_variables?: Parameter<boolean | string[]>;\n\n  /** https://www.jspsych.org/latest/overview/style/#using-the-css_classes-trial-parameter */\n  css_classes?: Parameter<string | string[]>;\n\n  /** https://www.jspsych.org/latest/overview/simulation/#controlling-simulation-mode-with-simulation_options */\n  simulation_options?: SimulationOptionsParameter | string;\n\n  /** https://www.jspsych.org/latest/overview/extensions/ */\n  extensions?: Parameter<TrialExtensionsConfiguration>;\n\n  /**\n   * Whether to record the data of this trial. Defaults to `true`.\n   */\n  record_data?: Parameter<boolean>;\n\n  // Events\n\n  /** https://www.jspsych.org/latest/overview/events/#on_start-trial */\n  on_start?: (trial: any) => void;\n\n  /** https://www.jspsych.org/latest/overview/events/#on_load */\n  on_load?: () => void;\n\n  /** https://www.jspsych.org/latest/overview/events/#on_finish-trial */\n  on_finish?: (data: any) => void;\n}\n\n/** https://www.jspsych.org/latest/overview/timeline/#sampling-methods */\nexport type SampleOptions =\n  | { type: \"with-replacement\"; size: number; weights?: number[] }\n  | { type: \"without-replacement\"; size: number }\n  | { type: \"fixed-repetitions\"; size: number }\n  | { type: \"alternate-groups\"; groups: number[][]; randomize_group_order?: boolean }\n  | { type: \"custom\"; fn: (ids: number[]) => number[] };\n\nexport type TimelineArray = Array<TimelineDescription | TrialDescription | TimelineArray>;\n\nexport interface TimelineDescription extends Record<string, any> {\n  timeline: TimelineArray;\n  timeline_variables?: Record<string, any>[];\n\n  name?: string;\n\n  // Control flow\n\n  /** https://www.jspsych.org/latest/overview/timeline/#repeating-a-set-of-trials */\n  repetitions?: number;\n\n  /** https://www.jspsych.org/latest/overview/timeline/#looping-timelines */\n  loop_function?: (data: any) => boolean;\n\n  /** https://www.jspsych.org/latest/overview/timeline/#conditional-timelines */\n  conditional_function?: () => boolean;\n\n  // Randomization\n\n  /** https://www.jspsych.org/latest/overview/timeline/#random-orders-of-trials */\n  randomize_order?: boolean;\n\n  /** https://www.jspsych.org/latest/overview/timeline/#sampling-methods */\n  sample?: SampleOptions;\n\n  // Events\n\n  /** https://www.jspsych.org/latest/overview/events/#on_timeline_start */\n  on_timeline_start?: () => void;\n\n  /** https://www.jspsych.org/latest/overview/events/#on_timeline_finish */\n  on_timeline_finish?: () => void;\n}\n\nexport const timelineDescriptionKeys = [\n  \"timeline\",\n  \"timeline_variables\",\n  \"name\",\n  \"repetitions\",\n  \"loop_function\",\n  \"conditional_function\",\n  \"randomize_order\",\n  \"sample\",\n  \"on_timeline_start\",\n  \"on_timeline_finish\",\n];\n\nexport function isTrialDescription(\n  description: TrialDescription | TimelineDescription\n): description is TrialDescription {\n  return !isTimelineDescription(description);\n}\n\nexport function isTimelineDescription(\n  description: TrialDescription | TimelineDescription | TimelineArray\n): description is TimelineDescription | TimelineArray {\n  return Boolean((description as TimelineDescription).timeline) || Array.isArray(description);\n}\n\nexport enum TimelineNodeStatus {\n  PENDING,\n  RUNNING,\n  PAUSED,\n  COMPLETED,\n  ABORTED,\n}\n\n/**\n * Functions and options needed by `TimelineNode`s, provided by the `JsPsych` instance. This\n * approach allows to keep the public `JsPsych` API slim and decouples the `JsPsych` and timeline\n * node classes, simplifying unit testing.\n */\nexport interface TimelineNodeDependencies {\n  /**\n   * Called at the start of a trial, prior to invoking the plugin's trial method.\n   */\n  onTrialStart: (trial: Trial) => void;\n\n  /**\n   * Called when a trial's result data is available, before invoking `onTrialFinished()`.\n   */\n  onTrialResultAvailable: (trial: Trial) => void;\n\n  /**\n   * Called after a trial has finished.\n   */\n  onTrialFinished: (trial: Trial) => void;\n\n  /**\n   * Invoke `on_start` extension callbacks according to `extensionsConfiguration`\n   */\n  runOnStartExtensionCallbacks(extensionsConfiguration: TrialExtensionsConfiguration): void;\n\n  /**\n   * Invoke `on_load` extension callbacks according to `extensionsConfiguration`\n   */\n  runOnLoadExtensionCallbacks(extensionsConfiguration: TrialExtensionsConfiguration): void;\n\n  /**\n   * Invoke `on_finish` extension callbacks according to `extensionsConfiguration` and return a\n   * joint extensions result object\n   */\n  runOnFinishExtensionCallbacks(\n    extensionsConfiguration: TrialExtensionsConfiguration\n  ): Promise<Record<string, any>>;\n\n  /**\n   * Returns the simulation mode or `undefined`, if the experiment is not running in simulation\n   * mode.\n   */\n  getSimulationMode(): SimulationMode | undefined;\n\n  /**\n   * Returns the global simulation options as passed to `jsPsych.simulate()`\n   */\n  getGlobalSimulationOptions(): Record<string, SimulationOptionsParameter>;\n\n  /**\n   * Given a plugin class, create a new instance of it and return it.\n   */\n  instantiatePlugin: <Info extends PluginInfo>(\n    pluginClass: Class<JsPsychPlugin<Info>>\n  ) => JsPsychPlugin<Info>;\n\n  /**\n   * Return JsPsych's display element so it can be provided to plugins\n   */\n  getDisplayElement: () => HTMLElement;\n\n  /**\n   * Return the default inter-trial interval as provided to `initJsPsych()`\n   */\n  getDefaultIti: () => number;\n\n  /**\n   * A `PromiseWrapper` whose promise is resolved with result data whenever `jsPsych.finishTrial()`\n   * is called.\n   */\n  finishTrialPromise: PromiseWrapper<TrialResult | void>;\n\n  /**\n   * Clear all of the timeouts\n   */\n  clearAllTimeouts: () => void;\n}\n\nexport type TrialResult = Record<string, any>;\nexport type TrialResults = Array<Record<string, any>>;\n","/**\n * Maintains a promise and offers a function to resolve it. Whenever the promise is resolved, it is\n * replaced with a new one.\n */\nexport class PromiseWrapper<ResolveType = void> {\n  constructor() {\n    this.reset();\n  }\n\n  private promise: Promise<ResolveType>;\n  private resolvePromise: (resolveValue: ResolveType) => void;\n\n  reset() {\n    this.promise = new Promise((resolve) => {\n      this.resolvePromise = resolve;\n    });\n  }\n  get() {\n    return this.promise;\n  }\n  resolve(value: ResolveType) {\n    this.resolvePromise(value);\n    this.reset();\n  }\n}\n\nexport function isPromise(value: any): value is Promise<any> {\n  return value && typeof value[\"then\"] === \"function\";\n}\n\nexport function delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n/**\n * Returns the string representation of a `path` array like accepted by lodash's `get` and `set`\n * functions.\n */\nexport function parameterPathArrayToString([firstPathElement, ...remainingPathElements]: string[]) {\n  let pathString = firstPathElement ?? \"\";\n\n  for (const pathElement of remainingPathElements) {\n    pathString += Number.isNaN(Number.parseInt(pathElement))\n      ? `.${pathElement}`\n      : `[${pathElement}]`;\n  }\n\n  return pathString;\n}\n\nfunction isObjectOrArray(value: any): value is Record<string, any> | any[] {\n  return typeof value === \"object\" && value !== null;\n}\n\ntype LookupResult = { doesPathExist: boolean; value?: any };\n\n/**\n * Initialized with an object, provides a `lookup` method to look up nested object and array paths\n * and a `set` method to override the element that `lookup` uses at a given path. The original\n * object remains unmodified. All looked up values are cached, including those at intermediate\n * paths. This means, `set`ting the element at a path only affects nested path lookups if the paths\n * have not been looked up and cached before.\n */\nexport class ParameterObjectPathCache {\n  private static lookupChild(\n    objectOrArray: Record<string, any> | any[],\n    childName: string\n  ): LookupResult {\n    let doesPathExist: boolean = false;\n    let childValue: any;\n\n    if (Number.isNaN(Number.parseInt(childName))) {\n      // `childName` refers to an object property\n      if (Object.hasOwn(objectOrArray, childName)) {\n        doesPathExist = true;\n        childValue = objectOrArray[childName];\n      }\n    } else {\n      // `childName` refers to an array index\n      if (Number.parseInt(childName) < objectOrArray.length) {\n        doesPathExist = true;\n        childValue = objectOrArray[childName];\n      }\n    }\n\n    return { doesPathExist, value: childValue };\n  }\n\n  private cache = new Map<string, any>();\n  private rootObject: any;\n\n  private get(path: string[]) {\n    return this.cache.get(path.join(\".\"));\n  }\n\n  private has(path: string[]) {\n    return this.cache.has(path.join(\".\"));\n  }\n\n  constructor() {}\n\n  public initialize(rootObject: any) {\n    this.rootObject = rootObject;\n    this.cache.set(\"\", rootObject);\n  }\n\n  public reset() {\n    this.cache.clear();\n    this.cache.set(\"\", this.rootObject);\n  }\n\n  public set(path: string[], value: any) {\n    this.cache.set(path.join(\".\"), value);\n  }\n\n  public lookup(path: string[]): LookupResult {\n    if (this.has(path)) {\n      return { doesPathExist: true, value: this.get(path) };\n    }\n\n    // Recursively find the closest ancestor path that has already been cached and start looking up\n    // the path from there, caching intermediate elements along the way\n    const lookupPath = (path: string[]): LookupResult => {\n      const parentPath = path.slice(0, -1);\n      const childName = path[path.length - 1];\n      if (!this.has(parentPath) && parentPath.length > 0) {\n        if (!lookupPath(parentPath).doesPathExist) {\n          return { doesPathExist: false };\n        }\n      }\n\n      const parentValue = this.get(parentPath);\n      if (!isObjectOrArray(parentValue)) {\n        return { doesPathExist: false };\n      }\n\n      const lookupResult = ParameterObjectPathCache.lookupChild(parentValue, childName);\n      if (lookupResult.doesPathExist) {\n        this.set(path, lookupResult.value);\n      }\n      return lookupResult;\n    };\n\n    return lookupPath(path);\n  }\n}\n","import type { Timeline } from \"./Timeline\";\nimport { ParameterObjectPathCache } from \"./util\";\nimport {\n  TimelineArray,\n  TimelineDescription,\n  TimelineNodeDependencies,\n  TimelineNodeStatus,\n  TimelineVariable,\n  TrialDescription,\n  TrialResult,\n} from \".\";\n\nexport type GetParameterValueOptions = {\n  /**\n   * If true, and the retrieved parameter value is a function, invoke the function and return its\n   * return value (defaults to `true`)\n   */\n  evaluateFunctions?: boolean;\n\n  /**\n   * Whether to fall back to parent timeline node parameters (defaults to `true`)\n   */\n  recursive?: boolean;\n\n  /**\n   * Whether the timeline node should cache the parameter lookup result for successive lookups,\n   * including those of nested properties or array elements (defaults to `true`)\n   */\n  cacheResult?: boolean;\n\n  /**\n   * A function that will be invoked with the original result of the parameter value lookup.\n   * Whatever it returns will subsequently be used instead of the original result. This allows to\n   * modify results before they are cached.\n   */\n  replaceResult?: (originalResult: any) => any;\n};\n\nexport abstract class TimelineNode {\n  public abstract readonly description: TimelineDescription | TrialDescription | TimelineArray;\n\n  /**\n   * The globally unique trial index of this node. It is set when the node is run. Timeline nodes\n   * have the same trial index as their first trial.\n   */\n  public index?: number;\n\n  public abstract readonly parent?: Timeline;\n\n  abstract run(): Promise<void>;\n\n  /**\n   * Returns a flat array of all currently available results of this node\n   */\n  abstract getResults(): TrialResult[];\n\n  /**\n   * Recursively evaluates the given timeline variable, starting at the current timeline node.\n   * Returns the result, or `undefined` if the variable is neither specified in the timeline\n   * description of this node, nor in the description of any parent node.\n   */\n  abstract evaluateTimelineVariable(variable: TimelineVariable): any;\n\n  /**\n   * Returns the most recent (child) TimelineNode. For trial nodes, this is always the trial node\n   * itself since trial nodes do not have child nodes. For timeline nodes, the return value is a\n   * Trial object most of the time, but it may also be a Timeline object when a timeline hasn't yet\n   * instantiated its children (e.g. during initial timeline callback functions).\n   */\n  abstract getLatestNode(): TimelineNode;\n\n  /**\n   * Returns an active child timeline (or itself) that matches the given name, or `undefined` if no such child exists.\n   */\n  abstract getActiveTimelineByName(name: string): Timeline | undefined;\n\n  protected status = TimelineNodeStatus.PENDING;\n\n  constructor(protected readonly dependencies: TimelineNodeDependencies) {}\n\n  getStatus() {\n    return this.status;\n  }\n\n  private parameterValueCache = new ParameterObjectPathCache();\n\n  /**\n   * Initializes the parameter value cache with `this.description`. To be called by subclass\n   * constructors after setting `this.description`.\n   */\n  protected initializeParameterValueCache() {\n    this.parameterValueCache.initialize(this.description);\n  }\n\n  /**\n   * Resets all cached parameter values in this timeline node and all of its parents. This is\n   * necessary to re-evaluate function parameters and timeline variables at each new trial.\n   */\n  protected resetParameterValueCache() {\n    this.parameterValueCache.reset();\n    this.parent?.resetParameterValueCache();\n  }\n\n  /**\n   * Retrieves a parameter value from the description of this timeline node, recursively falling\n   * back to the description of each parent timeline node unless `recursive` is set to `false`. If\n   * the parameter...\n   *\n   * * is a timeline variable, evaluates the variable and returns the result.\n   * * is not specified, returns `undefined`.\n   * * is a function and `evaluateFunctions` is not set to `false`, invokes the function and returns\n   *   its return value\n   * * has previously been looked up, return the cached result of the previous lookup\n   *\n   * @param parameterPath The path of the respective parameter in the timeline node description. If\n   * the path is an array, nested object properties or array items will be looked up.\n   * @param options See {@link GetParameterValueOptions}\n   */\n  public getParameterValue(\n    parameterPath: string | string[],\n    options: GetParameterValueOptions = {}\n  ): any {\n    const {\n      evaluateFunctions = true,\n      recursive = true,\n      cacheResult = true,\n      replaceResult,\n    } = options;\n\n    if (typeof parameterPath === \"string\") {\n      parameterPath = [parameterPath];\n    }\n\n    let { doesPathExist, value: result } = this.parameterValueCache.lookup(parameterPath);\n    if (!doesPathExist && recursive && this.parent) {\n      result = this.parent.getParameterValue(parameterPath, options);\n    }\n\n    if (typeof result === \"function\" && evaluateFunctions) {\n      result = result();\n    }\n    if (result instanceof TimelineVariable) {\n      result = this.evaluateTimelineVariable(result);\n    }\n\n    if (typeof replaceResult === \"function\") {\n      result = replaceResult(result);\n    }\n\n    if (cacheResult) {\n      this.parameterValueCache.set(parameterPath, result);\n    }\n\n    return result;\n  }\n\n  /**\n   * Retrieves and evaluates the `data` parameter. It is different from other parameters in that\n   * it's properties may be functions that have to be evaluated, and parent nodes' data parameter\n   * properties are merged into the result.\n   */\n  public getDataParameter(): Record<string, any> | undefined {\n    const data = this.getParameterValue(\"data\", { recursive: false });\n\n    return {\n      ...Object.fromEntries(\n        typeof data === \"object\"\n          ? Object.keys(data).map((key) => [key, this.getParameterValue([\"data\", key])])\n          : []\n      ),\n      ...this.parent?.getDataParameter(),\n    };\n  }\n}\n","import { Class } from \"type-fest\";\n\nimport { ParameterInfos } from \"../modules/plugins\";\nimport { JsPsychPlugin, ParameterType, PluginInfo } from \"../modules/plugins\";\nimport { deepCopy, deepMerge } from \"../modules/utils\";\nimport { Timeline } from \"./Timeline\";\nimport { GetParameterValueOptions, TimelineNode } from \"./TimelineNode\";\nimport { delay, isPromise, parameterPathArrayToString } from \"./util\";\nimport {\n  SimulationOptions,\n  TimelineNodeDependencies,\n  TimelineNodeStatus,\n  TimelineVariable,\n  TrialDescription,\n  TrialResult,\n  timelineDescriptionKeys,\n} from \".\";\n\nexport class Trial extends TimelineNode {\n  public readonly pluginClass: Class<JsPsychPlugin<any>>;\n  public pluginInstance: JsPsychPlugin<any>;\n  public trialObject?: TrialDescription;\n  public index?: number;\n\n  private result: TrialResult;\n  private readonly pluginInfo: PluginInfo;\n\n  constructor(\n    dependencies: TimelineNodeDependencies,\n    public readonly description: TrialDescription,\n    public readonly parent: Timeline\n  ) {\n    super(dependencies);\n    this.initializeParameterValueCache();\n\n    this.trialObject = deepCopy(description);\n    this.pluginClass = this.getParameterValue(\"type\", { evaluateFunctions: false });\n    this.pluginInfo = this.pluginClass[\"info\"];\n\n    if (!(\"version\" in this.pluginInfo) && !(\"data\" in this.pluginInfo)) {\n      console.warn(\n        this.pluginInfo[\"name\"],\n        \"is missing the 'version' and 'data' fields. Please update plugin as 'version' and 'data' will be required in v9. See https://www.jspsych.org/latest/developers/plugin-development/ for more details.\"\n      );\n    } else if (!(\"version\" in this.pluginInfo)) {\n      console.warn(\n        this.pluginInfo[\"name\"],\n        \"is missing the 'version' field. Please update plugin as 'version' will be required in v9. See https://www.jspsych.org/latest/developers/plugin-development/ for more details.\"\n      );\n    } else if (!(\"data\" in this.pluginInfo)) {\n      console.warn(\n        this.pluginInfo[\"name\"],\n        \"is missing the 'data' field. Please update plugin as 'data' will be required in v9. See https://www.jspsych.org/latest/developers/plugin-development/ for more details.\"\n      );\n    }\n  }\n\n  public async run() {\n    this.status = TimelineNodeStatus.RUNNING;\n    this.processParameters();\n\n    this.onStart();\n    this.addCssClasses();\n\n    this.pluginInstance = this.dependencies.instantiatePlugin(this.pluginClass);\n\n    this.result = this.processResult(await this.executeTrial());\n\n    this.dependencies.onTrialResultAvailable(this);\n\n    this.status = TimelineNodeStatus.COMPLETED;\n\n    await this.onFinish();\n    this.removeCssClasses();\n\n    const gap = this.getParameterValue(\"post_trial_gap\") ?? this.dependencies.getDefaultIti();\n    if (gap !== 0 && this.dependencies.getSimulationMode() !== \"data-only\") {\n      await delay(gap);\n    }\n\n    this.resetParameterValueCache();\n  }\n\n  private async executeTrial() {\n    const trialPromise = this.dependencies.finishTrialPromise.get();\n\n    /** Used as a way to figure out if `finishTrial()` has ben called without awaiting `trialPromise` */\n    let hasTrialPromiseBeenResolved = false;\n    trialPromise.then(() => {\n      hasTrialPromiseBeenResolved = true;\n    });\n\n    const { trialReturnValue, hasTrialBeenSimulated } = this.invokeTrialMethod();\n\n    // Wait until the trial has completed and grab result data\n    let result: TrialResult | void;\n    if (isPromise(trialReturnValue)) {\n      result = await Promise.race([trialReturnValue, trialPromise]);\n\n      // If `finishTrial()` was called, use the result provided to it. This may happen although\n      // `trialReturnValue` won the race (\"run-to-completion\").\n      if (hasTrialPromiseBeenResolved) {\n        result = await trialPromise;\n      }\n    } else {\n      // The `simulate` method always invokes `onLoad()`, so we don't call `onLoad()` when the trial\n      // has been simulated\n      if (!hasTrialBeenSimulated) {\n        this.onLoad();\n      }\n\n      result = await trialPromise;\n    }\n\n    // The trial has finished, time to clean up.\n    this.cleanupTrial();\n\n    return result;\n  }\n\n  private invokeTrialMethod(): {\n    trialReturnValue: void | Promise<void | TrialResult>;\n    hasTrialBeenSimulated: boolean;\n  } {\n    const globalSimulationMode = this.dependencies.getSimulationMode();\n\n    if (globalSimulationMode && typeof this.pluginInstance.simulate === \"function\") {\n      const simulationOptions = this.getSimulationOptions();\n\n      if (simulationOptions.simulate !== false) {\n        return {\n          hasTrialBeenSimulated: true,\n          trialReturnValue: this.pluginInstance.simulate(\n            this.trialObject,\n            simulationOptions.mode ?? globalSimulationMode,\n            simulationOptions,\n            this.onLoad\n          ),\n        };\n      }\n    }\n\n    return {\n      hasTrialBeenSimulated: false,\n      trialReturnValue: this.pluginInstance.trial(\n        this.dependencies.getDisplayElement(),\n        this.trialObject,\n        this.onLoad\n      ),\n    };\n  }\n\n  /**\n   * Cleanup the trial by removing the display element and removing event listeners\n   */\n  private cleanupTrial() {\n    this.dependencies.clearAllTimeouts();\n    this.dependencies.getDisplayElement().innerHTML = \"\";\n  }\n\n  /**\n   * Add the CSS classes from the `css_classes` parameter to the display element\n   */\n  private addCssClasses() {\n    const classes: string | string[] = this.getParameterValue(\"css_classes\");\n    const classList = this.dependencies.getDisplayElement().classList;\n    if (typeof classes === \"string\") {\n      classList.add(classes);\n    } else if (Array.isArray(classes)) {\n      classList.add(...classes);\n    }\n  }\n\n  /**\n   * Removes the provided css classes from the display element\n   */\n  private removeCssClasses() {\n    const classes = this.getParameterValue(\"css_classes\");\n    if (classes) {\n      this.dependencies\n        .getDisplayElement()\n        .classList.remove(...(typeof classes === \"string\" ? [classes] : classes));\n    }\n  }\n\n  private processResult(result: TrialResult | void) {\n    if (!result) {\n      result = {};\n    }\n\n    for (const [parameterName, shouldParameterBeIncluded] of Object.entries(\n      this.getParameterValue(\"save_trial_parameters\") ?? {}\n    )) {\n      if (this.pluginInfo.parameters[parameterName]) {\n        if (shouldParameterBeIncluded && !Object.hasOwn(result, parameterName)) {\n          let parameterValue = this.trialObject[parameterName];\n          if (typeof parameterValue === \"function\") {\n            parameterValue = parameterValue.toString();\n          }\n          result[parameterName] = parameterValue;\n        } else if (!shouldParameterBeIncluded && Object.hasOwn(result, parameterName)) {\n          delete result[parameterName];\n        }\n      } else {\n        console.warn(\n          `Non-existent parameter \"${parameterName}\" specified in save_trial_parameters.`\n        );\n      }\n    }\n\n    result = {\n      ...this.getDataParameter(),\n      ...result,\n      trial_type: this.pluginInfo.name,\n      trial_index: this.index,\n      plugin_version: this.pluginInfo[\"version\"] ? this.pluginInfo[\"version\"] : null,\n    };\n\n    // Add timeline variables to the result according to the `save_timeline_variables` parameter\n    const saveTimelineVariables = this.getParameterValue(\"save_timeline_variables\");\n    if (saveTimelineVariables === true) {\n      result.timeline_variables = { ...this.parent.getAllTimelineVariables() };\n    } else if (Array.isArray(saveTimelineVariables)) {\n      result.timeline_variables = Object.fromEntries(\n        Object.entries(this.parent.getAllTimelineVariables()).filter(([key, _]) =>\n          saveTimelineVariables.includes(key)\n        )\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Runs a callback function retrieved from a parameter value and returns its result.\n   *\n   * @param parameterName The name of the parameter to retrieve the callback function from.\n   * @param callbackParameters The parameters (if any) to be passed to the callback function\n   */\n  private runParameterCallback(parameterName: string, ...callbackParameters: unknown[]) {\n    const callback = this.getParameterValue(parameterName, { evaluateFunctions: false });\n    if (callback) {\n      return callback(...callbackParameters);\n    }\n  }\n\n  private onStart() {\n    this.dependencies.onTrialStart(this);\n    this.runParameterCallback(\"on_start\", this.trialObject);\n    this.dependencies.runOnStartExtensionCallbacks(this.getParameterValue(\"extensions\"));\n  }\n\n  private onLoad = () => {\n    this.runParameterCallback(\"on_load\");\n    this.dependencies.runOnLoadExtensionCallbacks(this.getParameterValue(\"extensions\"));\n  };\n\n  private async onFinish() {\n    const extensionResults = await this.dependencies.runOnFinishExtensionCallbacks(\n      this.getParameterValue(\"extensions\")\n    );\n    Object.assign(this.result, extensionResults);\n\n    await Promise.resolve(this.runParameterCallback(\"on_finish\", this.getResult()));\n\n    this.dependencies.onTrialFinished(this);\n  }\n\n  public evaluateTimelineVariable(variable: TimelineVariable) {\n    // Timeline variable values are specified at the timeline level, not at the trial level, hence\n    // deferring to the parent timeline here\n    return this.parent?.evaluateTimelineVariable(variable);\n  }\n\n  public getParameterValue(\n    parameterPath: string | string[],\n    options: GetParameterValueOptions = {}\n  ) {\n    // Disable recursion for timeline description keys\n    if (\n      timelineDescriptionKeys.includes(\n        typeof parameterPath === \"string\" ? parameterPath : parameterPath[0]\n      )\n    ) {\n      options.recursive = false;\n    }\n    return super.getParameterValue(parameterPath, options);\n  }\n\n  /**\n   * Retrieves and evaluates the `simulation_options` parameter, considering nested properties and\n   * global simulation options.\n   */\n  public getSimulationOptions() {\n    const simulationOptions: SimulationOptions = this.getParameterValue(\"simulation_options\", {\n      replaceResult: (result = {}) => {\n        if (typeof result === \"string\") {\n          // Look up the global simulation options by their key\n          const globalSimulationOptions = this.dependencies.getGlobalSimulationOptions();\n          result = globalSimulationOptions[result] ?? globalSimulationOptions[\"default\"] ?? {};\n        }\n\n        return deepMerge(\n          deepCopy(this.dependencies.getGlobalSimulationOptions().default),\n          deepCopy(result)\n        );\n      },\n    });\n\n    if (typeof simulationOptions === \"undefined\") {\n      return {};\n    }\n\n    simulationOptions.mode = this.getParameterValue([\"simulation_options\", \"mode\"]);\n    simulationOptions.simulate = this.getParameterValue([\"simulation_options\", \"simulate\"]);\n    simulationOptions.data = this.getParameterValue([\"simulation_options\", \"data\"]);\n\n    if (typeof simulationOptions.data === \"object\") {\n      simulationOptions.data = Object.fromEntries(\n        Object.keys(simulationOptions.data).map((key) => [\n          key,\n          this.getParameterValue([\"simulation_options\", \"data\", key]),\n        ])\n      );\n    }\n\n    return simulationOptions;\n  }\n\n  /**\n   * Returns the result object of this trial or `undefined` if the result is not yet known or the\n   * `record_data` trial parameter is `false`.\n   */\n  public getResult() {\n    return this.getParameterValue(\"record_data\") === false ? undefined : this.result;\n  }\n\n  public getResults() {\n    const result = this.getResult();\n    return result ? [result] : [];\n  }\n\n  /**\n   * Checks that the parameters provided in the trial description align with the plugin's info\n   * object, resolves missing parameter values from the parent timeline, resolves timeline variable\n   * parameters, evaluates parameter functions if the expected parameter type is not `FUNCTION`, and\n   * sets default values for optional parameters.\n   */\n  private processParameters() {\n    const assignParameterValues = (\n      parameterObject: Record<string, any>,\n      parameterInfos: ParameterInfos,\n      parentParameterPath: string[] = []\n    ) => {\n      for (const [parameterName, parameterConfig] of Object.entries(parameterInfos)) {\n        const parameterPath = [...parentParameterPath, parameterName];\n\n        let parameterValue = this.getParameterValue(parameterPath, {\n          evaluateFunctions: parameterConfig.type !== ParameterType.FUNCTION,\n          replaceResult: (originalResult) => {\n            if (typeof originalResult === \"undefined\") {\n              if (typeof parameterConfig.default === \"undefined\") {\n                throw new Error(\n                  `You must specify a value for the \"${parameterPathArrayToString(\n                    parameterPath\n                  )}\" parameter in the \"${this.pluginInfo.name}\" plugin.`\n                );\n              } else {\n                return parameterConfig.default;\n              }\n            } else {\n              return originalResult;\n            }\n          },\n        });\n\n        if (parameterConfig.array && !Array.isArray(parameterValue)) {\n          const parameterPathString = parameterPathArrayToString(parameterPath);\n          throw new Error(\n            `A non-array value (\\`${parameterValue}\\`) was provided for the array parameter \"${parameterPathString}\" in the \"${this.pluginInfo.name}\" plugin. Please make sure that \"${parameterPathString}\" is an array.`\n          );\n        }\n\n        if (parameterConfig.type === ParameterType.COMPLEX && parameterConfig.nested) {\n          // Assign parameter values according to the `nested` schema\n          if (parameterConfig.array) {\n            // ...for each nested array element\n            parameterValue = parameterValue.map((_, arrayIndex) => {\n              const arrayElementPath = [...parameterPath, arrayIndex.toString()];\n              const arrayElementValue = this.getParameterValue(arrayElementPath);\n              assignParameterValues(arrayElementValue, parameterConfig.nested, arrayElementPath);\n              return arrayElementValue;\n            });\n          } else {\n            // ...for the nested object\n            assignParameterValues(parameterValue, parameterConfig.nested, parameterPath);\n          }\n        }\n\n        parameterObject[parameterName] = parameterValue;\n      }\n    };\n\n    const trialObject = deepCopy(this.description);\n    assignParameterValues(trialObject, this.pluginInfo.parameters);\n    this.trialObject = trialObject;\n  }\n\n  public getLatestNode() {\n    return this;\n  }\n\n  public getActiveTimelineByName(name: string): Timeline | undefined {\n    // This returns undefined because the function is looking\n    // for a timeline. If we get to this point, then none\n    // of the parent nodes match the name.\n    return undefined;\n  }\n}\n","import { DataCollection } from \"../modules/data/DataCollection\";\nimport {\n  repeat,\n  sampleWithReplacement,\n  sampleWithoutReplacement,\n  shuffle,\n  shuffleAlternateGroups,\n} from \"../modules/randomization\";\nimport { TimelineNode } from \"./TimelineNode\";\nimport { Trial } from \"./Trial\";\nimport { PromiseWrapper } from \"./util\";\nimport {\n  TimelineArray,\n  TimelineDescription,\n  TimelineNodeDependencies,\n  TimelineNodeStatus,\n  TimelineVariable,\n  TrialDescription,\n  TrialResult,\n  isTimelineDescription,\n  isTrialDescription,\n} from \".\";\n\nexport class Timeline extends TimelineNode {\n  public readonly children: TimelineNode[] = [];\n  public readonly description: TimelineDescription;\n\n  constructor(\n    dependencies: TimelineNodeDependencies,\n    description: TimelineDescription | TimelineArray,\n    public readonly parent?: Timeline\n  ) {\n    super(dependencies);\n    this.description = Array.isArray(description) ? { timeline: description } : description;\n    this.initializeParameterValueCache();\n  }\n\n  private currentChild?: TimelineNode;\n  private shouldAbort = false;\n\n  public async run() {\n    if (typeof this.index === \"undefined\") {\n      // We're the first timeline node to run. Otherwise, another node would have set our index\n      // right before running us.\n      this.index = 0;\n    }\n\n    this.status = TimelineNodeStatus.RUNNING;\n\n    const { conditional_function, loop_function, repetitions = 1 } = this.description;\n\n    // Generate initial timeline variable order so the first set of timeline variables is already\n    // available to the `on_timeline_start` and `conditional_function` callbacks\n    let timelineVariableOrder = this.generateTimelineVariableOrder();\n    this.setCurrentTimelineVariablesByIndex(timelineVariableOrder[0]);\n    let isInitialTimelineVariableOrder = true; // So we don't regenerate the order in the first iteration\n\n    let currentLoopIterationResults: TrialResult[];\n\n    if (!conditional_function || conditional_function()) {\n      this.onStart();\n\n      for (let repetition = 0; repetition < repetitions; repetition++) {\n        do {\n          currentLoopIterationResults = [];\n\n          // Generate a new timeline variable order in each iteration except for the first one where\n          // it has been done before\n          if (isInitialTimelineVariableOrder) {\n            isInitialTimelineVariableOrder = false;\n          } else {\n            timelineVariableOrder = this.generateTimelineVariableOrder();\n          }\n\n          for (const timelineVariableIndex of timelineVariableOrder) {\n            this.setCurrentTimelineVariablesByIndex(timelineVariableIndex);\n\n            for (const childNode of this.instantiateChildNodes()) {\n              const previousChild = this.currentChild;\n              this.currentChild = childNode;\n              childNode.index = previousChild\n                ? previousChild.getLatestNode().index + 1\n                : this.index;\n\n              await childNode.run();\n              // @ts-expect-error TS thinks `this.status` must be `RUNNING` now, but it might have\n              // changed while `await`ing\n              if (this.status === TimelineNodeStatus.PAUSED) {\n                await this.resumePromise.get();\n              }\n              if (this.shouldAbort) {\n                this.status = TimelineNodeStatus.ABORTED;\n                return;\n              }\n\n              currentLoopIterationResults.push(...this.currentChild.getResults());\n            }\n          }\n        } while (loop_function && loop_function(new DataCollection(currentLoopIterationResults)));\n      }\n\n      this.onFinish();\n    }\n\n    this.status = TimelineNodeStatus.COMPLETED;\n  }\n\n  private onStart() {\n    if (this.description.on_timeline_start) {\n      this.description.on_timeline_start();\n    }\n  }\n\n  private onFinish() {\n    if (this.description.on_timeline_finish) {\n      this.description.on_timeline_finish();\n    }\n  }\n\n  pause() {\n    if (this.currentChild instanceof Timeline) {\n      this.currentChild.pause();\n    }\n    this.status = TimelineNodeStatus.PAUSED;\n  }\n\n  private resumePromise = new PromiseWrapper();\n  resume() {\n    if (this.status == TimelineNodeStatus.PAUSED) {\n      if (this.currentChild instanceof Timeline) {\n        this.currentChild.resume();\n      }\n      this.status = TimelineNodeStatus.RUNNING;\n      this.resumePromise.resolve();\n    }\n  }\n\n  /**\n   * If the timeline is running or paused, aborts the timeline after the current trial has completed\n   */\n  abort() {\n    if (this.status === TimelineNodeStatus.RUNNING || this.status === TimelineNodeStatus.PAUSED) {\n      if (this.currentChild instanceof Timeline) {\n        this.currentChild.abort();\n      }\n\n      this.shouldAbort = true;\n      if (this.status === TimelineNodeStatus.PAUSED) {\n        this.resume();\n      }\n    }\n  }\n\n  private instantiateChildNodes() {\n    const newChildNodes = this.description.timeline.map((childDescription) => {\n      return isTimelineDescription(childDescription)\n        ? new Timeline(this.dependencies, childDescription, this)\n        : new Trial(this.dependencies, childDescription, this);\n    });\n    this.children.push(...newChildNodes);\n    return newChildNodes;\n  }\n\n  private currentTimelineVariables: Record<string, any>;\n  private setCurrentTimelineVariablesByIndex(index: number | null) {\n    this.currentTimelineVariables = {\n      ...this.parent?.getAllTimelineVariables(),\n      ...(index === null ? undefined : this.description.timeline_variables[index]),\n    };\n  }\n\n  /**\n   * If the timeline has timeline variables, returns the order of `timeline_variables` array indices\n   * to be used, according to the timeline's `sample` setting. If the timeline has no timeline\n   * variables, returns `[null]`.\n   */\n  private generateTimelineVariableOrder() {\n    const timelineVariableLength = this.description.timeline_variables?.length;\n    if (!timelineVariableLength) {\n      return [null];\n    }\n\n    let order = [...Array(timelineVariableLength).keys()];\n\n    const sample = this.description.sample;\n\n    if (sample) {\n      switch (sample.type) {\n        case \"custom\":\n          order = sample.fn(order);\n          break;\n\n        case \"with-replacement\":\n          order = sampleWithReplacement(order, sample.size, sample.weights);\n          break;\n\n        case \"without-replacement\":\n          order = sampleWithoutReplacement(order, sample.size);\n          break;\n\n        case \"fixed-repetitions\":\n          order = repeat(order, sample.size);\n          break;\n\n        case \"alternate-groups\":\n          order = shuffleAlternateGroups(sample.groups, sample.randomize_group_order);\n          break;\n\n        default:\n          throw new Error(\n            `Invalid type \"${\n              // @ts-expect-error TS doesn't have a type for `sample` in this case\n              sample.type\n            }\" in timeline sample parameters. Valid options for type are \"custom\", \"with-replacement\", \"without-replacement\", \"fixed-repetitions\", and \"alternate-groups\"`\n          );\n      }\n    }\n\n    if (this.description.randomize_order) {\n      order = shuffle(order);\n    }\n\n    return order;\n  }\n\n  /**\n   * Returns the current values of all timeline variables, including those from parent timelines\n   */\n  public getAllTimelineVariables() {\n    return this.currentTimelineVariables;\n  }\n\n  public evaluateTimelineVariable(variable: TimelineVariable) {\n    if (this.currentTimelineVariables?.hasOwnProperty(variable.name)) {\n      return this.currentTimelineVariables[variable.name];\n    }\n    throw new Error(`Timeline variable ${variable.name} not found.`);\n  }\n\n  public getResults() {\n    const results: TrialResult[] = [];\n    for (const child of this.children) {\n      if (child instanceof Trial) {\n        const childResult = child.getResult();\n        if (childResult) {\n          results.push(childResult);\n        }\n      } else if (child instanceof Timeline) {\n        results.push(...child.getResults());\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Returns the naive progress of the timeline (as a fraction), without considering conditional or\n   * loop functions.\n   */\n  public getNaiveProgress() {\n    if (this.status === TimelineNodeStatus.PENDING) {\n      return 0;\n    }\n\n    const activeNode = this.getLatestNode();\n    if (!activeNode) {\n      return 1;\n    }\n\n    let completedTrials = activeNode.index;\n    if (activeNode.getStatus() === TimelineNodeStatus.COMPLETED) {\n      completedTrials++;\n    }\n\n    return Math.min(completedTrials / this.getNaiveTrialCount(), 1);\n  }\n\n  /**\n   * Recursively computes the naive number of trials in the timeline, without considering\n   * conditional or loop functions.\n   */\n  public getNaiveTrialCount() {\n    // Since child timeline nodes are instantiated lazily, we cannot rely on them but instead have\n    // to recurse the description programmatically.\n\n    const getTrialCount = (description: TimelineArray | TimelineDescription | TrialDescription) => {\n      const getTimelineArrayTrialCount = (description: TimelineArray) =>\n        description\n          .map((childDescription) => getTrialCount(childDescription))\n          .reduce((a, b) => a + b);\n\n      if (Array.isArray(description)) {\n        return getTimelineArrayTrialCount(description);\n      }\n\n      if (isTrialDescription(description)) {\n        return 1;\n      }\n      if (isTimelineDescription(description)) {\n        let conditionCount = description.timeline_variables?.length || 1;\n\n        switch (description.sample?.type) {\n          case \"with-replacement\":\n          case \"without-replacement\":\n            conditionCount = description.sample.size;\n            break;\n\n          case \"fixed-repetitions\":\n            conditionCount *= description.sample.size;\n            break;\n\n          case \"alternate-groups\":\n            conditionCount = description.sample.groups\n              .map((group) => group.length)\n              .reduce((a, b) => a + b, 0);\n            break;\n        }\n\n        return (\n          getTimelineArrayTrialCount(description.timeline) *\n          (description.repetitions ?? 1) *\n          conditionCount\n        );\n      }\n      return 0;\n    };\n\n    return getTrialCount(this.description);\n  }\n\n  public getLatestNode() {\n    return this.currentChild?.getLatestNode() ?? this;\n  }\n\n  public getActiveTimelineByName(name: string) {\n    if (this.description.name === name) {\n      return this;\n    }\n\n    return this.currentChild?.getActiveTimelineByName(name);\n  }\n}\n","import autoBind from \"auto-bind\";\n\nimport { version } from \"../package.json\";\nimport { ExtensionManager, ExtensionManagerDependencies } from \"./ExtensionManager\";\nimport { JsPsychData, JsPsychDataDependencies } from \"./modules/data\";\nimport { PluginAPI, createJointPluginAPIObject } from \"./modules/plugin-api\";\nimport * as randomization from \"./modules/randomization\";\nimport * as turk from \"./modules/turk\";\nimport * as utils from \"./modules/utils\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport {\n  SimulationMode,\n  SimulationOptionsParameter,\n  TimelineArray,\n  TimelineDescription,\n  TimelineNodeDependencies,\n  TimelineVariable,\n  TrialResult,\n} from \"./timeline\";\nimport { Timeline } from \"./timeline/Timeline\";\nimport { Trial } from \"./timeline/Trial\";\nimport { PromiseWrapper } from \"./timeline/util\";\n\nexport class JsPsych {\n  turk = turk;\n  randomization = randomization;\n  utils = utils;\n  data: JsPsychData;\n  pluginAPI: PluginAPI;\n\n  version() {\n    return version;\n  }\n\n  /** Options */\n  private options: any = {};\n\n  /** Experiment timeline */\n  private timeline?: Timeline;\n\n  /** Target DOM element */\n  private displayContainerElement: HTMLElement;\n  private displayElement: HTMLElement;\n\n  /** Time that the experiment began */\n  private experimentStartTime: Date;\n\n  /**\n   * Whether the page is retrieved directly via the `file://` protocol (true) or hosted on a web\n   * server (false)\n   */\n  private isFileProtocolUsed = false;\n\n  /** The simulation mode (if the experiment is being simulated) */\n  private simulationMode?: SimulationMode;\n\n  /** Simulation options passed in via `simulate()` */\n  private simulationOptions: Record<string, SimulationOptionsParameter>;\n\n  private extensionManager: ExtensionManager;\n\n  constructor(options?) {\n    // override default options if user specifies an option\n    options = {\n      display_element: undefined,\n      on_finish: () => {},\n      on_trial_start: () => {},\n      on_trial_finish: () => {},\n      on_data_update: () => {},\n      on_interaction_data_update: () => {},\n      on_close: () => {},\n      use_webaudio: true,\n      show_progress_bar: false,\n      message_progress_bar: \"Completion Progress\",\n      auto_update_progress_bar: true,\n      default_iti: 0,\n      minimum_valid_rt: 0,\n      experiment_width: null,\n      override_safe_mode: false,\n      case_sensitive_responses: false,\n      extensions: [],\n      ...options,\n    };\n    this.options = options;\n\n    autoBind(this); // so we can pass JsPsych methods as callbacks and `this` remains the JsPsych instance\n\n    // detect whether page is running in browser as a local file, and if so, disable web audio and\n    // video preloading to prevent CORS issues\n    if (\n      window.location.protocol == \"file:\" &&\n      (options.override_safe_mode === false || typeof options.override_safe_mode === \"undefined\")\n    ) {\n      options.use_webaudio = false;\n      this.isFileProtocolUsed = true;\n      console.warn(\n        \"jsPsych detected that it is running via the file:// protocol and not on a web server. \" +\n          \"To prevent issues with cross-origin requests, Web Audio and video preloading have been disabled. \" +\n          \"If you would like to override this setting, you can set 'override_safe_mode' to 'true' in initJsPsych. \" +\n          \"For more information, see: https://www.jspsych.org/overview/running-experiments\"\n      );\n    }\n\n    // initialize modules\n    this.data = new JsPsychData(this.dataDependencies);\n    this.pluginAPI = createJointPluginAPIObject(this);\n\n    this.extensionManager = new ExtensionManager(\n      this.extensionManagerDependencies,\n      options.extensions\n    );\n  }\n\n  private endMessage?: string;\n\n  /**\n   * Starts an experiment using the provided timeline and returns a promise that is resolved when\n   * the experiment is finished.\n   *\n   * @param timeline The timeline to be run\n   */\n  async run(timeline: TimelineDescription | TimelineArray) {\n    if (typeof timeline === \"undefined\") {\n      console.error(\"No timeline declared in jsPsych.run(). Cannot start experiment.\");\n    }\n\n    if (timeline.length === 0) {\n      console.error(\n        \"No trials have been added to the timeline (the timeline is an empty array). Cannot start experiment.\"\n      );\n    }\n\n    // create experiment timeline\n    this.timeline = new Timeline(this.timelineDependencies, timeline);\n\n    await this.prepareDom();\n    await this.extensionManager.initializeExtensions();\n\n    document.documentElement.setAttribute(\"jspsych\", \"present\");\n\n    this.experimentStartTime = new Date();\n\n    await this.timeline.run();\n    await Promise.resolve(this.options.on_finish(this.data.get()));\n\n    if (this.endMessage) {\n      this.getDisplayElement().innerHTML = this.endMessage;\n    }\n\n    this.data.removeInteractionListeners();\n  }\n\n  async simulate(\n    timeline: any[],\n    simulation_mode: \"data-only\" | \"visual\" = \"data-only\",\n    simulation_options = {}\n  ) {\n    this.simulationMode = simulation_mode;\n    this.simulationOptions = simulation_options;\n    await this.run(timeline);\n  }\n\n  public progressBar?: ProgressBar;\n\n  getProgress() {\n    return {\n      total_trials: this.timeline?.getNaiveTrialCount(),\n      current_trial_global: this.timeline?.getLatestNode().index ?? 0,\n      percent_complete: this.timeline?.getNaiveProgress() * 100,\n    };\n  }\n\n  getStartTime() {\n    return this.experimentStartTime; // TODO This seems inconsistent, given that `getTotalTime()` returns a number, not a `Date`\n  }\n\n  getTotalTime() {\n    if (!this.experimentStartTime) {\n      return 0;\n    }\n    return new Date().getTime() - this.experimentStartTime.getTime();\n  }\n\n  getDisplayElement() {\n    return this.displayElement;\n  }\n\n  getDisplayContainerElement() {\n    return this.displayContainerElement;\n  }\n\n  abortExperiment(endMessage?: string, data = {}) {\n    this.endMessage = endMessage;\n    this.timeline.abort();\n    this.pluginAPI.cancelAllKeyboardResponses();\n    this.pluginAPI.clearAllTimeouts();\n    this.finishTrial(data);\n  }\n\n  abortCurrentTimeline() {\n    let currentTimeline = this.timeline?.getLatestNode();\n    if (currentTimeline instanceof Trial) {\n      currentTimeline = currentTimeline.parent;\n    }\n    if (currentTimeline instanceof Timeline) {\n      currentTimeline.abort();\n    }\n  }\n\n  /**\n   * Aborts a named timeline. The timeline must be currently running in order to abort it.\n   *\n   * @param name The name of the timeline to abort. Timelines can be given names by setting the `name` parameter in the description of the timeline.\n   */\n  abortTimelineByName(name: string): void {\n    const timeline = this.timeline?.getActiveTimelineByName(name);\n    if (timeline) {\n      timeline.abort();\n    }\n  }\n\n  getCurrentTrial() {\n    const activeNode = this.timeline?.getLatestNode();\n    if (activeNode instanceof Trial) {\n      return activeNode.description;\n    }\n    return undefined;\n  }\n\n  getInitSettings() {\n    return this.options;\n  }\n\n  timelineVariable(variableName: string) {\n    return new TimelineVariable(variableName);\n  }\n\n  evaluateTimelineVariable(variableName: string) {\n    return this.timeline\n      ?.getLatestNode()\n      ?.evaluateTimelineVariable(new TimelineVariable(variableName));\n  }\n\n  pauseExperiment() {\n    this.timeline?.pause();\n  }\n\n  resumeExperiment() {\n    this.timeline?.resume();\n  }\n\n  getSafeModeStatus() {\n    return this.isFileProtocolUsed;\n  }\n\n  getTimeline() {\n    return this.timeline?.description.timeline;\n  }\n\n  get extensions() {\n    return this.extensionManager?.extensions ?? {};\n  }\n\n  private async prepareDom() {\n    // Wait until the document is ready\n    if (document.readyState !== \"complete\") {\n      await new Promise((resolve) => {\n        window.addEventListener(\"load\", resolve);\n      });\n    }\n\n    const options = this.options;\n\n    // set DOM element where jsPsych will render content\n    // if undefined, then jsPsych will use the <body> tag and the entire page\n    if (typeof options.display_element === \"undefined\") {\n      // check if there is a body element on the page\n      let body = document.body;\n      if (!body) {\n        body = document.createElement(\"body\");\n        document.documentElement.appendChild(body);\n      }\n      // using the full page, so we need the HTML element to have 100% height, and body to be full\n      // width and height with no margin\n      document.querySelector(\"html\").style.height = \"100%\";\n\n      body.style.margin = \"0px\";\n      body.style.height = \"100%\";\n      body.style.width = \"100%\";\n      options.display_element = body;\n    } else {\n      // make sure that the display element exists on the page\n      const display =\n        options.display_element instanceof Element\n          ? options.display_element\n          : document.querySelector(\"#\" + options.display_element);\n      if (display === null) {\n        console.error(\"The display_element specified in initJsPsych() does not exist in the DOM.\");\n      } else {\n        options.display_element = display;\n      }\n    }\n\n    const contentElement = document.createElement(\"div\");\n    contentElement.id = \"jspsych-content\";\n\n    const contentWrapperElement = document.createElement(\"div\");\n    contentWrapperElement.className = \"jspsych-content-wrapper\";\n    contentWrapperElement.appendChild(contentElement);\n\n    this.displayContainerElement = options.display_element;\n    this.displayContainerElement.appendChild(contentWrapperElement);\n    this.displayElement = contentElement;\n\n    // set experiment_width if not null\n    if (options.experiment_width !== null) {\n      this.displayElement.style.width = options.experiment_width + \"px\";\n    }\n\n    // add tabIndex attribute to scope event listeners\n    options.display_element.tabIndex = 0;\n\n    // Add CSS classes to container and display elements\n    this.displayContainerElement.classList.add(\"jspsych-display-element\");\n    this.displayElement.classList.add(\"jspsych-content\");\n\n    // create listeners for user browser interaction\n    this.data.createInteractionListeners();\n\n    // add event for closing window\n    window.addEventListener(\"beforeunload\", options.on_close);\n\n    if (this.options.show_progress_bar) {\n      const progressBarContainer = document.createElement(\"div\");\n      progressBarContainer.id = \"jspsych-progressbar-container\";\n\n      this.progressBar = new ProgressBar(progressBarContainer, this.options.message_progress_bar);\n\n      this.getDisplayContainerElement().insertAdjacentElement(\"afterbegin\", progressBarContainer);\n    }\n  }\n\n  private finishTrialPromise = new PromiseWrapper<TrialResult | void>();\n  finishTrial(data?: TrialResult) {\n    this.finishTrialPromise.resolve(data);\n  }\n\n  private timelineDependencies: TimelineNodeDependencies = {\n    onTrialStart: (trial: Trial) => {\n      this.options.on_trial_start(trial.trialObject);\n\n      // apply the focus to the element containing the experiment.\n      this.getDisplayContainerElement().focus();\n      // reset the scroll on the DOM target\n      this.getDisplayElement().scrollTop = 0;\n    },\n\n    onTrialResultAvailable: (trial: Trial) => {\n      const result = trial.getResult();\n      if (result) {\n        result.time_elapsed = this.getTotalTime();\n        this.data.write(trial);\n      }\n    },\n\n    onTrialFinished: (trial: Trial) => {\n      const result = trial.getResult();\n      this.options.on_trial_finish(result);\n\n      if (result) {\n        this.options.on_data_update(result);\n      }\n\n      if (this.progressBar && this.options.auto_update_progress_bar) {\n        this.progressBar.progress = this.timeline.getNaiveProgress();\n      }\n    },\n\n    runOnStartExtensionCallbacks: (extensionsConfiguration) =>\n      this.extensionManager.onStart(extensionsConfiguration),\n\n    runOnLoadExtensionCallbacks: (extensionsConfiguration) =>\n      this.extensionManager.onLoad(extensionsConfiguration),\n\n    runOnFinishExtensionCallbacks: (extensionsConfiguration) =>\n      this.extensionManager.onFinish(extensionsConfiguration),\n\n    getSimulationMode: () => this.simulationMode,\n\n    getGlobalSimulationOptions: () => this.simulationOptions,\n\n    instantiatePlugin: (pluginClass) => new pluginClass(this),\n\n    getDisplayElement: () => this.getDisplayElement(),\n\n    getDefaultIti: () => this.getInitSettings().default_iti,\n\n    finishTrialPromise: this.finishTrialPromise,\n\n    clearAllTimeouts: () => this.pluginAPI.clearAllTimeouts(),\n  };\n\n  private extensionManagerDependencies: ExtensionManagerDependencies = {\n    instantiateExtension: (extensionClass) => new extensionClass(this),\n  };\n\n  private dataDependencies: JsPsychDataDependencies = {\n    getProgress: () => ({\n      time: this.getTotalTime(),\n      trial: this.timeline?.getLatestNode().index ?? 0,\n    }),\n\n    onInteractionRecordAdded: (record) => {\n      this.options.on_interaction_data_update(record);\n    },\n\n    getDisplayElement: () => this.getDisplayElement(),\n  };\n}\n","export class MigrationError extends Error {\n  constructor(message = \"The global `jsPsych` variable is no longer available in jsPsych v7.\") {\n    super(\n      `${message} Please follow the migration guide at https://www.jspsych.org/7.0/support/migration-v7/ to update your experiment.`\n    );\n    this.name = \"MigrationError\";\n  }\n}\n\n// Define a global jsPsych object to handle invocations on it with migration errors\n(window as any).jsPsych = {\n  get init() {\n    throw new MigrationError(\"`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.\");\n  },\n\n  get data() {\n    throw new MigrationError();\n  },\n  get randomization() {\n    throw new MigrationError();\n  },\n  get turk() {\n    throw new MigrationError();\n  },\n  get pluginAPI() {\n    throw new MigrationError();\n  },\n\n  get ALL_KEYS() {\n    throw new MigrationError(\n      'jsPsych.ALL_KEYS was replaced by the \"ALL_KEYS\" string in jsPsych v7.'\n    );\n  },\n  get NO_KEYS() {\n    throw new MigrationError('jsPsych.NO_KEYS was replaced by the \"NO_KEYS\" string in jsPsych v7.');\n  },\n};\n","// __rollup-babel-import-regenerator-runtime__\n\nimport { JsPsych } from \"./JsPsych\";\nimport { MigrationError } from \"./migration\";\n\n// temporary patch for Safari\nif (\n  typeof window !== \"undefined\" &&\n  window.hasOwnProperty(\"webkitAudioContext\") &&\n  !window.hasOwnProperty(\"AudioContext\")\n) {\n  // @ts-expect-error\n  window.AudioContext = webkitAudioContext;\n}\n// end patch\n\n// The following function provides a uniform interface to initialize jsPsych, no matter whether a\n// browser supports ES6 classes or not (and whether the ES6 build or the Babel build is used).\n/**\n * Creates a new JsPsych instance using the provided options.\n *\n * @param options The options to pass to the JsPsych constructor\n * @returns A new JsPsych instance\n */\nexport function initJsPsych(options?) {\n  const jsPsych = new JsPsych(options);\n\n  // Handle invocations of non-existent v6 methods with migration errors\n  const migrationMessages = {\n    init: \"`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.\",\n\n    ALL_KEYS: 'jsPsych.ALL_KEYS was replaced by the \"ALL_KEYS\" string in jsPsych v7.',\n    NO_KEYS: 'jsPsych.NO_KEYS was replaced by the \"NO_KEYS\" string in jsPsych v7.',\n\n    // Getter functions that were renamed\n    currentTimelineNodeID:\n      \"`currentTimelineNodeID()` was renamed to `getCurrentTimelineNodeID()` in jsPsych v7.\",\n    progress: \"`progress()` was renamed to `getProgress()` in jsPsych v7.\",\n    startTime: \"`startTime()` was renamed to `getStartTime()` in jsPsych v7.\",\n    totalTime: \"`totalTime()` was renamed to `getTotalTime()` in jsPsych v7.\",\n    currentTrial: \"`currentTrial()` was renamed to `getCurrentTrial()` in jsPsych v7.\",\n    initSettings: \"`initSettings()` was renamed to `getInitSettings()` in jsPsych v7.\",\n    allTimelineVariables:\n      \"`allTimelineVariables()` was renamed to `getAllTimelineVariables()` in jsPsych v7.\",\n  };\n\n  Object.defineProperties(\n    jsPsych,\n    Object.fromEntries(\n      Object.entries(migrationMessages).map(([key, message]) => [\n        key,\n        {\n          get() {\n            throw new MigrationError(message);\n          },\n        },\n      ])\n    )\n  );\n\n  return jsPsych;\n}\n\nexport { JsPsych } from \"./JsPsych\";\nexport type { JsPsychPlugin, PluginInfo, TrialType } from \"./modules/plugins\";\nexport { ParameterType } from \"./modules/plugins\";\nexport type { JsPsychExtension, JsPsychExtensionInfo } from \"./modules/extensions\";\nexport { DataCollection } from \"./modules/data/DataCollection\";\n"],"names":["getAllProperties","object","properties","key","autoBind","self","include","exclude","filter","match","pattern","descriptor","ExtensionManager","dependencies","extensionsConfiguration","extension","extensionClass","__async","type","params","extensionInfo","trialExtensionsConfiguration","_a","results","extensionInfos","unique","arr","deepCopy","obj","out","x","deepMerge","obj1","obj2","merged","DataColumn","values","s","v","sum","count","value","numbers","a","b","middle","mean","sum_square_error","mse","eval_fn","saveTextToFile","textstr","filename","blobToSave","blobURL","link","JSON2CSV","objArray","array","line","result","columns","row","keyString","col","valueString","getQueryString","i","p","DataCollection","data","new_data","other_data_collection","n","trial","filters","f","filtered_data","keep","fn","column","o","delete_key","names","pretty","format","data_string","c","l","JsPsychData","lastResult","dataContainer","whichvar","event","record","__spreadValues","KeyboardListenerAPI","getRootElement","areResponsesCaseSensitive","minimumValidRt","rootElement","listener","string","validResponses","allowHeldKey","callback_function","valid_responses","rt_method","persist","audio_context","audio_context_start_time","allow_held_key","minimum_valid_rt","startTime","r","e","rt","key1","key2","ParameterType","AudioPlayer","src","options","eventName","callback","audioBuffer","source","arrayBuffer","resolve","reject","audio","err","M","_","d","preloadParameterTypes","MediaAPI","useWebaudio","videoID","audioID","files","callback_complete","callback_load","filepath","callback_error","error","n_loaded","file","images","error_msg","img","videos","video","video_buffers","request","videoBlob","timeline_description","preloadPaths","traverseTimeline","node","inheritedTrialType","_b","_c","_d","childNode","pluginName","parameters","_name","preload","name","parameterName","parameterType","parameterValue","elements","element","stream","recorder","opts","u","h","t","SimulationAPI","getDisplayContainerElement","setJsPsychTimeout","delay","target","text","choices","possible_keys","flat_choices","default_data","simulation_options","min_time","TimeoutAPI","handle","handler","createJointPluginAPIObject","jsPsych","settings","keyboardListenerAPI","timeoutAPI","mediaAPI","simulationAPI","wordList","words","word","generateWordWithMaxLength","generateRandomWord","rightSize","wordUsed","randInt","lessThan","total","token","relativeIndex","randomWords","global","module","define","Alea","seed","me","mash","Mash","copy","impl","xg","state","prng","this","setSeed","seedrandom","repeat","repetitions","unpack","arr_isArray","rep_isArray","reps","allsamples","j","shuffle","unpackArray","copy_array","m","shuffleNoRepeats","equalityTest","random_shuffle","random_pick","new_neighbor","shuffleAlternateGroups","arr_groups","random_group_order","n_groups","group_order","randomized_groups","min_length","sampleWithoutReplacement","size","sampleWithReplacement","weights","normalized_weights","weight_sum","weight","cumulative_weights","samp","rnd","index","factorial","factors","design","factorName","factor","new_design","level","cell","__spreadProps","randomID","length","chars","randomInt","lower","upper","sampleBernoulli","sampleNormal","standard_deviation","randn_bm","sampleExponential","rate","sampleExGaussian","positive","rw","turkInfo","turk","param","url","regexS","submitToTurk","assignmentId","turkSubmitTo","form","hiddenField","ProgressBar","containerElement","message","outerDiv","progress","TimelineVariable","timelineDescriptionKeys","isTrialDescription","description","isTimelineDescription","TimelineNodeStatus","PromiseWrapper","isPromise","ms","parameterPathArrayToString","firstPathElement","remainingPathElements","pathString","pathElement","isObjectOrArray","ParameterObjectPathCache","objectOrArray","childName","doesPathExist","childValue","path","rootObject","lookupPath","parentPath","parentValue","lookupResult","TimelineNode","parameterPath","evaluateFunctions","recursive","cacheResult","replaceResult","Trial","parent","gap","trialPromise","hasTrialPromiseBeenResolved","trialReturnValue","hasTrialBeenSimulated","globalSimulationMode","simulationOptions","classes","classList","shouldParameterBeIncluded","saveTimelineVariables","callbackParameters","extensionResults","variable","globalSimulationOptions","assignParameterValues","parameterObject","parameterInfos","parentParameterPath","parameterConfig","originalResult","parameterPathString","arrayIndex","arrayElementPath","arrayElementValue","trialObject","N","y","C","T","Timeline","conditional_function","loop_function","timelineVariableOrder","isInitialTimelineVariableOrder","currentLoopIterationResults","repetition","timelineVariableIndex","previousChild","newChildNodes","childDescription","timelineVariableLength","order","sample","child","childResult","activeNode","completedTrials","getTrialCount","getTimelineArrayTrialCount","conditionCount","group","JsPsych","randomization","utils","pluginClass","version","timeline","_0","simulation_mode","endMessage","currentTimeline","variableName","body","display","contentElement","contentWrapperElement","progressBarContainer","MigrationError","initJsPsych"],"mappings":"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"}