{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"rok\",\n  parameters: {\n    /** The valid keys that the subject can press to indicate a response. */\n    choices: {\n      type: ParameterType.KEYS,\n      pretty_name: \"Choices\",\n      default: \"ALL_KEYS\",\n    },\n    /** The correct keys for that trial. */\n    correct_choice: {\n      type: ParameterType.KEYS,\n      pretty_name: \"Correct choice\",\n      default: undefined,\n    },\n    /** The length of stimulus presentation. Zero for endless loop. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: 0,\n    },\n    /** If true, then any valid key will end the trial. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response ends trial\",\n      default: true,\n    },\n    /** The number of oriented objects per set in the stimulus. */\n    number_of_oobs: {\n      type: ParameterType.INT,\n      pretty_name: \"Number of oriented objectes\",\n      default: 300,\n    },\n    /** The direction of coherent motion in degrees (0 degre meaning right). */\n    coherent_movement_direction: {\n      type: ParameterType.INT,\n      pretty_name: \"Coherent movement direction\",\n      default: 0,\n    },\n    /** The orientation of the objects in degree (0 degree meaning right). */\n    coherent_orientation: {\n      type: ParameterType.INT,\n      pretty_name: \"Coherent object orientation\",\n      default: 0,\n    },\n    /** The percentage of oriented objects moving in the coherent direction. */\n    coherence_movement: {\n      type: ParameterType.INT,\n      pretty_name: \"Movement coherence\",\n      default: 50,\n    },\n    /** The percentage of objects that are oriented in the coherent orientation. */\n    coherence_orientation: {\n      type: ParameterType.INT,\n      pretty_name: \"Orientation coherence\",\n      default: 50,\n    },\n    /** The percentage of oriented objects moving in the direction opposite of the coherent direction. */\n    coherence_movement_opposite: {\n      type: ParameterType.INT,\n      pretty_name: \"Opposite movement coherence\",\n      default: 0,\n    },\n    /** The percentage of objects that are oriented opposite of the coherent orientation. */\n    coherence_orientation_opposite: {\n      type: ParameterType.INT,\n      pretty_name: \"Opposite orientation coherence\",\n      default: 0,\n    },\n    /** The movement speed of the oobs in (percentage of aperature_width)/second. */\n    movement_speed: {\n      type: ParameterType.INT,\n      pretty_name: \"Movement Speed\",\n      default: 10,\n    },\n    /** The percentage of randomisation in movement speed \" +\n         \"(0 meaning all orientated objects move with speed defined in movement_speed,\" +\n         \" 100 meaning movement speeds from 0 to 2x movement_speed). */\n    movement_speed_randomisation: {\n      type: ParameterType.INT,\n      pretty_name: \"Movement speed randomisation\",\n      default: 0,\n    },\n    /** The size of the orientated objects in percentage of aperture_width. */\n    oob_size: {\n      type: ParameterType.INT,\n      pretty_name: \"Object size\",\n      default: 2,\n    },\n    /** The width of the aperture in pixels. */\n    aperture_width: {\n      type: ParameterType.INT,\n      pretty_name: \"Aperture width\",\n      default: 600,\n    },\n    /** The height of the aperture in pixels. */\n    aperture_height: {\n      type: ParameterType.INT,\n      pretty_name: \"Aperture height\",\n      default: 400,\n    },\n    /** The color of the dots. */\n    oob_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Dot color\",\n      default: \"white\",\n    },\n    /** The background of the stimulus. */\n    background_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Background color\",\n      default: \"gray\",\n    },\n    /** The presence of a border around the aperture. */\n    border: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Border\",\n      default: false,\n    },\n    /** The thickness of the border in pixels. */\n    border_thickness: {\n      type: ParameterType.INT,\n      pretty_name: \"Border width\",\n      default: 1,\n    },\n    /**The color of the border. */\n    border_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Border Color\",\n      default: 1,\n    },\n    /** Apperance of stimulus (0-triangles, 1-circle, 2-square, 3-origami_birds, 4-image). */\n    stimulus_type: {\n      type: ParameterType.INT,\n      pretty_name: \"Stimulus type\",\n      default: 0,\n    },\n    /** Shade of aperture (0 - rectangular, 1 - elliptic). */\n    aperture_shape: {\n      type: ParameterType.INT,\n      pretty_name: \"aperture shape\",\n      default: 0,\n    },\n    /** Backgroundcolor of aperture */\n    aperture_background_color: {\n      type: ParameterType.STRING,\n      pretty_name: \"Background of aperture\",\n      default: \"#0000\",\n    },\n    /** Type of random movement (0 direction is random but fixed, 1 movement direction of incoherent oobs changes over time). */\n    random_movement_type: {\n      type: ParameterType.INT,\n      pretty_name: \"Random movement type\",\n      default: 0,\n    },\n    /** Type of random movement (0 - orientation is random but fixed, 1 - orientation of incoherent oobs changes over time). */\n    random_orientation_type: {\n      type: ParameterType.INT,\n      pretty_name: \"Random orientation type\",\n      default: 0,\n    },\n    /** Number of apertures. If greater then one, other parameters of trial should be arrays. */\n    number_of_apertures: {\n      type: ParameterType.INT,\n      pretty_name: \"Number of apertures\",\n      default: 1,\n    },\n    /** If this parameter is set, number_of_objects is interpreted as average number_of_objects per density_unit_area (in pixels). */\n    density_unit_area: {\n      type: ParameterType.INT,\n      pretty_name: \"Density area\",\n      default: null,\n    },\n    /** Position of midpoint of aperture in x direction in percentage of window width (50 being middle). */\n    aperture_position_left: {\n      type: ParameterType.INT,\n      pretty_name: \"Horizontal position of aperature\",\n      default: 50,\n    },\n    /** Position of midpoint of aperture in y direction in percentage of window width (0 being top, 50 being middle, 100 being bot). */\n    aperture_position_top: {\n      type: ParameterType.INT,\n      pretty_name: \"Vertical position of aperature\",\n      default: 50,\n    },\n    /** Prompt that is presented above the stimulus. */\n    prompt: {\n      type: ParameterType.STRING,\n      pretty_name: \"Prompt\",\n      default: null,\n    },\n    /** Fade the oobs on the edges of the aperture. */\n    fade_out: {\n      type: ParameterType.INT,\n      pretty_name: \"Fade out on edges\",\n      default: 0,\n    },\n    /** Pictures of stimuli, can be key-framed(animated) or randomised, see documentation. */\n    stimulus_image: {\n      type: ParameterType.IMAGE,\n      pretty_name: \"Stimuli pictures\",\n      default: null,\n    },\n    /** Background image, can be key-framed(animated) or randomised, see documentation. */\n    background_image: {\n      type: ParameterType.IMAGE,\n      pretty_name: \"Background image\",\n      default: null,\n    },\n    /** Number of keyframes in stimulus images. */\n    stimulus_image_keyframes: {\n      type: ParameterType.INT,\n      pretty_name: \"Keyframes of stimulus pictures\",\n      default: 1,\n    },\n    /** Number of keyframes in background pictures. */\n    background_image_keyframes: {\n      type: ParameterType.INT,\n      pretty_name: \"Keframse of background pictures\",\n      default: 1,\n    },\n    /** Time between keyframes. */\n    stimulus_keyframe_time: {\n      type: ParameterType.FLOAT,\n      pretty_name: \"Keyframe time\",\n      default: 0.1,\n    },\n    /** Mirror image instead of rotating (1 - x axis, 2 - y axis). */\n    stimulus_mirror: {\n      type: ParameterType.INT,\n      pretty_name: \"Mirror image time\",\n      default: 0,\n    },\n    /** Sets experiment to congruency mode: experiment_main_task has to be  set (0 = movement or 1 = orientation) if this is set to 1 or 2. The\" +\n         \"congruency of the task does only apply to coherent oobs of main task. If this is set to 1 the remaining oobs secondary feature (the non task feature) is set at random.\" +\n         \"If this is set to 2 the remaining oobs have the same direction and orientation .*/\n    experiment_congruency_mode: {\n      type: ParameterType.INT,\n      pretty_name: \"Experiment congruency mode\",\n      default: 0,\n    },\n    /** Sets the main task when experiment is in congruency mode. The congruency of the other task then only\" +\n         \"applies to non random oobs of main task. */\n    experiment_main_task: {\n      type: ParameterType.INT,\n      pretty_name:\n        \"Main task when experiment is set to congruency mode (0- movement, 1-orientation)\",\n      default: 0,\n    },\n    /** Units in which size and speed of oobs is expressed (null - percentage of aperture width, px - pixels). */\n    units: {\n      type: ParameterType.STRING,\n      pretty_name: \"Units in which size and speed of oobs is expressed\",\n      default: null,\n    },\n    /** Should stimuli be drawn on top of each other or intermixed **/\n    aperture_draw_mode: {\n      type: ParameterType.STRING,\n      pretty_name:\n        \"When in overlay draws stimuli of different apertures on top of each other. When in intermixed oobs all show up in one aperture intermixed\",\n      default: \"overlay\",\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **ROK**\n *\n * jsPsych plugin for showing a random object kinematogram stimulus and recording a keyboard response\n *\n * @author Younes Strittmatter\n * @see {@link https://www.jspsych.org/plugins/jspsych-rok/ RDK plugin documentation on jspsych.org}\n * @copyright\n *\n *    We would appreciate it if you cited this paper when you use the ROK:\n *\n * ----------------------\n *\n * Copyright (C) 2021 Younes Strittmatter\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n */\nclass RokPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    //--------------------------------------\n    //---------SET PARAMETERS BEGIN---------\n    //--------------------------------------\n\n    //Note on '||' logical operator: If the first option is 'undefined', it evalutes to 'false' and the second option is returned as the assignment\n    // Note: trial properties are now read-only, so these params have all been changed to separate variables here and throughout trial function\n    var choices = assignParameterValue(trial.choices, []); //info.parameters.choices.default);\n    var correct_choice = assignParameterValue(trial.correct_choice, undefined); //info.parameters.correct_choice.default);\n    var trial_duration = assignParameterValue(trial.trial_duration, 0); //info.parameters.trial_duration.default);\n    var response_ends_trial = assignParameterValue(trial.response_ends_trial, true); //info.parameters.response_ends_trial.default);\n    var number_of_oobs = assignParameterValue(trial.number_of_oobs, 300); //info.parameters.number_of_oobs.default);\n    var coherent_movement_direction = assignParameterValue(trial.coherent_movement_direction, 0); // info.parameters.coherent_movement_direction.default);\n    var coherent_orientation = assignParameterValue(trial.coherent_orientation, 0); // info.parameters.coherent_orientation.default);\n    var coherence_movement = assignParameterValue(trial.coherence_movement, 50); //info.parameters.coherence_movement.default);\n    var coherence_orientation = assignParameterValue(trial.coherence_orientation, 50); //info.parameters.coherence_orientation.default);\n    var coherence_movement_opposite = assignParameterValue(trial.coherence_movement_opposite, 50); //info.parameters.coherence_movement_opposite.default);\n    var coherence_orientation_opposite = assignParameterValue(\n      trial.coherence_orientation_opposite,\n      50\n    ); //info.parameters.coherence_orientation_opposite.default);\n    var movement_speed = assignParameterValue(trial.movement_speed, 10); //info.parameters.movement_speed.default);\n    var movement_speed_randomisation = assignParameterValue(trial.movement_speed_randomisation, 0); // info.parameters.movement_speed_randomisation.default);\n    var oob_size = assignParameterValue(trial.oob_size, 2); //info.parameters.oob_size.default);\n    var aperture_width = assignParameterValue(trial.aperture_width, 600); //info.parameters.aperture_width.default);\n    var aperture_height = assignParameterValue(trial.aperture_height, 400); //info.parameters.aperture_height.default);\n    var oob_color = assignParameterValue(trial.oob_color, \"white\"); //info.parameters.oob_color.default);\n    var background_color = assignParameterValue(trial.background_color, \"gray\"); //info.parameters.background_color.default);\n    var aperture_background_color = assignParameterValue(trial.aperture_background_color, \"#0000\");\n    var border = assignParameterValue(trial.border, false); //info.parameters.border.default);\n    var border_thickness = assignParameterValue(trial.border_thickness, 1); //info.parameters.border_thickness.default);\n    var border_color = assignParameterValue(trial.border_color, \"white\"); //info.parameters.border_color.default);\n    var stimulus_type = assignParameterValue(trial.stimulus_type, 0); //info.parameters.stimulus_type.default);\n    var aperture_shape = assignParameterValue(trial.aperture_shape, 0); //info.parameters.aperture_shape.default);\n    var random_movement_type = assignParameterValue(trial.random_movement_type, 0); //info.parameters.random_movement_type.default);\n    var random_orientation_type = assignParameterValue(trial.random_orientation_type, 0); //info.parameters.random_orientation_type.default);\n    var number_of_apertures = assignParameterValue(trial.number_of_apertures, 1); //info.parameters.number_of_apertures.default);\n    var density_unit_area = assignParameterValue(trial.density_unit_area, null); //info.parameters.number_of_apertures.default);\n    var aperture_position_left = assignParameterValue(trial.aperture_position_left, 50); //info.parameters.aperture_position_left.default);\n    var aperture_position_top = assignParameterValue(trial.aperture_position_top, 50); //info.parameters.aperture_position_top.default);\n    var prompt = assignParameterValue(trial.prompt, null); //info.parameters.prompt.default);\n    var fade_out = assignParameterValue(trial.fade_out, 0); //info.parameters.fade_out.default);\n    var stimulus_image = assignParameterValue(trial.stimulus_image, null); //info.parameters.stimulus_image.default);\n    var background_image = assignParameterValue(trial.background_image, null); //info.parameters.background_image.default);\n    var stimulus_image_keyframes = assignParameterValue(trial.stimulus_image_keyframes, 1); //info.parameters.stimulus_image_keyframes.default);\n    var background_image_keyframes = assignParameterValue(trial.background_image_keyframes, 1); //info.parameters.background_image_keyframes.default);\n    var stimulus_keyframe_time = assignParameterValue(trial.stimulus_keyframe_time, 0.1); //info.parameters.stimulus_keyframe_time.default);\n    var stimulus_mirror = assignParameterValue(trial.stimulus_mirror, 0); //info.parameters.stimulus_mirror.default);\n    var experiment_congruency_mode = assignParameterValue(trial.experiment_congruency_mode, 0); //info.parameters.experiment_congruency_mode.default);\n    var experiment_main_task = assignParameterValue(trial.experiment_main_task, 0); //info.parameters.experiment_main_task.default);\n    var units = assignParameterValue(trial.units, null);\n    var aperture_mode = assignParameterValue(trial.aperture_draw_mode, \"overlay\");\n\n    //--------------------------------------\n    //----------SET PARAMETERS END----------\n    //--------------------------------------\n\n    //--------Set up canvases BEGIN -------\n    let nApertures = number_of_apertures;\n    let nAperturesTmp = nApertures;\n    if (aperture_mode !== \"overlay\") {\n      nApertures = 1;\n    }\n\n    //Create canvas elements and append it to the DOM\n    var canvasArray = [];\n    var containerArray = [];\n    if (nApertures > 1) {\n      for (let i = 0; i < nApertures; i++) {\n        containerArray.push(document.createElement(\"div\"));\n        canvasArray.push(document.createElement(\"canvas\"));\n      }\n    } else {\n      containerArray.push(document.createElement(\"div\"));\n      canvasArray.push(document.createElement(\"canvas\"));\n    }\n    for (let i = 0; i < nApertures; i++) {\n      let imgPath = getValueFromArrayOrNot(background_image, i);\n      if (imgPath != null) {\n        containerArray[i].style.backgroundImage =\n          \"url(\" + getValueFromArrayOrNot(background_image, i) + \")\";\n        containerArray[i].style.backgroundRepeat = \"no-repeat\";\n        containerArray[i].style.backgroundSize = \"cover\";\n      }\n\n      display_element.appendChild(containerArray[i]);\n\n      containerArray[i].appendChild(canvasArray[i]);\n      if (Array.isArray(prompt)) {\n        let p = document.createElement(\"div\");\n        p.style.margin = \"0\";\n        p.style.padding = \"0\";\n        containerArray[i].appendChild(p);\n        p.style.textAlign = \"center\";\n        p.innerHTML = prompt[i];\n        p.style.position = \"absolute\";\n        p.style.transform = \"translate(-50%, 100%)\";\n        p.style.textAlign = \"center\";\n        p.style.top = 10 + getValueFromArrayOrNot(aperture_height, 0) / 2 + \"px\";\n        p.style.width = getValueFromArrayOrNot(aperture_width, 0) + \"px\";\n      }\n    }\n\n    if (prompt != null && !Array.isArray(prompt)) {\n      let p = document.createElement(\"div\");\n      p.style.margin = \"0\";\n      p.style.padding = \"0\";\n      containerArray[0].appendChild(p);\n      p.style.textAlign = \"center\";\n      p.innerHTML = prompt;\n      p.style.position = \"absolute\";\n      p.style.transform = \"translate(-50%, 100%)\";\n      p.style.textAlign = \"center\";\n      p.style.top = 10 + getValueFromArrayOrNot(aperture_height, 0) / 2 + \"px\";\n      p.style.width = getValueFromArrayOrNot(aperture_width, 0) + \"px\";\n    }\n\n    //Get body element from jsPsych\n    let body = document.getElementsByClassName(\"jspsych-display-element\")[0] as HTMLElement;\n\n    //Save the current settings to be restored later\n    let originalMargin = body.style.margin;\n    let originalPadding = body.style.padding;\n    let originalBackgroundColor = body.style.backgroundColor;\n\n    //Remove the margins and paddings of the display_element\n    body.style.margin = \"0\";\n    body.style.padding = \"0\";\n\n    //Remove the margins and padding of the canvas, center it\n    for (let i = 0; i < nApertures; i++) {\n      containerArray[i].style.margin = \"0px\";\n      containerArray[i].style.margin = \"0px\";\n      canvasArray[i].style.margin = \"0px\";\n      canvasArray[i].style.padding = \"0px\";\n      canvasArray[i].style.position = \"absolute\";\n      canvasArray[i].style.transform = \"translate(-50%, -50%)\";\n    }\n\n    //Set background color of body to be the same as\n    body.style.backgroundColor = background_color;\n\n    //Get the contexts of the canvases\n    let ctxArray = [];\n    for (let i = 0; i < nApertures; i++) {\n      ctxArray.push(canvasArray[i].getContext(\"2d\"));\n    }\n\n    // get dimensions of display element\n    const disp_size = body.getBoundingClientRect();\n\n    //Set canvases width, height, position and color;\n    for (let i = 0; i < nApertures; i++) {\n      canvasArray[i].width = getValueFromArrayOrNot(aperture_width, i);\n      canvasArray[i].height = getValueFromArrayOrNot(aperture_height, i);\n      canvasArray[i].style.backgroundColor = getValueFromArrayOrNot(aperture_background_color, i);\n      containerArray[i].style.position = \"absolute\";\n\n      if (Array.isArray(aperture_position_left) && Array.isArray(aperture_position_top)) {\n        // calculate top from display size (resize module doesn't work with top beeing a percentage)\n        let top = Math.round((aperture_position_top[i] * disp_size.height) / 100);\n        containerArray[i].style.top = top.toString() + \"px\";\n\n        containerArray[i].style.left = aperture_position_left[i].toString() + \"%\";\n      } else {\n        if (nApertures > 1) {\n          let x;\n          if (nApertures % 2 == 0) {\n            x = i * (100 / nApertures) + 100 / (2 * nApertures);\n          } else {\n            x = i * (100 / (nApertures + 1)) + 100 / (2 * (nApertures - 1));\n          }\n\n          // calculate top from display size (resize module doesn't work with top being a percentage)\n          let top = Math.round((aperture_position_top * disp_size.height) / 100);\n          containerArray[i].style.top = top.toString() + \"px\";\n\n          containerArray[i].style.left = x.toString() + \"%\";\n        } else {\n          // calculate top from display size (resize module doesn't work with top being a percentage)\n          let top = Math.round((aperture_position_top * disp_size.height) / 100);\n          containerArray[i].style.top = top.toString() + \"px\";\n\n          containerArray[i].style.left = aperture_position_left.toString() + \"%\";\n        }\n      }\n    }\n\n    //--------Set up canvases END-------\n\n    //--------rok variables and function calls begin--------\n\n    //Initialize stopping condition for animation function that runs in a loop\n    let stopOobMotion = false;\n\n    //Variable to control the frame rate, to ensure that the first frame is skipped because it follows a different timing\n    let firstFrame = true;\n\n    //Variable to start the timer\n    let timerHasStarted = false;\n\n    //Initialize object to store the response data. Default values of -1 are used if the trial times out and the subject has not pressed a valid key\n    let response = {\n      rt: -1,\n      key: \"\",\n    };\n\n    //Declare a global timeout ID to be initialized below in animateDotMotion function and to be used in after_response function\n    let timeoutID;\n\n    //Declare global variable to be defined in startKeyboardListener function and to be used in end_trial function\n    let keyboardListener;\n\n    //Declare global variable to store the frame rate of the trial\n    var frameRate: number | number[] = []; //How often the monitor refreshes, in ms. Currently an array to store all the intervals. Will be converted into a single number (the average) in end_trial function.\n\n    //variable to store how many frames were presented.\n    let numberOfFrames = 0;\n\n    // get the images if specified\n    let img = [];\n    if (stimulus_image != null) {\n      let imgSrc = stimulus_image;\n      if (!Array.isArray(imgSrc)) {\n        let i = document.createElement(\"img\");\n        i.src = imgSrc;\n        img.push(i);\n      } else {\n        for (let j = 0; j < imgSrc.length; j++) {\n          let iS = imgSrc[j];\n          if (!Array.isArray(iS)) {\n            let i = document.createElement(\"img\");\n            i.src = iS;\n            img.push(i);\n          } else {\n            let i = [];\n            for (let k = 0; k < iS[j].length; k++) {\n              let p = document.createElement(\"img\");\n              p.src = iS[k];\n              i.push(p);\n            }\n            img.push(i);\n          }\n        }\n      }\n    }\n\n    let oobs = [];\n\n    //Calculate the number of coherent, opposite coherent, and incoherent oobs for movement/orientation\n    for (let i = 0; i < nAperturesTmp; i++) {\n      let nOob = getValueFromArrayOrNot(number_of_oobs, i);\n\n      // set number of objects, if density_unit_area is set\n      if (density_unit_area != null) {\n        let width = getValueFromArrayOrNot(aperture_width, i);\n        let height = getValueFromArrayOrNot(aperture_height, i);\n        let area = width * height;\n        nOob = (nOob * area) / density_unit_area;\n      }\n\n      let tmpCoherenceMovement = getValueFromArrayOrNot(coherence_movement, i);\n      let tmpOppositeCoherenceMovement = getValueFromArrayOrNot(coherence_movement_opposite, i);\n      let tmpCoherenceOrientation = getValueFromArrayOrNot(coherence_orientation, i);\n      let tmpOppositeCoherenceOrientation = getValueFromArrayOrNot(\n        coherence_orientation_opposite,\n        i\n      );\n\n      let experimentMode = getValueFromArrayOrNot(experiment_congruency_mode, i);\n      let mainTask = getValueFromArrayOrNot(experiment_main_task, i);\n\n      let tmpOrientation = [];\n      let tmpMovementDirection = [];\n\n      if (experimentMode === 0) {\n        let [nCoherentMovement, nCoherentOppositeMovement, nIncoherentMovement] = getNumbers(\n          tmpCoherenceMovement,\n          tmpOppositeCoherenceMovement,\n          nOob\n        );\n        let [nCoherentOrientation, nCoherentOppositeOrientation, nIncoherentOrientation] =\n          getNumbers(tmpCoherenceOrientation, tmpOppositeCoherenceOrientation, nOob);\n        for (let j = 0; j < nCoherentMovement; j++) {\n          tmpMovementDirection.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeMovement; j++) {\n          tmpMovementDirection.push(-1);\n        }\n        for (let j = 0; j < nIncoherentMovement; j++) {\n          tmpMovementDirection.push(0);\n        }\n        for (let j = 0; j < nCoherentOrientation; j++) {\n          tmpOrientation.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeOrientation; j++) {\n          tmpOrientation.push(-1);\n        }\n        for (let j = 0; j < nIncoherentOrientation; j++) {\n          tmpOrientation.push(0);\n        }\n        tmpOrientation = shuffleArray(tmpOrientation);\n        tmpMovementDirection = shuffleArray(tmpMovementDirection);\n      } else if (mainTask === 0) {\n        let [nCoherentMovement, nCoherentOppositeMovement, nIncoherentMovement] = getNumbers(\n          tmpCoherenceMovement,\n          tmpOppositeCoherenceMovement,\n          nOob\n        );\n        let nCoherentOrientation = Math.floor((tmpCoherenceOrientation / 100) * nCoherentMovement);\n        let nCoherentOppositeOrientation = Math.floor(\n          (tmpOppositeCoherenceOrientation / 100) * nCoherentMovement\n        );\n        if (tmpCoherenceOrientation + tmpOppositeCoherenceOrientation === 100) {\n          nCoherentOppositeOrientation = nCoherentMovement - nCoherentOrientation;\n        }\n        for (let j = 0; j < nCoherentMovement; j++) {\n          tmpMovementDirection.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeMovement; j++) {\n          tmpMovementDirection.push(-1);\n        }\n        for (let j = 0; j < nIncoherentMovement; j++) {\n          tmpMovementDirection.push(0);\n        }\n        for (let j = 0; j < nCoherentOrientation; j++) {\n          tmpOrientation.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeOrientation; j++) {\n          tmpOrientation.push(-1);\n        }\n\n        for (let j = 0; j < nOob - (nCoherentOrientation + nCoherentOppositeOrientation); j++) {\n          tmpOrientation.push(0);\n        }\n      } else if (mainTask === 1) {\n        let [nCoherentOrientation, nCoherentOppositeOrientation, nIncoherentOrientation] =\n          getNumbers(tmpCoherenceOrientation, tmpOppositeCoherenceOrientation, nOob);\n        let nCoherentMovement = Math.floor((tmpCoherenceMovement / 100) * nCoherentOrientation);\n        let nCoherentOppositeMovement = Math.floor(\n          (tmpOppositeCoherenceMovement / 100) * nCoherentOrientation\n        );\n        if (tmpCoherenceMovement + tmpOppositeCoherenceMovement === 100) {\n          nCoherentOppositeMovement = nCoherentOrientation - nCoherentMovement;\n        }\n        for (let j = 0; j < nCoherentOrientation; j++) {\n          tmpOrientation.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeOrientation; j++) {\n          tmpOrientation.push(-1);\n        }\n        for (let j = 0; j < nIncoherentOrientation; j++) {\n          tmpOrientation.push(0);\n        }\n        for (let j = 0; j < nCoherentMovement; j++) {\n          tmpMovementDirection.push(1);\n        }\n        for (let j = 0; j < nCoherentOppositeMovement; j++) {\n          tmpMovementDirection.push(-1);\n        }\n        if (experimentMode === 1) {\n          for (let j = 0; j < nOob - (nCoherentMovement + nCoherentOppositeMovement); j++) {\n            tmpMovementDirection.push(0);\n          }\n        } else {\n          for (let j = 0; j < nOob - (nCoherentMovement + nCoherentOppositeMovement); j++) {\n            tmpOrientation.push(tmpOrientation[j + nCoherentMovement + nCoherentOppositeMovement]);\n          }\n        }\n      }\n\n      let oobColor = getValueFromArrayOrNot(oob_color, i);\n\n      let stimulusType = getValueFromArrayOrNot(stimulus_type, i);\n      if (stimulusType === 3) {\n        oobColor = standardColor(oobColor);\n      }\n      let apertureType = getValueFromArrayOrNot(aperture_shape, i);\n      let speed = getValueFromArrayOrNot(movement_speed, i);\n      let speedRandomisation = getValueFromArrayOrNot(movement_speed_randomisation, i);\n      let size = getValueFromArrayOrNot(oob_size, i);\n\n      let isFade = getValueFromArrayOrNot(fade_out, i);\n\n      for (let j = 0; j < nOob; j++) {\n        let randomWalk = 0;\n        let randomOrient = 0;\n        let orientation = getValueFromArrayOrNot(coherent_orientation, i);\n        if (tmpOrientation[j] === -1) {\n          orientation += 180;\n        } else if (tmpOrientation[j] === 0) {\n          orientation = Math.floor(Math.random() * 360);\n          randomOrient = getValueFromArrayOrNot(random_orientation_type, i);\n        }\n        let movementDirection = getValueFromArrayOrNot(coherent_movement_direction, i);\n        if (tmpMovementDirection[j] === -1) {\n          movementDirection += 180;\n        } else if (tmpMovementDirection[j] === 0) {\n          movementDirection = Math.floor(Math.random() * 360);\n          randomWalk = getValueFromArrayOrNot(random_movement_type, i);\n        }\n        if (\n          experimentMode === 2 &&\n          mainTask === 0 &&\n          tmpOrientation[j] === 0 &&\n          tmpMovementDirection[j] != 1\n        ) {\n          orientation = movementDirection;\n        } else if (\n          experimentMode === 2 &&\n          mainTask === 1 &&\n          tmpMovementDirection[j] === 0 &&\n          tmpOrientation[j] != 1\n        ) {\n          movementDirection = orientation;\n        }\n\n        let oob;\n\n        let ctx = ctxArray[i];\n        let cvs = canvasArray[i];\n        if (aperture_mode !== \"overlay\") {\n          ctx = ctxArray[0];\n          cvs = canvasArray[0];\n        }\n\n        if (stimulusType === 0) {\n          oob = new Oob(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 1) {\n          oob = new OobCircle(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 2) {\n          oob = new OobSquare(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 3) {\n          oob = new OobBird(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            cvs,\n            ctx,\n            units\n          );\n        } else if (stimulusType === 4) {\n          let imageArray, keyframes, keyframeTime, mirrorType;\n          if (nAperturesTmp === 1) {\n            imageArray = img;\n            keyframes = stimulus_image_keyframes;\n            keyframeTime = stimulus_keyframe_time;\n            mirrorType = stimulus_mirror;\n          } else {\n            imageArray = getValueFromArrayOrNot(img, i);\n            keyframes = getValueFromArrayOrNot(stimulus_image_keyframes, i);\n            keyframeTime = getValueFromArrayOrNot(stimulus_keyframe_time, i);\n            mirrorType = getValueFromArrayOrNot(stimulus_mirror, i);\n          }\n\n          oob = new OobImage(\n            size,\n            oobColor,\n            orientation,\n            movementDirection,\n            speed,\n            speedRandomisation,\n            apertureType,\n            randomWalk,\n            randomOrient,\n            isFade,\n            imageArray,\n            keyframes,\n            keyframeTime,\n            mirrorType,\n            cvs,\n            ctx,\n            units\n          );\n        }\n        oobs.push(oob);\n      }\n    }\n\n    oobs = shuffleArray(oobs);\n\n    //--------RDK variables and function calls end--------\n\n    //-------------------------------------\n    //-----------FUNCTIONS BEGIN-----------\n    //-------------------------------------\n\n    //----JsPsych Functions Begin----\n\n    //Function to start the keyboard listener\n    const startKeyboardListener = () => {\n      //Start the response listener if there are choices for keys\n      if (choices != \"NO_KEYS\") {\n        //Create the keyboard listener to listen for subjects' key response\n        keyboardListener = this.jsPsych.pluginAPI.getKeyboardResponse({\n          callback_function: after_response, //Function to call once the subject presses a valid key\n          valid_responses: choices, //The keys that will be considered a valid response and cause the callback function to be called\n          rt_method: \"performance\", //The type of method to record timing information.\n          persist: false, //If set to false, keyboard listener will only trigger the first time a valid key is pressed. If set to true, it has to be explicitly cancelled by the cancelKeyboardResponse plugin API.\n          allow_held_key: false, //Only register the key once, after this getKeyboardResponse function is called. (Check JsPsych docs for better info under 'jsPsych.pluginAPI.getKeyboardResponse').\n        });\n      }\n    };\n\n    //Function to end the trial proper\n    const end_trial = () => {\n      //Stop the dot motion animation\n      stopOobMotion = true;\n\n      //Store the number of frames\n      numberOfFrames = (frameRate as number[]).length;\n\n      //Variable to store the frame rate array\n      let frameRateArray = frameRate;\n\n      //Calculate the average frame rate\n      if (numberOfFrames > 0) {\n        //Check to make sure that the array is not empty\n        frameRate =\n          (frameRate as number[]).reduce((total, current) => total + current) / numberOfFrames; //Sum up all the elements in the array\n      } else {\n        frameRate = 0; //Set to zero if the subject presses an answer before a frame is shown (i.e. if frameRate is an empty array)\n      }\n\n      //Cancel the keyboard listener if keyboardListener has been defined\n      if (typeof keyboardListener !== \"undefined\") {\n        this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);\n      }\n\n      //Place all the data to be saved from this trial in one data object\n      let trial_data = {\n        rt: response.rt, //The response time\n        key_press: response.key, //The key that the subject pressed\n        correct: correctOrNot(), //If the subject response was correct\n        choices: choices, //The set of valid keys\n        correct_choice: correct_choice, //The correct choice\n        trial_duration: trial_duration, //The trial duration\n        response_ends_trial: response_ends_trial, //If the response ends the trial\n        number_of_oobs: number_of_oobs,\n        coherent_movement_direction: coherent_movement_direction,\n        coherence_movement: coherence_movement,\n        opposite_coherence_movement: coherence_movement_opposite,\n        coherent_orientation: coherent_orientation,\n        coherence_orientation: coherence_orientation,\n        opposite_coherence_orientation: coherence_orientation_opposite,\n        movement_speed: movement_speed,\n        oob_size: oob_size,\n        oob_color: oob_color,\n        movement_speed_randomisation: movement_speed_randomisation,\n        aperture_width: aperture_width,\n        aperture_height: aperture_height,\n        background_color: background_color,\n        aperture_background_color: aperture_background_color,\n        frame_rate: frameRate, //The average frame rate for the trial\n        frame_rate_array: frameRateArray, //The array of ms per frame in this trial, in the form of a JSON string\n        number_of_frames: numberOfFrames, //The number of frames in this trial\n        stimulus_type: stimulus_type,\n        aperture_shape: aperture_shape,\n        random_movemet_type: random_movement_type,\n        random_orientation_type: random_orientation_type,\n        number_of_apertures: number_of_apertures,\n        density_unit_area: density_unit_area,\n        prompt: prompt,\n        aperture_position_left: aperture_position_left,\n        aperture_position_top: aperture_position_top,\n        aperture_mode: aperture_mode,\n      };\n\n      //Clear the body\n      display_element.innerHTML = \"\";\n\n      //Restore the settings to JsPsych defaults\n      body.style.margin = originalMargin;\n      body.style.padding = originalPadding;\n      body.style.backgroundColor = originalBackgroundColor;\n\n      //End this trial and move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n    }; //End of end_trial\n\n    //start animation\n    animateDotMotion();\n\n    //Function to record the first response by the subject\n    function after_response(info) {\n      //If the response has not been recorded, record it\n      if (response.key == \"\") {\n        response = info; //Replace the response object created above\n      }\n\n      //If the parameter is set such that the response ends the trial, then kill the timeout and end the trial\n      if (response_ends_trial) {\n        window.clearTimeout(timeoutID);\n        end_trial();\n      }\n    } //End of after_response\n\n    //Function that determines if the response is correct\n    const correctOrNot = () => {\n      //Check that the correct_choice has been defined and that it is an array\n      if (typeof correct_choice !== \"undefined\" && correct_choice.constructor === Array) {\n        if (typeof correct_choice[0] === \"string\" || correct_choice[0] instanceof String) {\n          var key_in_choices = correct_choice.every((x: string) => {\n            return this.jsPsych.pluginAPI.compareKeys(x, response.key);\n          });\n          return key_in_choices; //If the response is included in the correct_choice array, return true. Else, return false.\n        } else if (typeof correct_choice[0] === \"number\") {\n          // the elements are numbers (javascript character codes)\n          console.error(\n            \"Error in ROK plugin: elements in the correct_choice array must be key characters (strings).\"\n          );\n          return false; // added due to TS error: not all code paths return a value\n        } else {\n          console.error(\n            \"Error in ROK plugin: elements in the correct_choice array must be key characters (strings).\"\n          );\n          return false; // added due to TS error: not all code paths return a value\n        }\n      } else {\n        console.error(\n          \"Error in ROK plugin: you must specify an array of key characters for the correct_choice parameter.\"\n        );\n        return false; // added due to TS error: not all code paths return a value\n      }\n    };\n\n    //Function that clears the dots on the canvas by drawing over it with the color of the baclground\n\n    function update(deltaTime) {\n      for (let i = 0; i < oobs.length; i++) {\n        oobs[i].update(deltaTime);\n      }\n    }\n\n    //Draw the dots on the canvas after they're updated\n    function draw() {\n      for (let i = 0; i < canvasArray.length; i++) {\n        ctxArray[i].clearRect(0, 0, canvasArray[i].width, canvasArray[i].height);\n      }\n      for (let i = 0; i < oobs.length; i++) {\n        oobs[i].draw();\n      }\n    } //End of draw\n\n    //Function to make the dots move on the canvas\n    function animateDotMotion() {\n      let previousTimestamp;\n      let dT = 0;\n      //frameRequestID saves a long integer that is the ID of this frame request. The ID is then used to terminate the request below.\n      let frameRequestID = window.requestAnimationFrame(animate);\n\n      //Start to listen to subject's key responses\n      startKeyboardListener();\n\n      //Declare a timestamp\n\n      function animate() {\n        //If stopping condition has been reached, then stop the animation\n        if (stopOobMotion) {\n          window.cancelAnimationFrame(frameRequestID); //Cancels the frame request\n        }\n        //Else continue with another frame request\n        else {\n          frameRequestID = window.requestAnimationFrame(animate); //Calls for another frame request\n\n          //If the timer has not been started and it is set, then start the timer\n          if (!timerHasStarted && trial_duration > 0) {\n            //If the trial duration is set, then set a timer to count down and call the end_trial function when the time is up\n            //(If the subject did not press a valid keyboard response within the trial duration, then this will end the trial)\n            timeoutID = window.setTimeout(end_trial, trial_duration); //This timeoutID is then used to cancel the timeout should the subject press a valid key\n            //The timer has started, so we set the variable to true so it does not start more timers\n            timerHasStarted = true;\n          }\n\n          update(dT);\n\n          draw(); //Draw each of the dots in their respective apertures\n\n          //If this is before the first frame, then start the timestamp\n          if (previousTimestamp === undefined) {\n            previousTimestamp = performance.now();\n          }\n          //Else calculate the time and push it into the array\n          else {\n            let currentTimeStamp = performance.now(); //Variable to hold current timestamp\n            if (document.hasFocus()) {\n              dT = currentTimeStamp - previousTimestamp;\n            } else {\n              previousTimestamp = performance.now();\n            }\n\n            (frameRate as number[]).push(Math.round(currentTimeStamp - previousTimestamp)); //Push the interval into the frameRate array\n            previousTimestamp = currentTimeStamp; //Reset the timestamp\n          }\n        }\n      }\n    }\n\n    //----RDK Functions End----\n\n    //----General Functions Begin//----\n\n    //Function to assign the default values for the staircase parameters\n    function assignParameterValue(argument, defaultValue) {\n      return typeof argument !== \"undefined\" ? argument : defaultValue;\n    }\n\n    //----General Functions End//----\n\n    //-------------------------------------\n    //-----------FUNCTIONS END-------------\n    //-------------------------------------\n  } // END OF TRIAL\n}\n\n//Return the plugin object which contains the trial\n//----RDK Functions End----\n\n//----General Functions Begin//----\n\n//Function to assign the default values for the staircase parameters\n\n//----General Functions End//----\n\n//-------------------------------------\n//-----------FUNCTIONS END-------------\n//-------------------------------------\n\nexport default RokPlugin;\n\nfunction getValueFromArrayOrNot(arrayOrNot, l) {\n  if (Array.isArray(arrayOrNot)) {\n    return arrayOrNot[l];\n  }\n  return arrayOrNot;\n}\n\nfunction standardColor(color) {\n  let cvs = document.createElement(\"canvas\");\n  cvs.height = 1;\n  cvs.width = 1;\n  let ctx = cvs.getContext(\"2d\");\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.getImageData(0, 0, 1, 1).data;\n}\n\nfunction brighten(color, value) {\n  let col = [0, 0, 0, 255];\n  for (let i = 0; i < 3; i++) {\n    let tmp = color[i] + value;\n    tmp = tmp > 255 ? 255 : tmp;\n    tmp = tmp < 0 ? 0 : tmp;\n    col[i] = tmp;\n  }\n  return col;\n}\n\nfunction byteToHex(num) {\n  // Turns a number (0-255) into a 2-character hex number (00-ff)\n  return (\"0\" + num.toString(16)).slice(-2);\n}\n\nfunction stdColorToHex(color) {\n  // Convert any CSS color to a hex representation\n  // Examples:\n  // colorToHex('red')            # '#ff0000'\n  // colorToHex('rgb(255, 0, 0)') # '#ff0000'\n  let hex;\n  hex = [0, 1, 2]\n    .map(function (idx) {\n      return byteToHex(color[idx]);\n    })\n    .join(\"\");\n  return \"#\" + hex;\n}\n\nfunction getX(angle) {\n  let rad = (angle * Math.PI) / 180;\n  return Math.cos(rad);\n}\n\nfunction getY(angle) {\n  let rad = (angle * Math.PI) / 180;\n  return -Math.sin(rad);\n}\n\nfunction getNumbers(per, perOpp, n) {\n  let nC = Math.round((per / 100) * n);\n  let nCO;\n  if (per + perOpp == 100) {\n    nCO = n - nC;\n  } else {\n    nCO = Math.round((perOpp / 100) * n);\n  }\n  let nR = n - nC - nCO;\n  if (nC + nCO > 100 && per == 50) {\n    nC = 100 - nCO;\n  }\n  return [nC, nCO, nR];\n}\n\nfunction shuffleArray(array) {\n  let curId = array.length;\n  // There remain elements to shuffle\n  while (0 !== curId) {\n    // Pick a remaining element\n    let randId = Math.floor(Math.random() * curId);\n    curId -= 1;\n    // Swap it with the current element.\n    let tmp = array[curId];\n    array[curId] = array[randId];\n    array[randId] = tmp;\n  }\n  return array;\n}\n\nfunction shuffleArraysParalell(arrays) {\n  for (let j = arrays[0].length - 1; j > 0; j--) {\n    for (let i = 0; i < arrays.length; i++) {\n      const k = Math.floor(Math.random() * (j + 1));\n      [arrays[i][j], arrays[i][k]] = [arrays[i][k], arrays[i][j]];\n    }\n  }\n}\n\nfunction getOffset(el) {\n  const rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY,\n  };\n}\n\n/// O(rientated) ob(ject)\nclass Oob {\n  protected canvas: any;\n  protected size: number;\n  protected color: any;\n  protected ctx: any;\n  protected pos: {\n    y: number;\n    x: number;\n  };\n  protected vel: {\n    x: number;\n    y: number;\n  };\n  protected alpha: number;\n  protected speedRes: number;\n  protected orientation: any;\n  protected movementDirection: any;\n  protected ld: {\n    y: number;\n    x: number;\n  };\n  protected lu: {\n    y: number;\n    x: number;\n  };\n  protected r: {\n    y: number;\n    x: number;\n  };\n  protected isRandomWalk: any;\n  protected rW: number;\n  protected rO: number;\n  protected isRandomOrientated: any;\n  protected apertureType: any;\n  protected timeToChangeMovement: number;\n  protected timeToChangeOrientation: number;\n  protected isFade: any;\n\n  constructor(\n    size,\n    color,\n    orientation,\n    movementDirection,\n    speed,\n    randomisation,\n    apertureType,\n    isRandomWalk,\n    isRandomOrientated,\n    isFade,\n    canvas,\n    ctx,\n    units\n  ) {\n    this.canvas = canvas;\n    if (units === \"px\") {\n    }\n    this.size = (canvas.width * size) / 100;\n    if (units === \"px\") {\n      this.size = size;\n    }\n    this.color = color;\n    this.ctx = ctx;\n    this.pos = { x: 0, y: 0 };\n    this.vel = { x: 0, y: 0 };\n    if (apertureType == 0) {\n      this.pos.x = Math.random() * canvas.width;\n      this.pos.y = Math.random() * canvas.height;\n    }\n    if (apertureType == 1) {\n      let angle = Math.random() * 2 * Math.PI;\n      let r = Math.sqrt(Math.sqrt(Math.random())) - 0.5;\n      this.pos.x = r * Math.sin(angle) * canvas.width + canvas.width / 2;\n      this.pos.y = r * Math.cos(angle) * canvas.height + canvas.height / 2;\n    }\n    this.speedRes =\n      ((canvas.width * speed) / 100) *\n      (1 + ((randomisation / 100) * Math.random() - randomisation / 100));\n    if (units === \"px\") {\n      this.speedRes = speed * (1 + ((randomisation / 100) * Math.random() - randomisation / 100));\n    }\n    this.orientation = orientation;\n    this.movementDirection = movementDirection;\n    this.setVel();\n    // corners of triangle rel\n    this.ld = { x: 0, y: 0 };\n    this.lu = { x: 0, y: 0 };\n    this.r = { x: 0, y: 0 };\n    this.setOrient();\n    this.isRandomWalk = isRandomWalk;\n    this.rW = (Math.random() - 0.5) * 10;\n    this.isRandomOrientated = isRandomOrientated;\n    this.rO = (Math.random() - 0.5) * 10;\n    this.apertureType = apertureType;\n    this.timeToChangeMovement = Math.random();\n    this.timeToChangeOrientation = Math.random();\n    this.isFade = isFade;\n    this.alpha = 1;\n  }\n\n  setVel() {\n    this.vel.x = getX(this.movementDirection) * this.speedRes;\n    this.vel.y = getY(this.movementDirection) * this.speedRes;\n  }\n\n  setOrient() {\n    this.ld.x = getX(this.orientation + 270) * this.size;\n    this.ld.y = getY(this.orientation + 270) * this.size;\n    this.lu.x = getX(this.orientation + 90) * this.size;\n    this.lu.y = getY(this.orientation + 90) * this.size;\n    this.r.x = getX(this.orientation) * this.size;\n    this.r.y = getY(this.orientation) * this.size;\n  }\n\n  randomMovement(deltaTime) {\n    this.movementDirection += (this.rW * deltaTime) / 1000;\n    this.setVel();\n    this.timeToChangeMovement += deltaTime / 1000;\n    let d = 1 - this.timeToChangeMovement;\n    if (d < 0) {\n      this.rW = (Math.random() - 0.5) * 30;\n      this.timeToChangeMovement = -d;\n    }\n  }\n\n  randomOrientation(deltaTime) {\n    this.orientation += (this.rO * deltaTime) / 1000;\n    if (this.orientation < 0) {\n      this.orientation = 360 - this.orientation;\n    } else if (this.orientation > 360) {\n      this.orientation = this.orientation - 360;\n    }\n    this.setOrient();\n    this.timeToChangeOrientation += deltaTime / 1000;\n    let d = 1 - this.timeToChangeOrientation;\n    if (d < 0) {\n      this.rO = (Math.random() - 0.5) * 60;\n      this.setOrient();\n      this.timeToChangeOrientation = -d;\n    }\n  }\n\n  handleOutOfBounds() {\n    if (this.apertureType == 0) {\n      this.alpha = 0.1;\n      if (this.pos.x < -this.size) {\n        this.pos.x = this.canvas.width + this.size;\n      } else if (this.pos.x > this.canvas.width + this.size) {\n        this.pos.x = -this.size;\n      }\n      if (this.pos.y < -this.size) {\n        this.pos.y = this.canvas.height + this.size;\n      } else if (this.pos.y > this.canvas.height + this.size) {\n        this.pos.y = -this.size;\n      }\n      let d = Math.min(\n        this.pos.x - this.size,\n        this.pos.y - this.size,\n        this.canvas.width - (this.pos.x + this.size),\n        this.canvas.height - (this.pos.y + this.size)\n      );\n      if (d < this.canvas.width / 20 && this.isFade) {\n        this.alpha = d / (this.canvas.width / 20);\n        if (this.alpha < 0) this.alpha = 0;\n      } else {\n        this.alpha = 1;\n      }\n    }\n    if (this.apertureType == 1) {\n      this.alpha = 0.1;\n      let a = this.canvas.width / 2;\n      let b = this.canvas.height / 2;\n      let x = this.pos.x - a;\n      let y = this.pos.y - b;\n      let d = (x * x) / (a * a) + (y * y) / (b * b);\n      if (d > 0.7 && this.isFade) {\n        this.alpha = (1 - d) / 0.3;\n        if (this.alpha < 0) this.alpha = 0;\n      } else {\n        this.alpha = 1;\n      }\n      if (d > 1) {\n        // (a + this.size / 2) * (a + this.size / 2) + (b + this.size / 2) * (b + this.size / 2)) {\n        x *= -0.99;\n        y *= -0.99;\n        this.pos.x = x + a;\n        this.pos.y = y + b;\n      }\n    }\n  }\n\n  // deltaTime is given in ms!\n  update(deltaTime) {\n    // updatePosition\n    this.pos.x += (this.vel.x * deltaTime) / 1000;\n    this.pos.y += (this.vel.y * deltaTime) / 1000;\n    if (this.isRandomWalk) this.randomMovement(deltaTime);\n    if (this.isRandomOrientated) this.randomOrientation(deltaTime);\n    this.handleOutOfBounds();\n  }\n\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.beginPath();\n    let x = this.pos.x + this.ld.x;\n    let y = this.pos.y + this.ld.y;\n    this.ctx.moveTo(x, y);\n    x = this.pos.x + this.lu.x;\n    y = this.pos.y + this.lu.y;\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.r.x;\n    y = this.pos.y + this.r.y;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n}\n\nclass OobBird extends Oob {\n  protected animationTime: number;\n  protected animationFrame: number;\n  protected animdir: number;\n  protected colorsLeft: any[];\n  protected colorsRight: any[];\n\n  constructor(\n    size,\n    color,\n    orientation,\n    movementDirection,\n    speed,\n    randomisation,\n    apertureType,\n    isRandomWalk,\n    isRandomOrientated,\n    isFade,\n    canvas,\n    ctx,\n    units\n  ) {\n    super(\n      size,\n      color,\n      orientation,\n      movementDirection,\n      speed,\n      randomisation,\n      apertureType,\n      isRandomWalk,\n      isRandomOrientated,\n      isFade,\n      canvas,\n      ctx,\n      units\n    );\n    this.animationTime = Math.random();\n    this.animationFrame = 4;\n    if (this.animationTime < 0.8) this.animationFrame = 3;\n    if (this.animationTime < 0.6) this.animationFrame = 2;\n    if (this.animationTime < 0.4) this.animationFrame = 1;\n    if (this.animationTime < 0.2) this.animationFrame = 0;\n    this.animationTime *= 0.1;\n    this.animdir = 1;\n    let stdColor = color;\n    this.makeColors(stdColor, orientation);\n  }\n\n  makeColors(color, orientation) {\n    this.colorsLeft = [];\n    this.colorsRight = [];\n    let brightenStartR = Math.round(-getY(orientation) * 5);\n    let brightenStartL = Math.round(getX(orientation) * 5);\n    let colR = brighten(color, brightenStartR);\n    let colL = brighten(color, brightenStartL);\n    this.colorsRight.push(stdColorToHex(colR));\n    this.colorsLeft.push(stdColorToHex(colL));\n    for (let i = 0; i < 6; i++) {\n      colR = brighten(colR, brightenStartR);\n      colL = brighten(colL, brightenStartL);\n      this.colorsRight.push(stdColorToHex(colR));\n      this.colorsLeft.push(stdColorToHex(colL));\n    }\n  }\n\n  update(deltaTime) {\n    super.update(deltaTime);\n    this.animationTime += deltaTime / 1000;\n    let d = 0.1 - this.animationTime;\n    if (d < 0) {\n      this.animationFrame += this.animdir;\n      this.animationTime = -d;\n      if (this.animationFrame > 5 || this.animationFrame < 1) {\n        this.animationTime -= 0.1;\n        this.animdir *= -1;\n      }\n    }\n    //this.animationFrame = 5;\n  }\n\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    let px = this.pos.x + 0.2 * this.r.x;\n    let py = this.pos.y + 0.2 * this.r.y;\n    this.ctx.beginPath();\n    this.ctx.moveTo(px, py);\n    let x = this.pos.x + this.ld.x / (this.animationFrame * 0.1 + 1);\n    let y = this.pos.y + this.ld.y / (this.animationFrame * 0.1 + 1);\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.r.x;\n    y = this.pos.y + this.r.y;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.colorsRight[this.animationFrame];\n    this.ctx.fill();\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(px, py);\n    x = this.pos.x + this.lu.x / (this.animationFrame * 0.1 + 1);\n    y = this.pos.y + this.lu.y / (this.animationFrame * 0.1 + 1);\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.r.x;\n    y = this.pos.y + this.r.y;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.colorsLeft[this.animationFrame];\n    this.ctx.fill();\n  }\n}\n\nclass OobCircle extends Oob {\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.beginPath();\n    this.ctx.arc(this.pos.x, this.pos.y, this.size / 2, 0, Math.PI * 2);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n}\n\nclass OobSquare extends Oob {\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.beginPath();\n    let x = this.pos.x - this.size / 2;\n    let y = this.pos.y - this.size / 2;\n    this.ctx.moveTo(x, y);\n    x = this.pos.x + this.size / 2;\n    y = this.pos.y - this.size / 2;\n    this.ctx.lineTo(x, y);\n    x = this.pos.x + this.size / 2;\n    y = this.pos.y + this.size / 2;\n    this.ctx.lineTo(x, y);\n    x = this.pos.x - this.size / 2;\n    y = this.pos.y + this.size / 2;\n    this.ctx.lineTo(x, y);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n  }\n}\n\nclass OobImage extends Oob {\n  private img: any;\n  private keyframes: any;\n  private keyframeTime: any;\n  private mirrorType: any;\n  private imgWidth: number;\n  private imgHeight: number;\n  private actualKeyframe: number;\n  private animationTime: number;\n\n  constructor(\n    size,\n    color,\n    orientation,\n    movementDirection,\n    speed,\n    randomisation,\n    apertureType,\n    isRandomWalk,\n    isRandomOrientated,\n    isFade,\n    imageArray,\n    keyframes,\n    keyframeTime,\n    mirrorType,\n    canvas,\n    ctx,\n    units\n  ) {\n    super(\n      size,\n      color,\n      orientation,\n      movementDirection,\n      speed,\n      randomisation,\n      apertureType,\n      isRandomWalk,\n      isRandomOrientated,\n      isFade,\n      canvas,\n      ctx,\n      units\n    );\n    if (Array.isArray(imageArray)) {\n      let i = Math.floor(Math.random() * imageArray.length);\n      this.img = imageArray[i];\n      this.keyframes = getValueFromArrayOrNot(keyframes, i);\n      this.keyframeTime = getValueFromArrayOrNot(keyframeTime, i);\n      this.mirrorType = getValueFromArrayOrNot(mirrorType, i);\n    } else {\n      this.img = imageArray;\n      this.keyframes = keyframes;\n      this.keyframeTime = keyframeTime;\n      this.mirrorType = mirrorType;\n    }\n    this.imgWidth = this.img.naturalWidth / this.keyframes;\n    this.imgHeight = this.img.naturalHeight;\n    this.actualKeyframe = Math.floor(Math.random() * this.keyframes);\n    this.animationTime = Math.random() * this.keyframeTime;\n  }\n\n  update(deltaTime) {\n    super.update(deltaTime);\n    this.animationTime += deltaTime / 1000;\n    let d = this.keyframeTime - this.animationTime;\n    if (d < 0) {\n      this.animationTime = 0;\n      this.actualKeyframe++;\n      if (this.actualKeyframe >= this.keyframes) this.actualKeyframe = 0;\n    }\n  }\n\n  draw() {\n    this.ctx.globalAlpha = this.alpha;\n    this.ctx.translate(this.pos.x, this.pos.y);\n    if (this.mirrorType === 0) {\n      this.ctx.rotate((-Math.PI * this.orientation) / 180);\n    } else if (this.mirrorType == 1) {\n      if (this.orientation > 90 && this.orientation < 270) {\n        this.ctx.rotate((-Math.PI * (this.orientation - 180)) / 180);\n      } else {\n        this.ctx.rotate((-Math.PI * this.orientation) / 180);\n      }\n    }\n    this.ctx.translate(-this.pos.x, -this.pos.y);\n    if (this.mirrorType === 0) {\n      this.ctx.drawImage(\n        this.img,\n        this.actualKeyframe * this.imgWidth,\n        0,\n        this.imgWidth,\n        this.imgHeight,\n        this.pos.x - this.size / 2,\n        this.pos.y - this.size / 2,\n        this.size,\n        this.size\n      );\n    } else if (this.mirrorType === 1) {\n      if (this.orientation > 90 && this.orientation < 270) {\n        this.ctx.drawImage(\n          this.img,\n          this.actualKeyframe * this.imgWidth,\n          this.imgHeight / 2,\n          this.imgWidth,\n          this.imgHeight / 2,\n          this.pos.x - this.size / 2,\n          this.pos.y - this.size / 2,\n          this.size,\n          this.size\n        );\n      } else {\n        this.ctx.drawImage(\n          this.img,\n          this.actualKeyframe * this.imgWidth,\n          0,\n          this.imgWidth,\n          this.imgHeight / 2,\n          this.pos.x - this.size / 2,\n          this.pos.y - this.size / 2,\n          this.size,\n          this.size\n        );\n      }\n    }\n    this.ctx.translate(this.pos.x, this.pos.y);\n    if (this.mirrorType === 0) {\n      this.ctx.rotate((Math.PI * this.orientation) / 180);\n    } else if (this.mirrorType === 1) {\n      if (this.orientation > 90 && this.orientation < 270) {\n        this.ctx.rotate((Math.PI * (this.orientation - 180)) / 180);\n      } else {\n        this.ctx.rotate((Math.PI * this.orientation) / 180);\n      }\n    }\n    this.ctx.translate(-this.pos.x, -this.pos.y);\n  }\n}\n"],"names":["info","name","parameters","choices","type","ParameterType","KEYS","pretty_name","default","correct_choice","undefined","trial_duration","INT","response_ends_trial","BOOL","number_of_oobs","coherent_movement_direction","coherent_orientation","coherence_movement","coherence_orientation","coherence_movement_opposite","coherence_orientation_opposite","movement_speed","movement_speed_randomisation","oob_size","aperture_width","aperture_height","oob_color","STRING","background_color","border","border_thickness","border_color","stimulus_type","aperture_shape","aperture_background_color","random_movement_type","random_orientation_type","number_of_apertures","density_unit_area","aperture_position_left","aperture_position_top","prompt","fade_out","stimulus_image","IMAGE","background_image","stimulus_image_keyframes","background_image_keyframes","stimulus_keyframe_time","FLOAT","stimulus_mirror","experiment_congruency_mode","experiment_main_task","units","aperture_draw_mode","RokPlugin","constructor","jsPsych","this","trial","display_element","assignParameterValue","aperture_mode","nApertures","nAperturesTmp","canvasArray","containerArray","i","push","document","createElement","getValueFromArrayOrNot","style","backgroundImage","backgroundRepeat","backgroundSize","appendChild","Array","isArray","p","margin","padding","textAlign","innerHTML","position","transform","top","width","body","getElementsByClassName","originalMargin","originalPadding","originalBackgroundColor","backgroundColor","ctxArray","getContext","disp_size","getBoundingClientRect","height","Math","round","toString","left","x","timeoutID","keyboardListener","stopOobMotion","timerHasStarted","response","rt","key","frameRate","numberOfFrames","img","imgSrc","j","length","iS","k","src","oobs","nOob","tmpCoherenceMovement","tmpOppositeCoherenceMovement","tmpCoherenceOrientation","tmpOppositeCoherenceOrientation","experimentMode","mainTask","tmpOrientation","tmpMovementDirection","nCoherentMovement","nCoherentOppositeMovement","nIncoherentMovement","getNumbers","nCoherentOrientation","nCoherentOppositeOrientation","nIncoherentOrientation","shuffleArray","floor","oobColor","stimulusType","standardColor","apertureType","speed","speedRandomisation","size","isFade","randomWalk","randomOrient","orientation","random","oob","movementDirection","ctx","cvs","Oob","OobCircle","OobSquare","OobBird","imageArray","keyframes","keyframeTime","mirrorType","OobImage","startKeyboardListener","pluginAPI","getKeyboardResponse","callback_function","after_response","valid_responses","rt_method","persist","allow_held_key","end_trial","frameRateArray","reduce","total","current","cancelKeyboardResponse","trial_data","key_press","correct","correctOrNot","opposite_coherence_movement","opposite_coherence_orientation","frame_rate","frame_rate_array","number_of_frames","random_movemet_type","finishTrial","window","clearTimeout","previousTimestamp","dT","frameRequestID","requestAnimationFrame","animate","cancelAnimationFrame","setTimeout","deltaTime","update","clearRect","draw","performance","now","currentTimeStamp","hasFocus","animateDotMotion","String","every","compareKeys","console","error","argument","defaultValue","arrayOrNot","l","color","fillStyle","fillRect","getImageData","data","brighten","value","col","tmp","stdColorToHex","hex","map","idx","slice","join","getX","angle","rad","PI","cos","getY","sin","per","perOpp","n","nCO","nC","nR","array","curId","randId","randomisation","isRandomWalk","isRandomOrientated","canvas","pos","y","vel","r","sqrt","speedRes","setVel","ld","lu","setOrient","rW","rO","timeToChangeMovement","timeToChangeOrientation","alpha","randomMovement","d","randomOrientation","handleOutOfBounds","min","a","b","globalAlpha","beginPath","moveTo","lineTo","fill","super","animationTime","animationFrame","animdir","stdColor","makeColors","colorsLeft","colorsRight","brightenStartR","brightenStartL","colR","colL","px","py","arc","imgWidth","naturalWidth","imgHeight","naturalHeight","actualKeyframe","translate","rotate","drawImage"],"mappings":"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"}